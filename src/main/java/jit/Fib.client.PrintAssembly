Compiled method (c1)      38    1       2       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x000000011d13e010,0x000000011d13e468] = 1112
 relocation     [0x000000011d13e188,0x000000011d13e1b0] = 40
 main code      [0x000000011d13e1c0,0x000000011d13e2e0] = 288
 stub code      [0x000000011d13e2e0,0x000000011d13e310] = 48
 metadata       [0x000000011d13e310,0x000000011d13e318] = 8
 scopes data    [0x000000011d13e318,0x000000011d13e380] = 104
 scopes pcs     [0x000000011d13e380,0x000000011d13e450] = 208
 dependencies   [0x000000011d13e450,0x000000011d13e458] = 8
 nul chk table  [0x000000011d13e458,0x000000011d13e468] = 16
Loaded disassembler from /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib/server/hsdis-amd64.dylib
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x000000011d13e1c0, 0x000000011d13e310]  336 bytes
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6fd508} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x000000011d13e1c0: mov    %eax,-0x14000(%rsp)
  0x000000011d13e1c7: push   %rbp
  0x000000011d13e1c8: sub    $0x30,%rsp
  0x000000011d13e1cc: movabs $0x14f6ffd18,%rax
  0x000000011d13e1d6: mov    0x18(%rax),%edi
  0x000000011d13e1d9: add    $0x8,%edi
  0x000000011d13e1dc: mov    %edi,0x18(%rax)
  0x000000011d13e1df: and    $0x3ff8,%edi
  0x000000011d13e1e5: cmp    $0x0,%edi
  0x000000011d13e1e8: je     0x000000011d13e25d  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@0 (line 194)

  0x000000011d13e1ee: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ; implicit exception: dispatches to 0x000000011d13e27e
  0x000000011d13e1f1: mov    $0x0,%edi
  0x000000011d13e1f6: mov    $0x0,%ebx
  0x000000011d13e1fb: jmpq   0x000000011d13e246  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10 (line 195)

  0x000000011d13e200: movslq %edi,%rdx
  0x000000011d13e203: movsbl 0x10(%rsi,%rdx,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)

  0x000000011d13e208: mov    %rbx,%rcx
  0x000000011d13e20b: shl    $0x5,%ebx
  0x000000011d13e20e: sub    %ecx,%ebx
  0x000000011d13e210: and    $0xff,%edx
  0x000000011d13e216: add    %edx,%ebx
  0x000000011d13e218: inc    %edi
  0x000000011d13e21a: movabs $0x14f6ffd18,%rdx
  0x000000011d13e224: mov    0x1c(%rdx),%ecx
  0x000000011d13e227: add    $0x8,%ecx
  0x000000011d13e22a: mov    %ecx,0x1c(%rdx)
  0x000000011d13e22d: and    $0x1fff8,%ecx
  0x000000011d13e233: cmp    $0x0,%ecx
  0x000000011d13e236: je     0x000000011d13e283  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x000000011d13e23c: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x000000011d13e243: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ;   {poll}
  0x000000011d13e246: cmp    %eax,%edi
  0x000000011d13e248: jl     0x000000011d13e200  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x000000011d13e24a: mov    %rbx,%rax
  0x000000011d13e24d: add    $0x30,%rsp
  0x000000011d13e251: pop    %rbp
  0x000000011d13e252: mov    0x108(%r15),%r10
  0x000000011d13e259: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13e25c: retq   
  0x000000011d13e25d: movabs $0x14f6fd508,%r10  ;   {metadata({method} {0x000000014f6fd508} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000000011d13e267: mov    %r10,0x8(%rsp)
  0x000000011d13e26c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d13e274: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1 (line 194)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13e279: jmpq   0x000000011d13e1ee
  0x000000011d13e27e: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d13e283: movabs $0x14f6fd508,%r10  ;   {metadata({method} {0x000000014f6fd508} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000000011d13e28d: mov    %r10,0x8(%rsp)
  0x000000011d13e292: movq   $0x25,(%rsp)
  0x000000011d13e29a: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13e29f: jmp    0x000000011d13e23c
  0x000000011d13e2a1: nop
  0x000000011d13e2a2: nop
  0x000000011d13e2a3: mov    0x420(%r15),%rax
  0x000000011d13e2aa: movabs $0x0,%r10
  0x000000011d13e2b4: mov    %r10,0x420(%r15)
  0x000000011d13e2bb: movabs $0x0,%r10
  0x000000011d13e2c5: mov    %r10,0x428(%r15)
  0x000000011d13e2cc: add    $0x30,%rsp
  0x000000011d13e2d0: pop    %rbp
  0x000000011d13e2d1: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d13e2d6: hlt    
  0x000000011d13e2d7: hlt    
  0x000000011d13e2d8: hlt    
  0x000000011d13e2d9: hlt    
  0x000000011d13e2da: hlt    
  0x000000011d13e2db: hlt    
  0x000000011d13e2dc: hlt    
  0x000000011d13e2dd: hlt    
  0x000000011d13e2de: hlt    
  0x000000011d13e2df: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d13e2e0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d13e2e5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d13e2ef: and    $0xfffffffffffffff0,%rsp
  0x000000011d13e2f3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d13e2f8: hlt    
[Deopt Handler Code]
  0x000000011d13e2f9: movabs $0x11d13e2f9,%r10  ;   {section_word}
  0x000000011d13e303: push   %r10
  0x000000011d13e305: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d13e30a: hlt    
  0x000000011d13e30b: hlt    
  0x000000011d13e30c: hlt    
  0x000000011d13e30d: hlt    
  0x000000011d13e30e: hlt    
  0x000000011d13e30f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 131 185 195 223 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.getObjectVolatile(Ljava/lang/Object;J)Ljava/lang/Object;  [0x00000001243711c0, 0x0000000124371440]  640 bytes
[Entry Point]
  # {method} {0x000000014f65cfa0} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x00000001243711c0: mov    0x8(%rsi),%r10d
  0x00000001243711c4: movabs $0x800000000,%r12
  0x00000001243711ce: add    %r12,%r10
  0x00000001243711d1: xor    %r12,%r12
  0x00000001243711d4: cmp    %r10,%rax
  0x00000001243711d7: je     0x00000001243711e8
  0x00000001243711dd: jmpq   0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x00000001243711e2: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00000001243711e8: mov    %eax,-0x14000(%rsp)
  0x00000001243711ef: push   %rbp
  0x00000001243711f0: mov    %rsp,%rbp
  0x00000001243711f3: sub    $0x40,%rsp
  0x00000001243711f7: mov    %rdx,0x8(%rsp)
  0x00000001243711fc: cmp    $0x0,%rdx
  0x0000000124371200: lea    0x8(%rsp),%rdx
  0x0000000124371205: cmove  0x8(%rsp),%rdx
  0x000000012437120b: mov    %rsi,(%rsp)
  0x000000012437120f: cmp    $0x0,%rsi
  0x0000000124371213: lea    (%rsp),%rsi
  0x0000000124371217: cmove  (%rsp),%rsi        ; ImmutableOopMap{[8]=Oop [0]=Oop }
  0x000000012437121c: vzeroupper 
  0x000000012437121f: movabs $0x12437121c,%r10  ;   {internal_word}
  0x0000000124371229: mov    %r10,0x328(%r15)
  0x0000000124371230: mov    %rsp,0x320(%r15)
  0x0000000124371237: cmpb   $0x0,-0x151b7164(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x000000012437123e: je     0x000000012437127a
  0x0000000124371244: push   %rsi
  0x0000000124371245: push   %rdx
  0x0000000124371246: push   %rcx
  0x0000000124371247: movabs $0x14f65cfa0,%rsi  ;   {metadata({method} {0x000000014f65cfa0} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x0000000124371251: mov    %r15,%rdi
  0x0000000124371254: test   $0xf,%esp
  0x000000012437125a: je     0x0000000124371272
  0x0000000124371260: sub    $0x8,%rsp
  0x0000000124371264: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000124371269: add    $0x8,%rsp
  0x000000012437126d: jmpq   0x0000000124371277
  0x0000000124371272: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000124371277: pop    %rcx
  0x0000000124371278: pop    %rdx
  0x0000000124371279: pop    %rsi
  0x000000012437127a: lea    0x340(%r15),%rdi
  0x0000000124371281: movl   $0x4,0x3b8(%r15)
  0x000000012437128c: callq  0x000000010ef8f0a7  ;   {runtime_call Unsafe_GetObjectVolatile(JNIEnv_*, _jobject*, _jobject*, long)}
  0x0000000124371291: vzeroupper 
  0x0000000124371294: movl   $0x5,0x3b8(%r15)
  0x000000012437129f: lock addl $0x0,-0x40(%rsp)
  0x00000001243712a5: testb  $0x8,0x108(%r15)
  0x00000001243712ad: jne    0x00000001243712c4
  0x00000001243712b3: cmpl   $0x0,0xd8(%r15)
  0x00000001243712be: je     0x00000001243712e8
  0x00000001243712c4: vzeroupper 
  0x00000001243712c7: mov    %rax,-0x8(%rbp)
  0x00000001243712cb: mov    %r15,%rdi
  0x00000001243712ce: mov    %rsp,%r12
  0x00000001243712d1: sub    $0x0,%rsp
  0x00000001243712d5: and    $0xfffffffffffffff0,%rsp
  0x00000001243712d9: callq  0x000000010ef71148  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00000001243712de: mov    %r12,%rsp
  0x00000001243712e1: xor    %r12,%r12
  0x00000001243712e4: mov    -0x8(%rbp),%rax
  0x00000001243712e8: movl   $0x8,0x3b8(%r15)
  0x00000001243712f3: cmpl   $0x2,0x408(%r15)
  0x00000001243712fe: je     0x0000000124371417
  0x0000000124371304: cmpb   $0x0,-0x151b7231(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x000000012437130b: je     0x0000000124371349
  0x0000000124371311: mov    %rax,-0x8(%rbp)
  0x0000000124371315: movabs $0x14f65cfa0,%rsi  ;   {metadata({method} {0x000000014f65cfa0} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000000012437131f: mov    %r15,%rdi
  0x0000000124371322: test   $0xf,%esp
  0x0000000124371328: je     0x0000000124371340
  0x000000012437132e: sub    $0x8,%rsp
  0x0000000124371332: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000124371337: add    $0x8,%rsp
  0x000000012437133b: jmpq   0x0000000124371345
  0x0000000124371340: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000124371345: mov    -0x8(%rbp),%rax
  0x0000000124371349: movabs $0x0,%r10
  0x0000000124371353: mov    %r10,0x320(%r15)
  0x000000012437135a: movabs $0x0,%r10
  0x0000000124371364: mov    %r10,0x328(%r15)
  0x000000012437136b: vzeroupper 
  0x000000012437136e: test   %rax,%rax
  0x0000000124371371: je     0x00000001243713f1
  0x0000000124371377: test   $0x1,%rax
  0x000000012437137d: je     0x00000001243713ee
  0x0000000124371383: mov    -0x1(%rax),%rax
  0x0000000124371387: cmpb   $0x0,0x30(%r15)
  0x000000012437138c: je     0x00000001243713e9
  0x0000000124371392: cmp    $0x0,%rax
  0x0000000124371396: je     0x00000001243713e9
  0x000000012437139c: mov    0x38(%r15),%rcx
  0x00000001243713a0: cmp    $0x0,%rcx
  0x00000001243713a4: je     0x00000001243713be
  0x00000001243713aa: sub    $0x8,%rcx
  0x00000001243713ae: mov    %rcx,0x38(%r15)
  0x00000001243713b2: add    0x48(%r15),%rcx
  0x00000001243713b6: mov    %rax,(%rcx)
  0x00000001243713b9: jmpq   0x00000001243713e9
  0x00000001243713be: push   %rax
  0x00000001243713bf: mov    %r15,%rsi
  0x00000001243713c2: mov    %rax,%rdi
  0x00000001243713c5: test   $0xf,%esp
  0x00000001243713cb: je     0x00000001243713e3
  0x00000001243713d1: sub    $0x8,%rsp
  0x00000001243713d5: callq  0x000000010eb0185e  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00000001243713da: add    $0x8,%rsp
  0x00000001243713de: jmpq   0x00000001243713e8
  0x00000001243713e3: callq  0x000000010eb0185e  ;   {runtime_call G1BarrierSetRuntime::write_ref_field_pre_entry(oopDesc*, JavaThread*)}
  0x00000001243713e8: pop    %rax
  0x00000001243713e9: jmpq   0x00000001243713f1
  0x00000001243713ee: mov    (%rax),%rax
  0x00000001243713f1: mov    0xe0(%r15),%rcx
  0x00000001243713f8: movl   $0x0,0x100(%rcx)
  0x0000000124371402: leaveq 
  0x0000000124371403: cmpq   $0x0,0x8(%r15)
  0x000000012437140b: jne    0x0000000124371412
  0x0000000124371411: retq   
  0x0000000124371412: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000124371417: vzeroupper 
  0x000000012437141a: mov    %rax,-0x8(%rbp)
  0x000000012437141e: mov    %rsp,%r12
  0x0000000124371421: sub    $0x0,%rsp
  0x0000000124371425: and    $0xfffffffffffffff0,%rsp
  0x0000000124371429: callq  0x000000010ee99586  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000012437142e: mov    %r12,%rsp
  0x0000000124371431: xor    %r12,%r12
  0x0000000124371434: mov    -0x8(%rbp),%rax
  0x0000000124371438: jmpq   0x0000000124371304
  0x000000012437143d: hlt    
  0x000000012437143e: hlt    
  0x000000012437143f: hlt    
Compiled method (c1)      47    2       2       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x000000011d13e490,0x000000011d13e828] = 920
 relocation     [0x000000011d13e608,0x000000011d13e630] = 40
 main code      [0x000000011d13e640,0x000000011d13e760] = 288
 stub code      [0x000000011d13e760,0x000000011d13e790] = 48
 metadata       [0x000000011d13e790,0x000000011d13e798] = 8
 scopes data    [0x000000011d13e798,0x000000011d13e7c0] = 40
 scopes pcs     [0x000000011d13e7c0,0x000000011d13e820] = 96
 dependencies   [0x000000011d13e820,0x000000011d13e828] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x000000011d13e640, 0x000000011d13e790]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6d76d8} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi:rsi   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x000000011d13e640: mov    %eax,-0x14000(%rsp)
  0x000000011d13e647: push   %rbp
  0x000000011d13e648: sub    $0x70,%rsp
  0x000000011d13e64c: movabs $0x14f6ffe58,%rcx
  0x000000011d13e656: mov    0x18(%rcx),%eax
  0x000000011d13e659: add    $0x8,%eax
  0x000000011d13e65c: mov    %eax,0x18(%rcx)
  0x000000011d13e65f: and    $0x3ff8,%eax
  0x000000011d13e665: cmp    $0x0,%eax
  0x000000011d13e668: je     0x000000011d13e6e1  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 760)

  0x000000011d13e66e: movslq %edx,%rdx
  0x000000011d13e671: mov    $0x2,%ecx
  0x000000011d13e676: shl    %cl,%rdx
  0x000000011d13e679: movabs $0x10,%r10
  0x000000011d13e683: add    %r10,%rdx
  0x000000011d13e686: mov    (%rsi,%rdx,1),%eax
  0x000000011d13e689: shl    $0x3,%rax
  0x000000011d13e68d: movsbl 0x30(%r15),%esi
  0x000000011d13e692: cmp    $0x0,%esi
  0x000000011d13e695: jne    0x000000011d13e702
  0x000000011d13e69b: cmp    $0x0,%rax
  0x000000011d13e69f: je     0x000000011d13e6d1
  0x000000011d13e6a5: movabs $0x80001b608,%rdi  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000011d13e6af: mov    0x8(%rax),%ebx
  0x000000011d13e6b2: movabs $0x800000000,%r12
  0x000000011d13e6bc: add    %r12,%rbx
  0x000000011d13e6bf: xor    %r12,%r12
  0x000000011d13e6c2: cmp    0x38(%rbx),%rdi
  0x000000011d13e6c6: jne    0x000000011d13e713
  0x000000011d13e6cc: jmpq   0x000000011d13e6d1  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)

  0x000000011d13e6d1: add    $0x70,%rsp
  0x000000011d13e6d5: pop    %rbp
  0x000000011d13e6d6: mov    0x108(%r15),%r10
  0x000000011d13e6dd: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13e6e0: retq   
  0x000000011d13e6e1: movabs $0x14f6d76d8,%r10  ;   {metadata({method} {0x000000014f6d76d8} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d13e6eb: mov    %r10,0x8(%rsp)
  0x000000011d13e6f0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d13e6f8: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13e6fd: jmpq   0x000000011d13e66e
  0x000000011d13e702: cmp    $0x0,%rax
  0x000000011d13e706: je     0x000000011d13e69b
  0x000000011d13e708: mov    %rax,(%rsp)
  0x000000011d13e70c: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d13e711: jmp    0x000000011d13e69b
  0x000000011d13e713: mov    %rax,(%rsp)
  0x000000011d13e717: callq  0x000000011c68eea0  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011d13e71c: nop
  0x000000011d13e71d: nop
  0x000000011d13e71e: mov    0x420(%r15),%rax
  0x000000011d13e725: movabs $0x0,%r10
  0x000000011d13e72f: mov    %r10,0x420(%r15)
  0x000000011d13e736: movabs $0x0,%r10
  0x000000011d13e740: mov    %r10,0x428(%r15)
  0x000000011d13e747: add    $0x70,%rsp
  0x000000011d13e74b: pop    %rbp
  0x000000011d13e74c: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d13e751: hlt    
  0x000000011d13e752: hlt    
  0x000000011d13e753: hlt    
  0x000000011d13e754: hlt    
  0x000000011d13e755: hlt    
  0x000000011d13e756: hlt    
  0x000000011d13e757: hlt    
  0x000000011d13e758: hlt    
  0x000000011d13e759: hlt    
  0x000000011d13e75a: hlt    
  0x000000011d13e75b: hlt    
  0x000000011d13e75c: hlt    
  0x000000011d13e75d: hlt    
  0x000000011d13e75e: hlt    
  0x000000011d13e75f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d13e760: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d13e765: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d13e76f: and    $0xfffffffffffffff0,%rsp
  0x000000011d13e773: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d13e778: hlt    
[Deopt Handler Code]
  0x000000011d13e779: movabs $0x11d13e779,%r10  ;   {section_word}
  0x000000011d13e783: push   %r10
  0x000000011d13e785: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d13e78a: hlt    
  0x000000011d13e78b: hlt    
  0x000000011d13e78c: hlt    
  0x000000011d13e78d: hlt    
  0x000000011d13e78e: hlt    
  0x000000011d13e78f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 189 
ImmutableOopMap{}pc offsets: 220 Compiled method (c1)      50    7       2       java.lang.String::hashCode (49 bytes)
 total in heap  [0x000000011d13e890,0x000000011d13edc0] = 1328
 relocation     [0x000000011d13ea08,0x000000011d13ea48] = 64
 main code      [0x000000011d13ea60,0x000000011d13eba0] = 320
 stub code      [0x000000011d13eba0,0x000000011d13ebf0] = 80
 metadata       [0x000000011d13ebf0,0x000000011d13ec00] = 16
 scopes data    [0x000000011d13ec00,0x000000011d13ec78] = 120
 scopes pcs     [0x000000011d13ec78,0x000000011d13eda8] = 304
 dependencies   [0x000000011d13eda8,0x000000011d13edb0] = 8
 nul chk table  [0x000000011d13edb0,0x000000011d13edc0] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x000000011d13ea60, 0x000000011d13ebf0]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f5aabd0} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x000000011d13ea60: mov    0x8(%rsi),%r10d
  0x000000011d13ea64: movabs $0x800000000,%r12
  0x000000011d13ea6e: add    %r12,%r10
  0x000000011d13ea71: xor    %r12,%r12
  0x000000011d13ea74: cmp    %rax,%r10
  0x000000011d13ea77: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d13ea7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d13ea80: mov    %eax,-0x14000(%rsp)
  0x000000011d13ea87: push   %rbp
  0x000000011d13ea88: sub    $0x40,%rsp
  0x000000011d13ea8c: movabs $0x14f6fb4b0,%rdi
  0x000000011d13ea96: mov    0x18(%rdi),%ebx
  0x000000011d13ea99: add    $0x8,%ebx
  0x000000011d13ea9c: mov    %ebx,0x18(%rdi)
  0x000000011d13ea9f: and    $0x3ff8,%ebx
  0x000000011d13eaa5: cmp    $0x0,%ebx
  0x000000011d13eaa8: je     0x000000011d13eb32  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0 (line 1502)

  0x000000011d13eaae: mov    0x10(%rsi),%edi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x000000011d13eab1: cmp    $0x0,%edi
  0x000000011d13eab4: jne    0x000000011d13eb1f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6 (line 1503)

  0x000000011d13eaba: mov    0xc(%rsi),%ebx
  0x000000011d13eabd: shl    $0x3,%rbx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x000000011d13eac1: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x000000011d13eb53
  0x000000011d13eac4: cmp    $0x0,%eax
  0x000000011d13eac7: jle    0x000000011d13eb1f  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x000000011d13eacd: movsbl 0x14(%rsi),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x000000011d13ead1: cmp    $0x0,%edi
  0x000000011d13ead4: mov    $0x0,%edi
  0x000000011d13ead9: jne    0x000000011d13eae4
  0x000000011d13eadf: mov    $0x1,%edi
  0x000000011d13eae4: and    $0x1,%edi
  0x000000011d13eae7: cmp    $0x0,%edi          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22 (line 1504)

  0x000000011d13eaea: mov    %rsi,0x30(%rsp)
  0x000000011d13eaef: mov    %rbx,%rsi          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x000000011d13eaf2: je     0x000000011d13eb09  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22 (line 1504)

  0x000000011d13eaf8: nopl   0x0(%rax)
  0x000000011d13eaff: callq  0x000000011d13e1c0  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {static_call}
  0x000000011d13eb04: jmpq   0x000000011d13eb14  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32 (line 1504)

  0x000000011d13eb09: nopw   0x0(%rax,%rax,1)
  0x000000011d13eb0f: callq  0x000000011c5c9200  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@39 (line 1505)
                                                ;   {static_call}
  0x000000011d13eb14: mov    0x30(%rsp),%rsi
  0x000000011d13eb19: mov    %eax,0x10(%rsi)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44 (line 1505)

  0x000000011d13eb1c: mov    %rax,%rdi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47 (line 1507)

  0x000000011d13eb1f: mov    %rdi,%rax
  0x000000011d13eb22: add    $0x40,%rsp
  0x000000011d13eb26: pop    %rbp
  0x000000011d13eb27: mov    0x108(%r15),%r10
  0x000000011d13eb2e: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13eb31: retq   
  0x000000011d13eb32: movabs $0x14f5aabd0,%r10  ;   {metadata({method} {0x000000014f5aabd0} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011d13eb3c: mov    %r10,0x8(%rsp)
  0x000000011d13eb41: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d13eb49: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13eb4e: jmpq   0x000000011d13eaae
  0x000000011d13eb53: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d13eb58: nop
  0x000000011d13eb59: nop
  0x000000011d13eb5a: mov    0x420(%r15),%rax
  0x000000011d13eb61: movabs $0x0,%r10
  0x000000011d13eb6b: mov    %r10,0x420(%r15)
  0x000000011d13eb72: movabs $0x0,%r10
  0x000000011d13eb7c: mov    %r10,0x428(%r15)
  0x000000011d13eb83: add    $0x40,%rsp
  0x000000011d13eb87: pop    %rbp
  0x000000011d13eb88: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d13eb8d: hlt    
  0x000000011d13eb8e: hlt    
  0x000000011d13eb8f: hlt    
  0x000000011d13eb90: hlt    
  0x000000011d13eb91: hlt    
  0x000000011d13eb92: hlt    
  0x000000011d13eb93: hlt    
  0x000000011d13eb94: hlt    
  0x000000011d13eb95: hlt    
  0x000000011d13eb96: hlt    
  0x000000011d13eb97: hlt    
  0x000000011d13eb98: hlt    
  0x000000011d13eb99: hlt    
  0x000000011d13eb9a: hlt    
  0x000000011d13eb9b: hlt    
  0x000000011d13eb9c: hlt    
  0x000000011d13eb9d: hlt    
  0x000000011d13eb9e: hlt    
  0x000000011d13eb9f: hlt    
[Stub Code]
  0x000000011d13eba0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d13eba5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d13ebaf: jmpq   0x000000011d13ebaf  ;   {runtime_call}
  0x000000011d13ebb4: nop
  0x000000011d13ebb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d13ebbf: jmpq   0x000000011d13ebbf  ;   {runtime_call}
[Exception Handler]
  0x000000011d13ebc4: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d13ebc9: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d13ebd3: and    $0xfffffffffffffff0,%rsp
  0x000000011d13ebd7: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d13ebdc: hlt    
[Deopt Handler Code]
  0x000000011d13ebdd: movabs $0x11d13ebdd,%r10  ;   {section_word}
  0x000000011d13ebe7: push   %r10
  0x000000011d13ebe9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d13ebee: hlt    
  0x000000011d13ebef: hlt    

ImmutableOopMap{[48]=Oop }pc offsets: 164 180 
ImmutableOopMap{rsi=Oop }pc offsets: 238 
ImmutableOopMap{rsi=Oop rbx=Oop }pc offsets: 248 Compiled method (c1)      53   11       2       java.util.ImmutableCollections$SetN::probe (56 bytes)
 total in heap  [0x000000011d13ee10,0x000000011d13f5d0] = 1984
 relocation     [0x000000011d13ef88,0x000000011d13efd8] = 80
 main code      [0x000000011d13efe0,0x000000011d13f240] = 608
 stub code      [0x000000011d13f240,0x000000011d13f290] = 80
 metadata       [0x000000011d13f290,0x000000011d13f2a8] = 24
 scopes data    [0x000000011d13f2a8,0x000000011d13f3b0] = 264
 scopes pcs     [0x000000011d13f3b0,0x000000011d13f5a0] = 496
 dependencies   [0x000000011d13f5a0,0x000000011d13f5a8] = 8
 nul chk table  [0x000000011d13f5a8,0x000000011d13f5d0] = 40
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.probe(Ljava/lang/Object;)I  [0x000000011d13efe0, 0x000000011d13f290]  688 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f7ae870} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN'
  # this:     rsi:rsi   = 'java/util/ImmutableCollections$SetN'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x80]  (sp of caller)
  0x000000011d13efe0: mov    0x8(%rsi),%r10d
  0x000000011d13efe4: movabs $0x800000000,%r12
  0x000000011d13efee: add    %r12,%r10
  0x000000011d13eff1: xor    %r12,%r12
  0x000000011d13eff4: cmp    %rax,%r10
  0x000000011d13eff7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d13effd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d13f000: mov    %eax,-0x14000(%rsp)
  0x000000011d13f007: push   %rbp
  0x000000011d13f008: sub    $0x70,%rsp
  0x000000011d13f00c: mov    %rsi,0x50(%rsp)
  0x000000011d13f011: mov    %rdx,0x58(%rsp)
  0x000000011d13f016: movabs $0x14f7cfbc0,%rdi
  0x000000011d13f020: mov    0x18(%rdi),%ebx
  0x000000011d13f023: add    $0x8,%ebx
  0x000000011d13f026: mov    %ebx,0x18(%rdi)
  0x000000011d13f029: and    $0x3ff8,%ebx
  0x000000011d13f02f: cmp    $0x0,%ebx
  0x000000011d13f032: je     0x000000011d13f191  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@0 (line 689)

  0x000000011d13f038: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 689)

  0x000000011d13f03b: xchg   %ax,%ax
  0x000000011d13f03d: movabs $0xffffffffffffffff,%rax
  0x000000011d13f047: callq  0x000000011c5ca9a0  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 689)
                                                ;   {virtual_call}
  0x000000011d13f04c: mov    %rax,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1 (line 689)

  0x000000011d13f04f: mov    0x50(%rsp),%rdi
  0x000000011d13f054: mov    0x10(%rdi),%eax
  0x000000011d13f057: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@5 (line 689)

  0x000000011d13f05b: mov    0xc(%rax),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@8 (line 689)
                                                ; implicit exception: dispatches to 0x000000011d13f1b2
  0x000000011d13f05e: mov    %rsi,%rax
  0x000000011d13f061: cmp    $0x80000000,%eax
  0x000000011d13f067: jne    0x000000011d13f078
  0x000000011d13f06d: xor    %edx,%edx
  0x000000011d13f06f: cmp    $0xffffffff,%ebx
  0x000000011d13f072: je     0x000000011d13f07b
  0x000000011d13f078: cltd   
  0x000000011d13f079: idiv   %ebx               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)
                                                ; implicit exception: dispatches to 0x000000011d13f1b7
  0x000000011d13f07b: mov    %rbx,%rdx
  0x000000011d13f07e: xor    %rsi,%rdx
  0x000000011d13f081: cmp    $0x0,%edx
  0x000000011d13f084: jge    0x000000011d13f09a  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)

  0x000000011d13f08a: mov    %rax,%rdx
  0x000000011d13f08d: imul   %ebx,%edx
  0x000000011d13f090: cmp    %esi,%edx
  0x000000011d13f092: je     0x000000011d13f09a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)

  0x000000011d13f098: dec    %eax
  0x000000011d13f09a: imul   %ebx,%eax
  0x000000011d13f09d: sub    %eax,%esi
  0x000000011d13f09f: mov    0x58(%rsp),%rdx
  0x000000011d13f0a4: nopl   0x0(%rax)
  0x000000011d13f0a8: mov    0x10(%rdi),%ebx
  0x000000011d13f0ab: shl    $0x3,%rbx          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@14 (line 691)

  0x000000011d13f0af: mov    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000000011d13f1bc
  0x000000011d13f0b2: cmp    %esi,%eax
  0x000000011d13f0b4: jbe    0x000000011d13f1c1
  0x000000011d13f0ba: movslq %esi,%rax
  0x000000011d13f0bd: mov    0x10(%rbx,%rax,4),%ebx
  0x000000011d13f0c1: shl    $0x3,%rbx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 691)

  0x000000011d13f0c5: cmp    $0x0,%rbx
  0x000000011d13f0c9: je     0x000000011d13f174  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@21 (line 692)

  0x000000011d13f0cf: mov    %esi,0x60(%rsp)
  0x000000011d13f0d3: mov    %rdx,%rax
  0x000000011d13f0d6: mov    %rbx,%rdx
  0x000000011d13f0d9: mov    %rax,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@31 (line 694)

  0x000000011d13f0dc: nop
  0x000000011d13f0dd: movabs $0xffffffffffffffff,%rax
  0x000000011d13f0e7: callq  0x000000011c5ca9e0  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@31 (line 694)
                                                ;   {virtual_call}
  0x000000011d13f0ec: cmp    $0x0,%eax
  0x000000011d13f0ef: jne    0x000000011d13f15d  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@34 (line 694)

  0x000000011d13f0f5: mov    0x50(%rsp),%rsi
  0x000000011d13f0fa: mov    0x60(%rsp),%eax
  0x000000011d13f0fe: inc    %eax
  0x000000011d13f100: mov    0x10(%rsi),%edi
  0x000000011d13f103: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@44 (line 696)

  0x000000011d13f107: mov    0xc(%rdi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@47 (line 696)
                                                ; implicit exception: dispatches to 0x000000011d13f1cf
  0x000000011d13f10a: cmp    %edi,%eax
  0x000000011d13f10c: jne    0x000000011d13f117  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@48 (line 696)

  0x000000011d13f112: mov    $0x0,%eax
  0x000000011d13f117: movabs $0x14f7cfbc0,%rdi
  0x000000011d13f121: mov    0x1c(%rdi),%ebx
  0x000000011d13f124: add    $0x8,%ebx
  0x000000011d13f127: mov    %ebx,0x1c(%rdi)
  0x000000011d13f12a: and    $0x1fff8,%ebx
  0x000000011d13f130: cmp    $0x0,%ebx
  0x000000011d13f133: je     0x000000011d13f1d4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 699)

  0x000000011d13f139: mov    0x108(%r15),%r10   ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 699)

  0x000000011d13f140: test   %eax,(%r10)        ;   {poll}
  0x000000011d13f143: mov    %rax,%rdi
  0x000000011d13f146: mov    0x58(%rsp),%rdx
  0x000000011d13f14b: mov    %rsi,0x50(%rsp)
  0x000000011d13f150: mov    %rdi,%rsi
  0x000000011d13f153: mov    0x50(%rsp),%rdi
  0x000000011d13f158: jmpq   0x000000011d13f0a8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 699)

  0x000000011d13f15d: mov    0x60(%rsp),%edi
  0x000000011d13f161: mov    %rdi,%rax
  0x000000011d13f164: add    $0x70,%rsp
  0x000000011d13f168: pop    %rbp
  0x000000011d13f169: mov    0x108(%r15),%r10
  0x000000011d13f170: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13f173: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@38 (line 695)

  0x000000011d13f174: mov    %rsi,%rdi
  0x000000011d13f177: mov    %rdi,%rsi
  0x000000011d13f17a: neg    %esi
  0x000000011d13f17c: mov    %rsi,%rax
  0x000000011d13f17f: dec    %eax
  0x000000011d13f181: add    $0x70,%rsp
  0x000000011d13f185: pop    %rbp
  0x000000011d13f186: mov    0x108(%r15),%r10
  0x000000011d13f18d: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13f190: retq   
  0x000000011d13f191: movabs $0x14f7ae870,%r10  ;   {metadata({method} {0x000000014f7ae870} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000000011d13f19b: mov    %r10,0x8(%rsp)
  0x000000011d13f1a0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d13f1a8: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop [80]=Oop rdx=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN::probe@-1 (line 689)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13f1ad: jmpq   0x000000011d13f038
  0x000000011d13f1b2: callq  0x000000011c68cf20  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@8 (line 689)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d13f1b7: callq  0x000000011c68cd20  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$SetN::probe@9 (line 689)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011d13f1bc: callq  0x000000011c68cf20  ; ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 691)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d13f1c1: mov    %rsi,(%rsp)
  0x000000011d13f1c5: mov    %rbx,0x8(%rsp)
  0x000000011d13f1ca: callq  0x000000011c68c920  ; ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18 (line 691)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d13f1cf: callq  0x000000011c68cf20  ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@47 (line 696)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d13f1d4: movabs $0x14f7ae870,%r10  ;   {metadata({method} {0x000000014f7ae870} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000000011d13f1de: mov    %r10,0x8(%rsp)
  0x000000011d13f1e3: movq   $0x35,(%rsp)
  0x000000011d13f1eb: callq  0x000000011c691600  ; ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@53 (line 699)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13f1f0: jmpq   0x000000011d13f139
  0x000000011d13f1f5: nop
  0x000000011d13f1f6: nop
  0x000000011d13f1f7: mov    0x420(%r15),%rax
  0x000000011d13f1fe: movabs $0x0,%r10
  0x000000011d13f208: mov    %r10,0x420(%r15)
  0x000000011d13f20f: movabs $0x0,%r10
  0x000000011d13f219: mov    %r10,0x428(%r15)
  0x000000011d13f220: add    $0x70,%rsp
  0x000000011d13f224: pop    %rbp
  0x000000011d13f225: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d13f22a: hlt    
  0x000000011d13f22b: hlt    
  0x000000011d13f22c: hlt    
  0x000000011d13f22d: hlt    
  0x000000011d13f22e: hlt    
  0x000000011d13f22f: hlt    
  0x000000011d13f230: hlt    
  0x000000011d13f231: hlt    
  0x000000011d13f232: hlt    
  0x000000011d13f233: hlt    
  0x000000011d13f234: hlt    
  0x000000011d13f235: hlt    
  0x000000011d13f236: hlt    
  0x000000011d13f237: hlt    
  0x000000011d13f238: hlt    
  0x000000011d13f239: hlt    
  0x000000011d13f23a: hlt    
  0x000000011d13f23b: hlt    
  0x000000011d13f23c: hlt    
  0x000000011d13f23d: hlt    
  0x000000011d13f23e: hlt    
  0x000000011d13f23f: hlt    
[Stub Code]
  0x000000011d13f240: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d13f245: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d13f24f: jmpq   0x000000011d13f24f  ;   {runtime_call}
  0x000000011d13f254: nop
  0x000000011d13f255: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d13f25f: jmpq   0x000000011d13f25f  ;   {runtime_call}
[Exception Handler]
  0x000000011d13f264: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d13f269: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d13f273: and    $0xfffffffffffffff0,%rsp
  0x000000011d13f277: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d13f27c: hlt    
[Deopt Handler Code]
  0x000000011d13f27d: movabs $0x11d13f27d,%r10  ;   {section_word}
  0x000000011d13f287: push   %r10
  0x000000011d13f289: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d13f28e: hlt    
  0x000000011d13f28f: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop }pc offsets: 108 268 
ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }pc offsets: 352 
ImmutableOopMap{rsi=Oop [80]=Oop rdx=Oop [88]=Oop }pc offsets: 461 
ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }pc offsets: 471 476 
ImmutableOopMap{rdi=Oop [80]=Oop rdx=Oop [88]=Oop rbx=Oop }pc offsets: 481 495 
ImmutableOopMap{[88]=Oop rsi=Oop [80]=Oop }pc offsets: 500 528 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z  [0x0000000124371640, 0x0000000124371850]  528 bytes
[Entry Point]
  # {method} {0x000000014f65c820} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x0000000124371640: mov    0x8(%rsi),%r10d
  0x0000000124371644: movabs $0x800000000,%r12
  0x000000012437164e: add    %r12,%r10
  0x0000000124371651: xor    %r12,%r12
  0x0000000124371654: cmp    %r10,%rax
  0x0000000124371657: je     0x0000000124371668
  0x000000012437165d: jmpq   0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x0000000124371662: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000124371668: mov    %eax,-0x14000(%rsp)
  0x000000012437166f: push   %rbp
  0x0000000124371670: mov    %rsp,%rbp
  0x0000000124371673: sub    $0x40,%rsp
  0x0000000124371677: mov    %rdx,0x8(%rsp)
  0x000000012437167c: cmp    $0x0,%rdx
  0x0000000124371680: lea    0x8(%rsp),%rdx
  0x0000000124371685: cmove  0x8(%rsp),%rdx
  0x000000012437168b: mov    %rsi,(%rsp)
  0x000000012437168f: cmp    $0x0,%rsi
  0x0000000124371693: lea    (%rsp),%rsi
  0x0000000124371697: cmove  (%rsp),%rsi        ; ImmutableOopMap{[8]=Oop [0]=Oop }
  0x000000012437169c: vzeroupper 
  0x000000012437169f: movabs $0x12437169c,%r10  ;   {internal_word}
  0x00000001243716a9: mov    %r10,0x328(%r15)
  0x00000001243716b0: mov    %rsp,0x320(%r15)
  0x00000001243716b7: cmpb   $0x0,-0x151b75e4(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x00000001243716be: je     0x0000000124371702
  0x00000001243716c4: push   %rsi
  0x00000001243716c5: push   %rdx
  0x00000001243716c6: push   %rcx
  0x00000001243716c7: push   %r8
  0x00000001243716c9: push   %r9
  0x00000001243716cb: movabs $0x14f65c820,%rsi  ;   {metadata({method} {0x000000014f65c820} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x00000001243716d5: mov    %r15,%rdi
  0x00000001243716d8: test   $0xf,%esp
  0x00000001243716de: je     0x00000001243716f6
  0x00000001243716e4: sub    $0x8,%rsp
  0x00000001243716e8: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00000001243716ed: add    $0x8,%rsp
  0x00000001243716f1: jmpq   0x00000001243716fb
  0x00000001243716f6: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00000001243716fb: pop    %r9
  0x00000001243716fd: pop    %r8
  0x00000001243716ff: pop    %rcx
  0x0000000124371700: pop    %rdx
  0x0000000124371701: pop    %rsi
  0x0000000124371702: lea    0x340(%r15),%rdi
  0x0000000124371709: movl   $0x4,0x3b8(%r15)
  0x0000000124371714: callq  0x000000010ef933d6  ;   {runtime_call Unsafe_CompareAndSetLong(JNIEnv_*, _jobject*, _jobject*, long, long, long)}
  0x0000000124371719: vzeroupper 
  0x000000012437171c: and    $0xff,%eax
  0x0000000124371722: setne  %al
  0x0000000124371725: movl   $0x5,0x3b8(%r15)
  0x0000000124371730: lock addl $0x0,-0x40(%rsp)
  0x0000000124371736: testb  $0x8,0x108(%r15)
  0x000000012437173e: jne    0x0000000124371755
  0x0000000124371744: cmpl   $0x0,0xd8(%r15)
  0x000000012437174f: je     0x0000000124371779
  0x0000000124371755: vzeroupper 
  0x0000000124371758: mov    %rax,-0x8(%rbp)
  0x000000012437175c: mov    %r15,%rdi
  0x000000012437175f: mov    %rsp,%r12
  0x0000000124371762: sub    $0x0,%rsp
  0x0000000124371766: and    $0xfffffffffffffff0,%rsp
  0x000000012437176a: callq  0x000000010ef71148  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x000000012437176f: mov    %r12,%rsp
  0x0000000124371772: xor    %r12,%r12
  0x0000000124371775: mov    -0x8(%rbp),%rax
  0x0000000124371779: movl   $0x8,0x3b8(%r15)
  0x0000000124371784: cmpl   $0x2,0x408(%r15)
  0x000000012437178f: je     0x0000000124371825
  0x0000000124371795: cmpb   $0x0,-0x151b76c2(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x000000012437179c: je     0x00000001243717da
  0x00000001243717a2: mov    %rax,-0x8(%rbp)
  0x00000001243717a6: movabs $0x14f65c820,%rsi  ;   {metadata({method} {0x000000014f65c820} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x00000001243717b0: mov    %r15,%rdi
  0x00000001243717b3: test   $0xf,%esp
  0x00000001243717b9: je     0x00000001243717d1
  0x00000001243717bf: sub    $0x8,%rsp
  0x00000001243717c3: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00000001243717c8: add    $0x8,%rsp
  0x00000001243717cc: jmpq   0x00000001243717d6
  0x00000001243717d1: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00000001243717d6: mov    -0x8(%rbp),%rax
  0x00000001243717da: movabs $0x0,%r10
  0x00000001243717e4: mov    %r10,0x320(%r15)
  0x00000001243717eb: movabs $0x0,%r10
  0x00000001243717f5: mov    %r10,0x328(%r15)
  0x00000001243717fc: vzeroupper 
  0x00000001243717ff: mov    0xe0(%r15),%rcx
  0x0000000124371806: movl   $0x0,0x100(%rcx)
  0x0000000124371810: leaveq 
  0x0000000124371811: cmpq   $0x0,0x8(%r15)
  0x0000000124371819: jne    0x0000000124371820
  0x000000012437181f: retq   
  0x0000000124371820: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000124371825: vzeroupper 
  0x0000000124371828: mov    %rax,-0x8(%rbp)
  0x000000012437182c: mov    %rsp,%r12
  0x000000012437182f: sub    $0x0,%rsp
  0x0000000124371833: and    $0xfffffffffffffff0,%rsp
  0x0000000124371837: callq  0x000000010ee99586  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000012437183c: mov    %r12,%rsp
  0x000000012437183f: xor    %r12,%r12
  0x0000000124371842: mov    -0x8(%rbp),%rax
  0x0000000124371846: jmpq   0x0000000124371795
  0x000000012437184b: hlt    
  0x000000012437184c: hlt    
  0x000000012437184d: hlt    
  0x000000012437184e: hlt    
  0x000000012437184f: hlt    
Compiled method (c1)      62   14       2       java.util.ImmutableCollections$SetN::hashCode (46 bytes)
 total in heap  [0x000000011d13ff10,0x000000011d140440] = 1328
 relocation     [0x000000011d140088,0x000000011d1400c0] = 56
 main code      [0x000000011d1400c0,0x000000011d140240] = 384
 stub code      [0x000000011d140240,0x000000011d140280] = 64
 metadata       [0x000000011d140280,0x000000011d140288] = 8
 scopes data    [0x000000011d140288,0x000000011d140318] = 144
 scopes pcs     [0x000000011d140318,0x000000011d140428] = 272
 dependencies   [0x000000011d140428,0x000000011d140430] = 8
 nul chk table  [0x000000011d140430,0x000000011d140440] = 16
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.hashCode()I  [0x000000011d1400c0, 0x000000011d140280]  448 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f7ae768} 'hashCode' '()I' in 'java/util/ImmutableCollections$SetN'
  #           [sp+0x50]  (sp of caller)
  0x000000011d1400c0: mov    0x8(%rsi),%r10d
  0x000000011d1400c4: movabs $0x800000000,%r12
  0x000000011d1400ce: add    %r12,%r10
  0x000000011d1400d1: xor    %r12,%r12
  0x000000011d1400d4: cmp    %rax,%r10
  0x000000011d1400d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1400dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d1400e0: mov    %eax,-0x14000(%rsp)
  0x000000011d1400e7: push   %rbp
  0x000000011d1400e8: sub    $0x40,%rsp
  0x000000011d1400ec: movabs $0x14f7d0290,%rdi
  0x000000011d1400f6: mov    0x18(%rdi),%ebx
  0x000000011d1400f9: add    $0x8,%ebx
  0x000000011d1400fc: mov    %ebx,0x18(%rdi)
  0x000000011d1400ff: and    $0x3ff8,%ebx
  0x000000011d140105: cmp    $0x0,%ebx
  0x000000011d140108: je     0x000000011d1401b5  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@0 (line 675)

  0x000000011d14010e: mov    0x10(%rsi),%edi
  0x000000011d140111: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@3 (line 676)

  0x000000011d140115: mov    %rdi,0x28(%rsp)
  0x000000011d14011a: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@8 (line 676)
                                                ; implicit exception: dispatches to 0x000000011d1401d6
  0x000000011d14011d: mov    %ebx,0x30(%rsp)
  0x000000011d140121: mov    $0x0,%eax
  0x000000011d140126: mov    $0x0,%edx
  0x000000011d14012b: jmpq   0x000000011d14019e  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@13 (line 676)

  0x000000011d140130: movslq %eax,%rsi
  0x000000011d140133: mov    0x10(%rdi,%rsi,4),%esi
  0x000000011d140137: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@22 (line 676)

  0x000000011d14013b: cmp    $0x0,%rsi
  0x000000011d14013f: mov    %eax,0x24(%rsp)
  0x000000011d140143: je     0x000000011d140163  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@27 (line 677)

  0x000000011d140149: mov    %edx,0x20(%rsp)
  0x000000011d14014d: movabs $0xffffffffffffffff,%rax
  0x000000011d140157: callq  0x000000011c5c8f80  ; ImmutableOopMap{[40]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@33 (line 678)
                                                ;   {virtual_call}
  0x000000011d14015c: add    0x20(%rsp),%eax
  0x000000011d140160: mov    %rax,%rdx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@38 (line 676)

  0x000000011d140163: mov    0x24(%rsp),%eax
  0x000000011d140167: inc    %eax
  0x000000011d140169: movabs $0x14f7d0290,%rsi
  0x000000011d140173: mov    0x1c(%rsi),%edi
  0x000000011d140176: add    $0x8,%edi
  0x000000011d140179: mov    %edi,0x1c(%rsi)
  0x000000011d14017c: and    $0x1fff8,%edi
  0x000000011d140182: cmp    $0x0,%edi
  0x000000011d140185: je     0x000000011d1401db  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@41 (line 676)

  0x000000011d14018b: mov    0x108(%r15),%r10   ; ImmutableOopMap{[40]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@41 (line 676)

  0x000000011d140192: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@41 (line 676)
                                                ;   {poll}
  0x000000011d140195: mov    0x30(%rsp),%ebx
  0x000000011d140199: mov    0x28(%rsp),%rdi
  0x000000011d14019e: cmp    %ebx,%eax
  0x000000011d1401a0: jl     0x000000011d140130  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@16 (line 676)

  0x000000011d1401a2: mov    %rdx,%rax
  0x000000011d1401a5: add    $0x40,%rsp
  0x000000011d1401a9: pop    %rbp
  0x000000011d1401aa: mov    0x108(%r15),%r10
  0x000000011d1401b1: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1401b4: retq   
  0x000000011d1401b5: movabs $0x14f7ae768,%r10  ;   {metadata({method} {0x000000014f7ae768} 'hashCode' '()I' in 'java/util/ImmutableCollections$SetN')}
  0x000000011d1401bf: mov    %r10,0x8(%rsp)
  0x000000011d1401c4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d1401cc: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN::hashCode@-1 (line 675)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1401d1: jmpq   0x000000011d14010e
  0x000000011d1401d6: callq  0x000000011c68cf20  ; ImmutableOopMap{rdi=Oop [40]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@8 (line 676)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1401db: movabs $0x14f7ae768,%r10  ;   {metadata({method} {0x000000014f7ae768} 'hashCode' '()I' in 'java/util/ImmutableCollections$SetN')}
  0x000000011d1401e5: mov    %r10,0x8(%rsp)
  0x000000011d1401ea: movq   $0x29,(%rsp)
  0x000000011d1401f2: callq  0x000000011c691600  ; ImmutableOopMap{[40]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::hashCode@41 (line 676)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1401f7: jmp    0x000000011d14018b
  0x000000011d1401f9: nop
  0x000000011d1401fa: nop
  0x000000011d1401fb: mov    0x420(%r15),%rax
  0x000000011d140202: movabs $0x0,%r10
  0x000000011d14020c: mov    %r10,0x420(%r15)
  0x000000011d140213: movabs $0x0,%r10
  0x000000011d14021d: mov    %r10,0x428(%r15)
  0x000000011d140224: add    $0x40,%rsp
  0x000000011d140228: pop    %rbp
  0x000000011d140229: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14022e: hlt    
  0x000000011d14022f: hlt    
  0x000000011d140230: hlt    
  0x000000011d140231: hlt    
  0x000000011d140232: hlt    
  0x000000011d140233: hlt    
  0x000000011d140234: hlt    
  0x000000011d140235: hlt    
  0x000000011d140236: hlt    
  0x000000011d140237: hlt    
  0x000000011d140238: hlt    
  0x000000011d140239: hlt    
  0x000000011d14023a: hlt    
  0x000000011d14023b: hlt    
  0x000000011d14023c: hlt    
  0x000000011d14023d: hlt    
  0x000000011d14023e: hlt    
  0x000000011d14023f: hlt    
[Stub Code]
  0x000000011d140240: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d140245: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14024f: jmpq   0x000000011d14024f  ;   {runtime_call}
[Exception Handler]
  0x000000011d140254: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d140259: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d140263: and    $0xfffffffffffffff0,%rsp
  0x000000011d140267: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14026c: hlt    
[Deopt Handler Code]
  0x000000011d14026d: movabs $0x11d14026d,%r10  ;   {section_word}
  0x000000011d140277: push   %r10
  0x000000011d140279: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14027e: hlt    
  0x000000011d14027f: hlt    

ImmutableOopMap{[40]=Oop }pc offsets: 156 210 
ImmutableOopMap{rsi=Oop }pc offsets: 273 
ImmutableOopMap{rdi=Oop [40]=Oop }pc offsets: 283 
ImmutableOopMap{[40]=Oop }pc offsets: 311 Compiled method (c1)      65   13       2       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x000000011d13f990,0x000000011d13fee8] = 1368
 relocation     [0x000000011d13fb08,0x000000011d13fb38] = 48
 main code      [0x000000011d13fb40,0x000000011d13fcc0] = 384
 stub code      [0x000000011d13fcc0,0x000000011d13fcf0] = 48
 metadata       [0x000000011d13fcf0,0x000000011d13fcf8] = 8
 scopes data    [0x000000011d13fcf8,0x000000011d13fd78] = 128
 scopes pcs     [0x000000011d13fd78,0x000000011d13fec8] = 336
 dependencies   [0x000000011d13fec8,0x000000011d13fed0] = 8
 nul chk table  [0x000000011d13fed0,0x000000011d13fee8] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.equals([B[B)Z  [0x000000011d13fb40, 0x000000011d13fcf0]  432 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6fcbd8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x000000011d13fb40: mov    %eax,-0x14000(%rsp)
  0x000000011d13fb47: push   %rbp
  0x000000011d13fb48: sub    $0x30,%rsp
  0x000000011d13fb4c: movabs $0x14f726660,%rax
  0x000000011d13fb56: mov    0x18(%rax),%edi
  0x000000011d13fb59: add    $0x8,%edi
  0x000000011d13fb5c: mov    %edi,0x18(%rax)
  0x000000011d13fb5f: and    $0x3ff8,%edi
  0x000000011d13fb65: cmp    $0x0,%edi
  0x000000011d13fb68: je     0x000000011d13fc20  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@0 (line 94)

  0x000000011d13fb6e: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ; implicit exception: dispatches to 0x000000011d13fc41
  0x000000011d13fb71: mov    0xc(%rdx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ; implicit exception: dispatches to 0x000000011d13fc46
  0x000000011d13fb74: cmp    %edi,%eax
  0x000000011d13fb76: jne    0x000000011d13fc0b  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@4 (line 94)

  0x000000011d13fb7c: mov    $0x0,%edi
  0x000000011d13fb81: jmpq   0x000000011d13fbd7  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@9 (line 95)

  0x000000011d13fb86: xchg   %ax,%ax
  0x000000011d13fb88: movslq %edi,%rbx
  0x000000011d13fb8b: movsbl 0x10(%rsi,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x000000011d13fb90: cmp    0xc(%rdx),%edi
  0x000000011d13fb93: jae    0x000000011d13fc4b
  0x000000011d13fb99: movslq %edi,%rcx
  0x000000011d13fb9c: movsbl 0x10(%rdx,%rcx,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x000000011d13fba1: cmp    %ecx,%ebx
  0x000000011d13fba3: jne    0x000000011d13fbe1  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x000000011d13fba9: inc    %edi
  0x000000011d13fbab: movabs $0x14f726660,%rbx
  0x000000011d13fbb5: mov    0x1c(%rbx),%ecx
  0x000000011d13fbb8: add    $0x8,%ecx
  0x000000011d13fbbb: mov    %ecx,0x1c(%rbx)
  0x000000011d13fbbe: and    $0x1fff8,%ecx
  0x000000011d13fbc4: cmp    $0x0,%ecx
  0x000000011d13fbc7: je     0x000000011d13fc59  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x000000011d13fbcd: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x000000011d13fbd4: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)
                                                ;   {poll}
  0x000000011d13fbd7: cmp    %eax,%edi
  0x000000011d13fbd9: jge    0x000000011d13fbf6
  0x000000011d13fbdf: jmp    0x000000011d13fb88  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12 (line 95)

  0x000000011d13fbe1: mov    $0x0,%eax
  0x000000011d13fbe6: add    $0x30,%rsp
  0x000000011d13fbea: pop    %rbp
  0x000000011d13fbeb: mov    0x108(%r15),%r10
  0x000000011d13fbf2: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13fbf5: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@25 (line 97)

  0x000000011d13fbf6: mov    $0x1,%eax
  0x000000011d13fbfb: add    $0x30,%rsp
  0x000000011d13fbff: pop    %rbp
  0x000000011d13fc00: mov    0x108(%r15),%r10
  0x000000011d13fc07: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13fc0a: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@33 (line 100)

  0x000000011d13fc0b: mov    $0x0,%eax
  0x000000011d13fc10: add    $0x30,%rsp
  0x000000011d13fc14: pop    %rbp
  0x000000011d13fc15: mov    0x108(%r15),%r10
  0x000000011d13fc1c: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13fc1f: retq   
  0x000000011d13fc20: movabs $0x14f6fcbd8,%r10  ;   {metadata({method} {0x000000014f6fcbd8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000000011d13fc2a: mov    %r10,0x8(%rsp)
  0x000000011d13fc2f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d13fc37: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::equals@-1 (line 94)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13fc3c: jmpq   0x000000011d13fb6e
  0x000000011d13fc41: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d13fc46: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d13fc4b: mov    %rdi,(%rsp)
  0x000000011d13fc4f: mov    %rdx,0x8(%rsp)
  0x000000011d13fc54: callq  0x000000011c68c920  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d13fc59: movabs $0x14f6fcbd8,%r10  ;   {metadata({method} {0x000000014f6fcbd8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000000011d13fc63: mov    %r10,0x8(%rsp)
  0x000000011d13fc68: movq   $0x1d,(%rsp)
  0x000000011d13fc70: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13fc75: jmpq   0x000000011d13fbcd
  0x000000011d13fc7a: nop
  0x000000011d13fc7b: nop
  0x000000011d13fc7c: mov    0x420(%r15),%rax
  0x000000011d13fc83: movabs $0x0,%r10
  0x000000011d13fc8d: mov    %r10,0x420(%r15)
  0x000000011d13fc94: movabs $0x0,%r10
  0x000000011d13fc9e: mov    %r10,0x428(%r15)
  0x000000011d13fca5: add    $0x30,%rsp
  0x000000011d13fca9: pop    %rbp
  0x000000011d13fcaa: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d13fcaf: hlt    
  0x000000011d13fcb0: hlt    
  0x000000011d13fcb1: hlt    
  0x000000011d13fcb2: hlt    
  0x000000011d13fcb3: hlt    
  0x000000011d13fcb4: hlt    
  0x000000011d13fcb5: hlt    
  0x000000011d13fcb6: hlt    
  0x000000011d13fcb7: hlt    
  0x000000011d13fcb8: hlt    
  0x000000011d13fcb9: hlt    
  0x000000011d13fcba: hlt    
  0x000000011d13fcbb: hlt    
  0x000000011d13fcbc: hlt    
  0x000000011d13fcbd: hlt    
  0x000000011d13fcbe: hlt    
  0x000000011d13fcbf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d13fcc0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d13fcc5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d13fccf: and    $0xfffffffffffffff0,%rsp
  0x000000011d13fcd3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d13fcd8: hlt    
[Deopt Handler Code]
  0x000000011d13fcd9: movabs $0x11d13fcd9,%r10  ;   {section_word}
  0x000000011d13fce3: push   %r10
  0x000000011d13fce5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d13fcea: hlt    
  0x000000011d13fceb: hlt    
  0x000000011d13fcec: hlt    
  0x000000011d13fced: hlt    
  0x000000011d13fcee: hlt    
  0x000000011d13fcef: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 148 252 262 267 281 309 Compiled method (c1)      68    5       2       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000000011d13f610,0x000000011d13f920] = 784
 relocation     [0x000000011d13f788,0x000000011d13f7b0] = 40
 main code      [0x000000011d13f7c0,0x000000011d13f880] = 192
 stub code      [0x000000011d13f880,0x000000011d13f8b0] = 48
 metadata       [0x000000011d13f8b0,0x000000011d13f8c0] = 16
 scopes data    [0x000000011d13f8c0,0x000000011d13f8d8] = 24
 scopes pcs     [0x000000011d13f8d8,0x000000011d13f918] = 64
 dependencies   [0x000000011d13f918,0x000000011d13f920] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000000011d13f7c0, 0x000000011d13f8b0]  240 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f5a4610} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011d13f7c0: mov    0x8(%rsi),%r10d
  0x000000011d13f7c4: movabs $0x800000000,%r12
  0x000000011d13f7ce: add    %r12,%r10
  0x000000011d13f7d1: xor    %r12,%r12
  0x000000011d13f7d4: cmp    %rax,%r10
  0x000000011d13f7d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d13f7dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d13f7e0: mov    %eax,-0x14000(%rsp)
  0x000000011d13f7e7: push   %rbp
  0x000000011d13f7e8: sub    $0x30,%rsp
  0x000000011d13f7ec: movabs $0x14f6b16f8,%rdi
  0x000000011d13f7f6: mov    0x18(%rdi),%ebx
  0x000000011d13f7f9: add    $0x8,%ebx
  0x000000011d13f7fc: mov    %ebx,0x18(%rdi)
  0x000000011d13f7ff: and    $0x3ff8,%ebx
  0x000000011d13f805: cmp    $0x0,%ebx
  0x000000011d13f808: je     0x000000011d13f81e  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0 (line 50)

  0x000000011d13f80e: add    $0x30,%rsp
  0x000000011d13f812: pop    %rbp
  0x000000011d13f813: mov    0x108(%r15),%r10
  0x000000011d13f81a: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d13f81d: retq   
  0x000000011d13f81e: movabs $0x14f5a4610,%r10  ;   {metadata({method} {0x000000014f5a4610} '<init>' '()V' in 'java/lang/Object')}
  0x000000011d13f828: mov    %r10,0x8(%rsp)
  0x000000011d13f82d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d13f835: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d13f83a: jmp    0x000000011d13f80e
  0x000000011d13f83c: nop
  0x000000011d13f83d: nop
  0x000000011d13f83e: mov    0x420(%r15),%rax
  0x000000011d13f845: movabs $0x0,%r10
  0x000000011d13f84f: mov    %r10,0x420(%r15)
  0x000000011d13f856: movabs $0x0,%r10
  0x000000011d13f860: mov    %r10,0x428(%r15)
  0x000000011d13f867: add    $0x30,%rsp
  0x000000011d13f86b: pop    %rbp
  0x000000011d13f86c: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d13f871: hlt    
  0x000000011d13f872: hlt    
  0x000000011d13f873: hlt    
  0x000000011d13f874: hlt    
  0x000000011d13f875: hlt    
  0x000000011d13f876: hlt    
  0x000000011d13f877: hlt    
  0x000000011d13f878: hlt    
  0x000000011d13f879: hlt    
  0x000000011d13f87a: hlt    
  0x000000011d13f87b: hlt    
  0x000000011d13f87c: hlt    
  0x000000011d13f87d: hlt    
  0x000000011d13f87e: hlt    
  0x000000011d13f87f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d13f880: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d13f885: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d13f88f: and    $0xfffffffffffffff0,%rsp
  0x000000011d13f893: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d13f898: hlt    
[Deopt Handler Code]
  0x000000011d13f899: movabs $0x11d13f899,%r10  ;   {section_word}
  0x000000011d13f8a3: push   %r10
  0x000000011d13f8a5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d13f8aa: hlt    
  0x000000011d13f8ab: hlt    
  0x000000011d13f8ac: hlt    
  0x000000011d13f8ad: hlt    
  0x000000011d13f8ae: hlt    
  0x000000011d13f8af: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 122 Compiled method (c1)      70    8       2       java.lang.String::coder (15 bytes)
 total in heap  [0x000000011d141f90,0x000000011d1422a8] = 792
 relocation     [0x000000011d142108,0x000000011d142130] = 40
 main code      [0x000000011d142140,0x000000011d142200] = 192
 stub code      [0x000000011d142200,0x000000011d142230] = 48
 metadata       [0x000000011d142230,0x000000011d142238] = 8
 scopes data    [0x000000011d142238,0x000000011d142250] = 24
 scopes pcs     [0x000000011d142250,0x000000011d1422a0] = 80
 dependencies   [0x000000011d1422a0,0x000000011d1422a8] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x000000011d142140, 0x000000011d142230]  240 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f5ae1a0} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000011d142140: mov    0x8(%rsi),%r10d
  0x000000011d142144: movabs $0x800000000,%r12
  0x000000011d14214e: add    %r12,%r10
  0x000000011d142151: xor    %r12,%r12
  0x000000011d142154: cmp    %rax,%r10
  0x000000011d142157: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14215d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d142160: mov    %eax,-0x14000(%rsp)
  0x000000011d142167: push   %rbp
  0x000000011d142168: sub    $0x30,%rsp
  0x000000011d14216c: movabs $0x14f726610,%rax
  0x000000011d142176: mov    0x18(%rax),%edi
  0x000000011d142179: add    $0x8,%edi
  0x000000011d14217c: mov    %edi,0x18(%rax)
  0x000000011d14217f: and    $0x3ff8,%edi
  0x000000011d142185: cmp    $0x0,%edi
  0x000000011d142188: je     0x000000011d1421a8  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@0 (line 3258)

  0x000000011d14218e: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)

  0x000000011d142192: shl    $0x18,%eax
  0x000000011d142195: sar    $0x18,%eax
  0x000000011d142198: add    $0x30,%rsp
  0x000000011d14219c: pop    %rbp
  0x000000011d14219d: mov    0x108(%r15),%r10
  0x000000011d1421a4: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1421a7: retq   
  0x000000011d1421a8: movabs $0x14f5ae1a0,%r10  ;   {metadata({method} {0x000000014f5ae1a0} 'coder' '()B' in 'java/lang/String')}
  0x000000011d1421b2: mov    %r10,0x8(%rsp)
  0x000000011d1421b7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d1421bf: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1421c4: jmp    0x000000011d14218e
  0x000000011d1421c6: nop
  0x000000011d1421c7: nop
  0x000000011d1421c8: mov    0x420(%r15),%rax
  0x000000011d1421cf: movabs $0x0,%r10
  0x000000011d1421d9: mov    %r10,0x420(%r15)
  0x000000011d1421e0: movabs $0x0,%r10
  0x000000011d1421ea: mov    %r10,0x428(%r15)
  0x000000011d1421f1: add    $0x30,%rsp
  0x000000011d1421f5: pop    %rbp
  0x000000011d1421f6: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d1421fb: hlt    
  0x000000011d1421fc: hlt    
  0x000000011d1421fd: hlt    
  0x000000011d1421fe: hlt    
  0x000000011d1421ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d142200: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d142205: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14220f: and    $0xfffffffffffffff0,%rsp
  0x000000011d142213: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d142218: hlt    
[Deopt Handler Code]
  0x000000011d142219: movabs $0x11d142219,%r10  ;   {section_word}
  0x000000011d142223: push   %r10
  0x000000011d142225: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14222a: hlt    
  0x000000011d14222b: hlt    
  0x000000011d14222c: hlt    
  0x000000011d14222d: hlt    
  0x000000011d14222e: hlt    
  0x000000011d14222f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 132 Compiled method (c1)      71   19       2       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x000000011d141b10,0x000000011d141f40] = 1072
 relocation     [0x000000011d141c88,0x000000011d141cc0] = 56
 main code      [0x000000011d141cc0,0x000000011d141e00] = 320
 stub code      [0x000000011d141e00,0x000000011d141e40] = 64
 metadata       [0x000000011d141e40,0x000000011d141e48] = 8
 scopes data    [0x000000011d141e48,0x000000011d141e88] = 64
 scopes pcs     [0x000000011d141e88,0x000000011d141f38] = 176
 dependencies   [0x000000011d141f38,0x000000011d141f40] = 8
----------------------------------------------------------------------
java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011d141cc0, 0x000000011d141e40]  384 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6c2ed0} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011d141cc0: mov    %eax,-0x14000(%rsp)
  0x000000011d141cc7: push   %rbp
  0x000000011d141cc8: sub    $0x30,%rsp
  0x000000011d141ccc: movabs $0x14f6c3868,%rax
  0x000000011d141cd6: mov    0x18(%rax),%edx
  0x000000011d141cd9: add    $0x8,%edx
  0x000000011d141cdc: mov    %edx,0x18(%rax)
  0x000000011d141cdf: and    $0x3ff8,%edx
  0x000000011d141ce5: cmp    $0x0,%edx
  0x000000011d141ce8: je     0x000000011d141d86  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@0 (line 220)

  0x000000011d141cee: cmp    $0x0,%rsi
  0x000000011d141cf2: je     0x000000011d141d0b  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)

  0x000000011d141cf8: mov    %rsi,%rax
  0x000000011d141cfb: add    $0x30,%rsp
  0x000000011d141cff: pop    %rbp
  0x000000011d141d00: mov    0x108(%r15),%r10
  0x000000011d141d07: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d141d0a: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@13 (line 222)

  0x000000011d141d0b: nopl   0x0(%rax,%rax,1)
  0x000000011d141d10: jmpq   0x000000011d141db6  ;   {no_reloc}
  0x000000011d141d15: add    %al,(%rax)
  0x000000011d141d17: add    %al,(%rax)
  0x000000011d141d19: add    %cl,-0x75(%rcx)
  0x000000011d141d1c: xchg   %ebx,(%rax)
  0x000000011d141d1e: add    %eax,(%rax)
  0x000000011d141d20: add    %cl,-0x73(%rax)
  0x000000011d141d23: js     0x000000011d141d4d
  0x000000011d141d25: cmp    0x128(%r15),%rdi
  0x000000011d141d2c: ja     0x000000011d141dc0
  0x000000011d141d32: mov    %rdi,0x118(%r15)
  0x000000011d141d39: mov    0xb8(%rdx),%rcx
  0x000000011d141d40: mov    %rcx,(%rax)
  0x000000011d141d43: mov    %rdx,%rcx
  0x000000011d141d46: movabs $0x800000000,%r12
  0x000000011d141d50: sub    %r12,%rcx
  0x000000011d141d53: xor    %r12,%r12
  0x000000011d141d56: mov    %ecx,0x8(%rax)
  0x000000011d141d59: xor    %rcx,%rcx
  0x000000011d141d5c: mov    %ecx,0xc(%rax)
  0x000000011d141d5f: xor    %rcx,%rcx
  0x000000011d141d62: mov    %rcx,0x10(%rax)
  0x000000011d141d66: mov    %rcx,0x18(%rax)
  0x000000011d141d6a: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)

  0x000000011d141d6e: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)

  0x000000011d141d71: mov    %rax,0x20(%rsp)
  0x000000011d141d76: nop
  0x000000011d141d77: callq  0x000000011c5c8d00  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ;   {optimized virtual_call}
  0x000000011d141d7c: mov    0x20(%rsp),%rax
  0x000000011d141d81: jmpq   0x000000011d141df5
  0x000000011d141d86: movabs $0x14f6c2ed0,%r10  ;   {metadata({method} {0x000000014f6c2ed0} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000000011d141d90: mov    %r10,0x8(%rsp)
  0x000000011d141d95: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d141d9d: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d141da2: jmpq   0x000000011d141cee
  0x000000011d141da7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d141db1: mov    $0xa050f00,%eax
  0x000000011d141db6: callq  0x000000011c690680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d141dbb: jmpq   0x000000011d141d10
  0x000000011d141dc0: mov    %rdx,%rdx
  0x000000011d141dc3: callq  0x000000011c68d700  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011d141dc8: jmp    0x000000011d141d6e
  0x000000011d141dca: nop
  0x000000011d141dcb: nop
  0x000000011d141dcc: mov    0x420(%r15),%rax
  0x000000011d141dd3: movabs $0x0,%r10
  0x000000011d141ddd: mov    %r10,0x420(%r15)
  0x000000011d141de4: movabs $0x0,%r10
  0x000000011d141dee: mov    %r10,0x428(%r15)
  0x000000011d141df5: add    $0x30,%rsp
  0x000000011d141df9: pop    %rbp
  0x000000011d141dfa: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d141dff: hlt    
[Stub Code]
  0x000000011d141e00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d141e05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d141e0f: jmpq   0x000000011d141e0f  ;   {runtime_call}
[Exception Handler]
  0x000000011d141e14: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d141e19: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d141e23: and    $0xfffffffffffffff0,%rsp
  0x000000011d141e27: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d141e2c: hlt    
[Deopt Handler Code]
  0x000000011d141e2d: movabs $0x11d141e2d,%r10  ;   {section_word}
  0x000000011d141e37: push   %r10
  0x000000011d141e39: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d141e3e: hlt    
  0x000000011d141e3f: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 188 
ImmutableOopMap{rsi=Oop }pc offsets: 226 
ImmutableOopMap{}pc offsets: 251 264 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z  [0x0000000124371a40, 0x0000000124371c78]  568 bytes
[Entry Point]
  # {method} {0x000000014f658208} 'compareAndSetObject' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x0000000124371a40: mov    0x8(%rsi),%r10d
  0x0000000124371a44: movabs $0x800000000,%r12
  0x0000000124371a4e: add    %r12,%r10
  0x0000000124371a51: xor    %r12,%r12
  0x0000000124371a54: cmp    %r10,%rax
  0x0000000124371a57: je     0x0000000124371a68
  0x0000000124371a5d: jmpq   0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x0000000124371a62: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000124371a68: mov    %eax,-0x14000(%rsp)
  0x0000000124371a6f: push   %rbp
  0x0000000124371a70: mov    %rsp,%rbp
  0x0000000124371a73: sub    $0x40,%rsp
  0x0000000124371a77: mov    %r9,0x20(%rsp)
  0x0000000124371a7c: cmp    $0x0,%r9
  0x0000000124371a80: lea    0x20(%rsp),%r9
  0x0000000124371a85: cmove  0x20(%rsp),%r9
  0x0000000124371a8b: mov    %r8,0x18(%rsp)
  0x0000000124371a90: cmp    $0x0,%r8
  0x0000000124371a94: lea    0x18(%rsp),%r8
  0x0000000124371a99: cmove  0x18(%rsp),%r8
  0x0000000124371a9f: mov    %rdx,0x8(%rsp)
  0x0000000124371aa4: cmp    $0x0,%rdx
  0x0000000124371aa8: lea    0x8(%rsp),%rdx
  0x0000000124371aad: cmove  0x8(%rsp),%rdx
  0x0000000124371ab3: mov    %rsi,(%rsp)
  0x0000000124371ab7: cmp    $0x0,%rsi
  0x0000000124371abb: lea    (%rsp),%rsi
  0x0000000124371abf: cmove  (%rsp),%rsi        ; ImmutableOopMap{[32]=Oop [24]=Oop [8]=Oop [0]=Oop }
  0x0000000124371ac4: vzeroupper 
  0x0000000124371ac7: movabs $0x124371ac4,%r10  ;   {internal_word}
  0x0000000124371ad1: mov    %r10,0x328(%r15)
  0x0000000124371ad8: mov    %rsp,0x320(%r15)
  0x0000000124371adf: cmpb   $0x0,-0x151b7a0c(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x0000000124371ae6: je     0x0000000124371b2a
  0x0000000124371aec: push   %rsi
  0x0000000124371aed: push   %rdx
  0x0000000124371aee: push   %rcx
  0x0000000124371aef: push   %r8
  0x0000000124371af1: push   %r9
  0x0000000124371af3: movabs $0x14f658208,%rsi  ;   {metadata({method} {0x000000014f658208} 'compareAndSetObject' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe')}
  0x0000000124371afd: mov    %r15,%rdi
  0x0000000124371b00: test   $0xf,%esp
  0x0000000124371b06: je     0x0000000124371b1e
  0x0000000124371b0c: sub    $0x8,%rsp
  0x0000000124371b10: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000124371b15: add    $0x8,%rsp
  0x0000000124371b19: jmpq   0x0000000124371b23
  0x0000000124371b1e: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000124371b23: pop    %r9
  0x0000000124371b25: pop    %r8
  0x0000000124371b27: pop    %rcx
  0x0000000124371b28: pop    %rdx
  0x0000000124371b29: pop    %rsi
  0x0000000124371b2a: lea    0x340(%r15),%rdi
  0x0000000124371b31: movl   $0x4,0x3b8(%r15)
  0x0000000124371b3c: callq  0x000000010ef930db  ;   {runtime_call Unsafe_CompareAndSetObject(JNIEnv_*, _jobject*, _jobject*, long, _jobject*, _jobject*)}
  0x0000000124371b41: vzeroupper 
  0x0000000124371b44: and    $0xff,%eax
  0x0000000124371b4a: setne  %al
  0x0000000124371b4d: movl   $0x5,0x3b8(%r15)
  0x0000000124371b58: lock addl $0x0,-0x40(%rsp)
  0x0000000124371b5e: testb  $0x8,0x108(%r15)
  0x0000000124371b66: jne    0x0000000124371b7d
  0x0000000124371b6c: cmpl   $0x0,0xd8(%r15)
  0x0000000124371b77: je     0x0000000124371ba1
  0x0000000124371b7d: vzeroupper 
  0x0000000124371b80: mov    %rax,-0x8(%rbp)
  0x0000000124371b84: mov    %r15,%rdi
  0x0000000124371b87: mov    %rsp,%r12
  0x0000000124371b8a: sub    $0x0,%rsp
  0x0000000124371b8e: and    $0xfffffffffffffff0,%rsp
  0x0000000124371b92: callq  0x000000010ef71148  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000124371b97: mov    %r12,%rsp
  0x0000000124371b9a: xor    %r12,%r12
  0x0000000124371b9d: mov    -0x8(%rbp),%rax
  0x0000000124371ba1: movl   $0x8,0x3b8(%r15)
  0x0000000124371bac: cmpl   $0x2,0x408(%r15)
  0x0000000124371bb7: je     0x0000000124371c4d
  0x0000000124371bbd: cmpb   $0x0,-0x151b7aea(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x0000000124371bc4: je     0x0000000124371c02
  0x0000000124371bca: mov    %rax,-0x8(%rbp)
  0x0000000124371bce: movabs $0x14f658208,%rsi  ;   {metadata({method} {0x000000014f658208} 'compareAndSetObject' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe')}
  0x0000000124371bd8: mov    %r15,%rdi
  0x0000000124371bdb: test   $0xf,%esp
  0x0000000124371be1: je     0x0000000124371bf9
  0x0000000124371be7: sub    $0x8,%rsp
  0x0000000124371beb: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000124371bf0: add    $0x8,%rsp
  0x0000000124371bf4: jmpq   0x0000000124371bfe
  0x0000000124371bf9: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000124371bfe: mov    -0x8(%rbp),%rax
  0x0000000124371c02: movabs $0x0,%r10
  0x0000000124371c0c: mov    %r10,0x320(%r15)
  0x0000000124371c13: movabs $0x0,%r10
  0x0000000124371c1d: mov    %r10,0x328(%r15)
  0x0000000124371c24: vzeroupper 
  0x0000000124371c27: mov    0xe0(%r15),%rcx
  0x0000000124371c2e: movl   $0x0,0x100(%rcx)
  0x0000000124371c38: leaveq 
  0x0000000124371c39: cmpq   $0x0,0x8(%r15)
  0x0000000124371c41: jne    0x0000000124371c48
  0x0000000124371c47: retq   
  0x0000000124371c48: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000124371c4d: vzeroupper 
  0x0000000124371c50: mov    %rax,-0x8(%rbp)
  0x0000000124371c54: mov    %rsp,%r12
  0x0000000124371c57: sub    $0x0,%rsp
  0x0000000124371c5b: and    $0xfffffffffffffff0,%rsp
  0x0000000124371c5f: callq  0x000000010ee99586  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000124371c64: mov    %r12,%rsp
  0x0000000124371c67: xor    %r12,%r12
  0x0000000124371c6a: mov    -0x8(%rbp),%rax
  0x0000000124371c6e: jmpq   0x0000000124371bbd
  0x0000000124371c73: hlt    
  0x0000000124371c74: hlt    
  0x0000000124371c75: hlt    
  0x0000000124371c76: hlt    
  0x0000000124371c77: hlt    
Compiled method (c1)      77   27       2       java.util.ImmutableCollections$SetN$SetNIterator::nextIndex (56 bytes)
 total in heap  [0x000000011d141710,0x000000011d141b00] = 1008
 relocation     [0x000000011d141888,0x000000011d1418b0] = 40
 main code      [0x000000011d1418c0,0x000000011d1419a0] = 224
 stub code      [0x000000011d1419a0,0x000000011d1419d0] = 48
 metadata       [0x000000011d1419d0,0x000000011d1419d8] = 8
 scopes data    [0x000000011d1419d8,0x000000011d141a20] = 72
 scopes pcs     [0x000000011d141a20,0x000000011d141ae0] = 192
 dependencies   [0x000000011d141ae0,0x000000011d141ae8] = 8
 nul chk table  [0x000000011d141ae8,0x000000011d141b00] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.nextIndex()I  [0x000000011d1418c0, 0x000000011d1419d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f8320f8} 'nextIndex' '()I' in 'java/util/ImmutableCollections$SetN$SetNIterator'
  #           [sp+0x40]  (sp of caller)
  0x000000011d1418c0: mov    0x8(%rsi),%r10d
  0x000000011d1418c4: movabs $0x800000000,%r12
  0x000000011d1418ce: add    %r12,%r10
  0x000000011d1418d1: xor    %r12,%r12
  0x000000011d1418d4: cmp    %rax,%r10
  0x000000011d1418d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1418dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d1418e0: mov    %eax,-0x14000(%rsp)
  0x000000011d1418e7: push   %rbp
  0x000000011d1418e8: sub    $0x30,%rsp
  0x000000011d1418ec: movabs $0x14f832500,%rax
  0x000000011d1418f6: mov    0x18(%rax),%edi
  0x000000011d1418f9: add    $0x8,%edi
  0x000000011d1418fc: mov    %edi,0x18(%rax)
  0x000000011d1418ff: and    $0x3ff8,%edi
  0x000000011d141905: cmp    $0x0,%edi
  0x000000011d141908: je     0x000000011d141942  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@0 (line 641)

  0x000000011d14190e: mov    0x10(%rsi),%eax    ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@1 (line 641)

  0x000000011d141911: dec    %eax
  0x000000011d141913: cmp    $0x0,%eax
  0x000000011d141916: jge    0x000000011d14192f  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@35 (line 647)

  0x000000011d14191c: mov    0x14(%rsi),%eax
  0x000000011d14191f: shl    $0x3,%rax          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@39 (line 648)

  0x000000011d141923: mov    0x10(%rax),%eax    ; implicit exception: dispatches to 0x000000011d141960
  0x000000011d141926: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@42 (line 648)

  0x000000011d14192a: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@45 (line 648)
                                                ; implicit exception: dispatches to 0x000000011d141965
  0x000000011d14192d: dec    %eax
  0x000000011d14192f: mov    %eax,0x10(%rsi)    ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@52 (line 651)

  0x000000011d141932: add    $0x30,%rsp
  0x000000011d141936: pop    %rbp
  0x000000011d141937: mov    0x108(%r15),%r10
  0x000000011d14193e: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d141941: retq   
  0x000000011d141942: movabs $0x14f8320f8,%r10  ;   {metadata({method} {0x000000014f8320f8} 'nextIndex' '()I' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x000000011d14194c: mov    %r10,0x8(%rsp)
  0x000000011d141951: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d141959: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@-1 (line 641)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14195e: jmp    0x000000011d14190e
  0x000000011d141960: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@42 (line 648)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d141965: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::nextIndex@45 (line 648)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14196a: nop
  0x000000011d14196b: nop
  0x000000011d14196c: mov    0x420(%r15),%rax
  0x000000011d141973: movabs $0x0,%r10
  0x000000011d14197d: mov    %r10,0x420(%r15)
  0x000000011d141984: movabs $0x0,%r10
  0x000000011d14198e: mov    %r10,0x428(%r15)
  0x000000011d141995: add    $0x30,%rsp
  0x000000011d141999: pop    %rbp
  0x000000011d14199a: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14199f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d1419a0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d1419a5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d1419af: and    $0xfffffffffffffff0,%rsp
  0x000000011d1419b3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d1419b8: hlt    
[Deopt Handler Code]
  0x000000011d1419b9: movabs $0x11d1419b9,%r10  ;   {section_word}
  0x000000011d1419c3: push   %r10
  0x000000011d1419c5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d1419ca: hlt    
  0x000000011d1419cb: hlt    
  0x000000011d1419cc: hlt    
  0x000000011d1419cd: hlt    
  0x000000011d1419ce: hlt    
  0x000000011d1419cf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 158 165 170 Compiled method (c1)      79   30       2       java.util.ImmutableCollections$MapN::probe (60 bytes)
 total in heap  [0x000000011d140f10,0x000000011d1416f0] = 2016
 relocation     [0x000000011d141088,0x000000011d1410d8] = 80
 main code      [0x000000011d1410e0,0x000000011d141360] = 640
 stub code      [0x000000011d141360,0x000000011d1413b0] = 80
 metadata       [0x000000011d1413b0,0x000000011d1413c8] = 24
 scopes data    [0x000000011d1413c8,0x000000011d1414d0] = 264
 scopes pcs     [0x000000011d1414d0,0x000000011d1416c0] = 496
 dependencies   [0x000000011d1416c0,0x000000011d1416c8] = 8
 nul chk table  [0x000000011d1416c8,0x000000011d1416f0] = 40
----------------------------------------------------------------------
java/util/ImmutableCollections$MapN.probe(Ljava/lang/Object;)I  [0x000000011d1410e0, 0x000000011d1413b0]  720 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f71e2d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN'
  # this:     rsi:rsi   = 'java/util/ImmutableCollections$MapN'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x90]  (sp of caller)
  0x000000011d1410e0: mov    0x8(%rsi),%r10d
  0x000000011d1410e4: movabs $0x800000000,%r12
  0x000000011d1410ee: add    %r12,%r10
  0x000000011d1410f1: xor    %r12,%r12
  0x000000011d1410f4: cmp    %rax,%r10
  0x000000011d1410f7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1410fd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d141100: mov    %eax,-0x14000(%rsp)
  0x000000011d141107: push   %rbp
  0x000000011d141108: sub    $0x80,%rsp
  0x000000011d14110f: mov    %rsi,0x58(%rsp)
  0x000000011d141114: mov    %rdx,0x60(%rsp)
  0x000000011d141119: movabs $0x14f71f980,%rdi
  0x000000011d141123: mov    0x18(%rdi),%ebx
  0x000000011d141126: add    $0x8,%ebx
  0x000000011d141129: mov    %ebx,0x18(%rdi)
  0x000000011d14112c: and    $0x3ff8,%ebx
  0x000000011d141132: cmp    $0x0,%ebx
  0x000000011d141135: je     0x000000011d1412a8  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@0 (line 956)

  0x000000011d14113b: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@1 (line 956)

  0x000000011d14113e: nopl   0x0(%rax)
  0x000000011d141145: movabs $0xffffffffffffffff,%rax
  0x000000011d14114f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[96]=Oop [88]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@1 (line 956)
                                                ;   {virtual_call}
  0x000000011d141154: mov    %rax,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@1 (line 956)

  0x000000011d141157: mov    0x58(%rsp),%rdi
  0x000000011d14115c: mov    0x18(%rdi),%eax
  0x000000011d14115f: shl    $0x3,%rax          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@5 (line 956)

  0x000000011d141163: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@8 (line 956)
                                                ; implicit exception: dispatches to 0x000000011d1412c9
  0x000000011d141166: mov    %rax,%rbx
  0x000000011d141169: sar    %ebx
  0x000000011d14116b: mov    %rsi,%rax
  0x000000011d14116e: cmp    $0x80000000,%eax
  0x000000011d141174: jne    0x000000011d141185
  0x000000011d14117a: xor    %edx,%edx
  0x000000011d14117c: cmp    $0xffffffff,%ebx
  0x000000011d14117f: je     0x000000011d141188
  0x000000011d141185: cltd   
  0x000000011d141186: idiv   %ebx               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)
                                                ; implicit exception: dispatches to 0x000000011d1412ce
  0x000000011d141188: mov    %rbx,%rdx
  0x000000011d14118b: xor    %rsi,%rdx
  0x000000011d14118e: cmp    $0x0,%edx
  0x000000011d141191: jge    0x000000011d1411a7  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)

  0x000000011d141197: mov    %rax,%rdx
  0x000000011d14119a: imul   %ebx,%edx
  0x000000011d14119d: cmp    %esi,%edx
  0x000000011d14119f: je     0x000000011d1411a7  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)

  0x000000011d1411a5: dec    %eax
  0x000000011d1411a7: imul   %ebx,%eax
  0x000000011d1411aa: sub    %eax,%esi
  0x000000011d1411ac: shl    %esi
  0x000000011d1411ae: mov    0x60(%rsp),%rdx
  0x000000011d1411b3: nopl   0x0(%rax,%rax,1)
  0x000000011d1411b8: mov    0x18(%rdi),%ebx
  0x000000011d1411bb: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@18 (line 959)

  0x000000011d1411bf: mov    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000000011d1412d3
  0x000000011d1411c2: cmp    %esi,%eax
  0x000000011d1411c4: jbe    0x000000011d1412d8
  0x000000011d1411ca: movslq %esi,%rax
  0x000000011d1411cd: mov    0x10(%rbx,%rax,4),%ebx
  0x000000011d1411d1: shl    $0x3,%rbx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@22 (line 959)

  0x000000011d1411d5: cmp    $0x0,%rbx
  0x000000011d1411d9: je     0x000000011d141288  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@25 (line 960)

  0x000000011d1411df: mov    %esi,0x68(%rsp)
  0x000000011d1411e3: mov    %rdx,%rax
  0x000000011d1411e6: mov    %rbx,%rdx
  0x000000011d1411e9: mov    %rax,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@35 (line 962)

  0x000000011d1411ec: nop
  0x000000011d1411ed: movabs $0xffffffffffffffff,%rax
  0x000000011d1411f7: callq  0x000000011c5c8f80  ; ImmutableOopMap{[96]=Oop [88]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@35 (line 962)
                                                ;   {virtual_call}
  0x000000011d1411fc: cmp    $0x0,%eax
  0x000000011d1411ff: jne    0x000000011d14126e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@38 (line 962)

  0x000000011d141205: mov    0x58(%rsp),%rsi
  0x000000011d14120a: mov    0x68(%rsp),%eax
  0x000000011d14120e: add    $0x2,%eax
  0x000000011d141211: mov    0x18(%rsi),%edi
  0x000000011d141214: shl    $0x3,%rdi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@48 (line 964)

  0x000000011d141218: mov    0xc(%rdi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@51 (line 964)
                                                ; implicit exception: dispatches to 0x000000011d1412e6
  0x000000011d14121b: cmp    %edi,%eax
  0x000000011d14121d: jne    0x000000011d141228  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@52 (line 964)

  0x000000011d141223: mov    $0x0,%eax
  0x000000011d141228: movabs $0x14f71f980,%rdi
  0x000000011d141232: mov    0x1c(%rdi),%ebx
  0x000000011d141235: add    $0x8,%ebx
  0x000000011d141238: mov    %ebx,0x1c(%rdi)
  0x000000011d14123b: and    $0x1fff8,%ebx
  0x000000011d141241: cmp    $0x0,%ebx
  0x000000011d141244: je     0x000000011d1412eb  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@57 (line 967)

  0x000000011d14124a: mov    0x108(%r15),%r10   ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@57 (line 967)

  0x000000011d141251: test   %eax,(%r10)        ;   {poll}
  0x000000011d141254: mov    %rax,%rdi
  0x000000011d141257: mov    0x60(%rsp),%rdx
  0x000000011d14125c: mov    %rsi,0x58(%rsp)
  0x000000011d141261: mov    %rdi,%rsi
  0x000000011d141264: mov    0x58(%rsp),%rdi
  0x000000011d141269: jmpq   0x000000011d1411b8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@57 (line 967)

  0x000000011d14126e: mov    0x68(%rsp),%edi
  0x000000011d141272: mov    %rdi,%rax
  0x000000011d141275: add    $0x80,%rsp
  0x000000011d14127c: pop    %rbp
  0x000000011d14127d: mov    0x108(%r15),%r10
  0x000000011d141284: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d141287: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@42 (line 963)

  0x000000011d141288: mov    %rsi,%rdi
  0x000000011d14128b: mov    %rdi,%rsi
  0x000000011d14128e: neg    %esi
  0x000000011d141290: mov    %rsi,%rax
  0x000000011d141293: dec    %eax
  0x000000011d141295: add    $0x80,%rsp
  0x000000011d14129c: pop    %rbp
  0x000000011d14129d: mov    0x108(%r15),%r10
  0x000000011d1412a4: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1412a7: retq   
  0x000000011d1412a8: movabs $0x14f71e2d8,%r10  ;   {metadata({method} {0x000000014f71e2d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000000011d1412b2: mov    %r10,0x8(%rsp)
  0x000000011d1412b7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d1412bf: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$MapN::probe@-1 (line 956)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1412c4: jmpq   0x000000011d14113b
  0x000000011d1412c9: callq  0x000000011c68cf20  ; ImmutableOopMap{[96]=Oop rdi=Oop [88]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@8 (line 956)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1412ce: callq  0x000000011c68cd20  ; ImmutableOopMap{[96]=Oop rdi=Oop [88]=Oop }
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; - java.util.ImmutableCollections$MapN::probe@11 (line 956)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011d1412d3: callq  0x000000011c68cf20  ; ImmutableOopMap{rdi=Oop [88]=Oop rdx=Oop [96]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@22 (line 959)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1412d8: mov    %rsi,(%rsp)
  0x000000011d1412dc: mov    %rbx,0x8(%rsp)
  0x000000011d1412e1: callq  0x000000011c68c920  ; ImmutableOopMap{rdi=Oop [88]=Oop rdx=Oop [96]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@22 (line 959)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d1412e6: callq  0x000000011c68cf20  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@51 (line 964)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1412eb: movabs $0x14f71e2d8,%r10  ;   {metadata({method} {0x000000014f71e2d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$MapN')}
  0x000000011d1412f5: mov    %r10,0x8(%rsp)
  0x000000011d1412fa: movq   $0x39,(%rsp)
  0x000000011d141302: callq  0x000000011c691600  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::probe@57 (line 967)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d141307: jmpq   0x000000011d14124a
  0x000000011d14130c: nop
  0x000000011d14130d: nop
  0x000000011d14130e: mov    0x420(%r15),%rax
  0x000000011d141315: movabs $0x0,%r10
  0x000000011d14131f: mov    %r10,0x420(%r15)
  0x000000011d141326: movabs $0x0,%r10
  0x000000011d141330: mov    %r10,0x428(%r15)
  0x000000011d141337: add    $0x80,%rsp
  0x000000011d14133e: pop    %rbp
  0x000000011d14133f: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d141344: hlt    
  0x000000011d141345: hlt    
  0x000000011d141346: hlt    
  0x000000011d141347: hlt    
  0x000000011d141348: hlt    
  0x000000011d141349: hlt    
  0x000000011d14134a: hlt    
  0x000000011d14134b: hlt    
  0x000000011d14134c: hlt    
  0x000000011d14134d: hlt    
  0x000000011d14134e: hlt    
  0x000000011d14134f: hlt    
  0x000000011d141350: hlt    
  0x000000011d141351: hlt    
  0x000000011d141352: hlt    
  0x000000011d141353: hlt    
  0x000000011d141354: hlt    
  0x000000011d141355: hlt    
  0x000000011d141356: hlt    
  0x000000011d141357: hlt    
  0x000000011d141358: hlt    
  0x000000011d141359: hlt    
  0x000000011d14135a: hlt    
  0x000000011d14135b: hlt    
  0x000000011d14135c: hlt    
  0x000000011d14135d: hlt    
  0x000000011d14135e: hlt    
  0x000000011d14135f: hlt    
[Stub Code]
  0x000000011d141360: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d141365: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14136f: jmpq   0x000000011d14136f  ;   {runtime_call}
  0x000000011d141374: nop
  0x000000011d141375: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14137f: jmpq   0x000000011d14137f  ;   {runtime_call}
[Exception Handler]
  0x000000011d141384: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d141389: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d141393: and    $0xfffffffffffffff0,%rsp
  0x000000011d141397: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14139c: hlt    
[Deopt Handler Code]
  0x000000011d14139d: movabs $0x11d14139d,%r10  ;   {section_word}
  0x000000011d1413a7: push   %r10
  0x000000011d1413a9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d1413ae: hlt    
  0x000000011d1413af: hlt    

ImmutableOopMap{[96]=Oop [88]=Oop }pc offsets: 116 284 
ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }pc offsets: 369 
ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }pc offsets: 484 
ImmutableOopMap{[96]=Oop rdi=Oop [88]=Oop }pc offsets: 494 499 
ImmutableOopMap{rdi=Oop [88]=Oop rdx=Oop [96]=Oop rbx=Oop }pc offsets: 504 518 
ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }pc offsets: 523 551 Compiled method (c1)      85   26       2       java.util.ImmutableCollections$SetN$SetNIterator::hasNext (13 bytes)
 total in heap  [0x000000011d140b90,0x000000011d140ec8] = 824
 relocation     [0x000000011d140d08,0x000000011d140d30] = 40
 main code      [0x000000011d140d40,0x000000011d140e20] = 224
 stub code      [0x000000011d140e20,0x000000011d140e50] = 48
 metadata       [0x000000011d140e50,0x000000011d140e58] = 8
 scopes data    [0x000000011d140e58,0x000000011d140e70] = 24
 scopes pcs     [0x000000011d140e70,0x000000011d140ec0] = 80
 dependencies   [0x000000011d140ec0,0x000000011d140ec8] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.hasNext()Z  [0x000000011d140d40, 0x000000011d140e50]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f832008} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator'
  #           [sp+0x40]  (sp of caller)
  0x000000011d140d40: mov    0x8(%rsi),%r10d
  0x000000011d140d44: movabs $0x800000000,%r12
  0x000000011d140d4e: add    %r12,%r10
  0x000000011d140d51: xor    %r12,%r12
  0x000000011d140d54: cmp    %rax,%r10
  0x000000011d140d57: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d140d5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d140d60: mov    %eax,-0x14000(%rsp)
  0x000000011d140d67: push   %rbp
  0x000000011d140d68: sub    $0x30,%rsp
  0x000000011d140d6c: movabs $0x14f832460,%rax
  0x000000011d140d76: mov    0x18(%rax),%edi
  0x000000011d140d79: add    $0x8,%edi
  0x000000011d140d7c: mov    %edi,0x18(%rax)
  0x000000011d140d7f: and    $0x3ff8,%edi
  0x000000011d140d85: cmp    $0x0,%edi
  0x000000011d140d88: je     0x000000011d140db7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@0 (line 637)

  0x000000011d140d8e: mov    0xc(%rsi),%eax     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 637)

  0x000000011d140d91: cmp    $0x0,%eax
  0x000000011d140d94: mov    $0x0,%eax
  0x000000011d140d99: jle    0x000000011d140da4
  0x000000011d140d9f: mov    $0x1,%eax
  0x000000011d140da4: and    $0x1,%eax
  0x000000011d140da7: add    $0x30,%rsp
  0x000000011d140dab: pop    %rbp
  0x000000011d140dac: mov    0x108(%r15),%r10
  0x000000011d140db3: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d140db6: retq   
  0x000000011d140db7: movabs $0x14f832008,%r10  ;   {metadata({method} {0x000000014f832008} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x000000011d140dc1: mov    %r10,0x8(%rsp)
  0x000000011d140dc6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d140dce: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 637)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d140dd3: jmp    0x000000011d140d8e
  0x000000011d140dd5: nop
  0x000000011d140dd6: nop
  0x000000011d140dd7: mov    0x420(%r15),%rax
  0x000000011d140dde: movabs $0x0,%r10
  0x000000011d140de8: mov    %r10,0x420(%r15)
  0x000000011d140def: movabs $0x0,%r10
  0x000000011d140df9: mov    %r10,0x428(%r15)
  0x000000011d140e00: add    $0x30,%rsp
  0x000000011d140e04: pop    %rbp
  0x000000011d140e05: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d140e0a: hlt    
  0x000000011d140e0b: hlt    
  0x000000011d140e0c: hlt    
  0x000000011d140e0d: hlt    
  0x000000011d140e0e: hlt    
  0x000000011d140e0f: hlt    
  0x000000011d140e10: hlt    
  0x000000011d140e11: hlt    
  0x000000011d140e12: hlt    
  0x000000011d140e13: hlt    
  0x000000011d140e14: hlt    
  0x000000011d140e15: hlt    
  0x000000011d140e16: hlt    
  0x000000011d140e17: hlt    
  0x000000011d140e18: hlt    
  0x000000011d140e19: hlt    
  0x000000011d140e1a: hlt    
  0x000000011d140e1b: hlt    
  0x000000011d140e1c: hlt    
  0x000000011d140e1d: hlt    
  0x000000011d140e1e: hlt    
  0x000000011d140e1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d140e20: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d140e25: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d140e2f: and    $0xfffffffffffffff0,%rsp
  0x000000011d140e33: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d140e38: hlt    
[Deopt Handler Code]
  0x000000011d140e39: movabs $0x11d140e39,%r10  ;   {section_word}
  0x000000011d140e43: push   %r10
  0x000000011d140e45: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d140e4a: hlt    
  0x000000011d140e4b: hlt    
  0x000000011d140e4c: hlt    
  0x000000011d140e4d: hlt    
  0x000000011d140e4e: hlt    
  0x000000011d140e4f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 147 Compiled method (c1)      86   32       2       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)
 total in heap  [0x000000011d140490,0x000000011d140b30] = 1696
 relocation     [0x000000011d140608,0x000000011d140658] = 80
 main code      [0x000000011d140660,0x000000011d140860] = 512
 stub code      [0x000000011d140860,0x000000011d1408b0] = 80
 metadata       [0x000000011d1408b0,0x000000011d1408c0] = 16
 scopes data    [0x000000011d1408c0,0x000000011d140960] = 160
 scopes pcs     [0x000000011d140960,0x000000011d140b10] = 432
 dependencies   [0x000000011d140b10,0x000000011d140b18] = 8
 nul chk table  [0x000000011d140b18,0x000000011d140b30] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.next()Ljava/lang/Object;  [0x000000011d140660, 0x000000011d1408b0]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f8321e0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator'
  #           [sp+0x60]  (sp of caller)
  0x000000011d140660: mov    0x8(%rsi),%r10d
  0x000000011d140664: movabs $0x800000000,%r12
  0x000000011d14066e: add    %r12,%r10
  0x000000011d140671: xor    %r12,%r12
  0x000000011d140674: cmp    %rax,%r10
  0x000000011d140677: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14067d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d140680: mov    %eax,-0x14000(%rsp)
  0x000000011d140687: push   %rbp
  0x000000011d140688: sub    $0x50,%rsp
  0x000000011d14068c: mov    %rsi,0x38(%rsp)
  0x000000011d140691: movabs $0x14f8324b0,%rdi
  0x000000011d14069b: mov    0x18(%rdi),%ebx
  0x000000011d14069e: add    $0x8,%ebx
  0x000000011d1406a1: mov    %ebx,0x18(%rdi)
  0x000000011d1406a4: and    $0x3ff8,%ebx
  0x000000011d1406aa: cmp    $0x0,%ebx
  0x000000011d1406ad: je     0x000000011d14079e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@0 (line 656)

  0x000000011d1406b3: mov    0xc(%rsi),%edi     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x000000011d1406b6: cmp    $0x0,%edi
  0x000000011d1406b9: mov    $0x0,%edi
  0x000000011d1406be: jle    0x000000011d1406c9
  0x000000011d1406c4: mov    $0x1,%edi
  0x000000011d1406c9: and    $0x1,%edi
  0x000000011d1406cc: cmp    $0x0,%edi
  0x000000011d1406cf: je     0x000000011d140772
  0x000000011d1406d5: jmpq   0x000000011d140711  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@4 (line 656)

  0x000000011d1406da: nopw   0x0(%rax,%rax,1)
  0x000000011d1406e0: movabs $0x14f8324b0,%rax
  0x000000011d1406ea: mov    0x1c(%rax),%edx
  0x000000011d1406ed: add    $0x8,%edx
  0x000000011d1406f0: mov    %edx,0x1c(%rax)
  0x000000011d1406f3: and    $0x1fff8,%edx
  0x000000011d1406f9: cmp    $0x0,%edx
  0x000000011d1406fc: je     0x000000011d1407bf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)

  0x000000011d140702: mov    0x108(%r15),%r10   ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)

  0x000000011d140709: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)
                                                ;   {poll}
  0x000000011d14070c: mov    0x38(%rsp),%rsi
  0x000000011d140711: mov    0x14(%rsi),%edi
  0x000000011d140714: shl    $0x3,%rdi          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@8 (line 659)

  0x000000011d140718: mov    0x10(%rdi),%edi    ; implicit exception: dispatches to 0x000000011d1407e0
  0x000000011d14071b: shl    $0x3,%rdi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 659)

  0x000000011d14071f: mov    %rsi,%rbx
  0x000000011d140722: mov    %rbx,%rsi          ;*invokevirtual nextIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 659)

  0x000000011d140725: mov    %rdi,0x30(%rsp)
  0x000000011d14072a: nopl   0x0(%rax,%rax,1)
  0x000000011d14072f: callq  0x000000011d1418e0  ; ImmutableOopMap{[56]=Oop [48]=Oop }
                                                ;*invokevirtual nextIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 659)
                                                ;   {optimized virtual_call}
  0x000000011d140734: mov    0x30(%rsp),%rdi
  0x000000011d140739: mov    0xc(%rdi),%edx     ; implicit exception: dispatches to 0x000000011d1407e5
  0x000000011d14073c: cmp    %eax,%edx
  0x000000011d14073e: jbe    0x000000011d1407ea
  0x000000011d140744: movslq %eax,%rax
  0x000000011d140747: mov    0x10(%rdi,%rax,4),%eax
  0x000000011d14074b: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)

  0x000000011d14074f: cmp    $0x0,%rax
  0x000000011d140753: je     0x000000011d1406e0  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@21 (line 659)

  0x000000011d140755: mov    0x38(%rsp),%rsi
  0x000000011d14075a: mov    0xc(%rsi),%edx     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@29 (line 660)

  0x000000011d14075d: dec    %edx
  0x000000011d14075f: mov    %edx,0xc(%rsi)     ;*putfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@34 (line 660)

  0x000000011d140762: add    $0x50,%rsp
  0x000000011d140766: pop    %rbp
  0x000000011d140767: mov    0x108(%r15),%r10
  0x000000011d14076e: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d140771: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@38 (line 661)

  0x000000011d140772: nopw   0x0(%rax,%rax,1)
  0x000000011d140778: jmpq   0x000000011d140807  ;   {no_reloc}
  0x000000011d14077d: add    %al,(%rax)
  0x000000011d14077f: add    %al,(%rax)
  0x000000011d140781: add    %ch,%cl
  0x000000011d140783: mov    (%rax),%al
  0x000000011d140785: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)

  0x000000011d140787: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@43 (line 663)

  0x000000011d14078a: mov    %rax,0x40(%rsp)
  0x000000011d14078f: callq  0x000000011c5c8d00  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@43 (line 663)
                                                ;   {optimized virtual_call}
  0x000000011d140794: mov    0x40(%rsp),%rax
  0x000000011d140799: jmpq   0x000000011d140849
  0x000000011d14079e: movabs $0x14f8321e0,%r10  ;   {metadata({method} {0x000000014f8321e0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x000000011d1407a8: mov    %r10,0x8(%rsp)
  0x000000011d1407ad: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d1407b5: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@-1 (line 656)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1407ba: jmpq   0x000000011d1406b3
  0x000000011d1407bf: movabs $0x14f8321e0,%r10  ;   {metadata({method} {0x000000014f8321e0} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x000000011d1407c9: mov    %r10,0x8(%rsp)
  0x000000011d1407ce: movq   $0x18,(%rsp)
  0x000000011d1407d6: callq  0x000000011c691600  ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1407db: jmpq   0x000000011d140702
  0x000000011d1407e0: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 659)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1407e5: callq  0x000000011c68cf20  ; ImmutableOopMap{[56]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1407ea: mov    %rax,(%rsp)
  0x000000011d1407ee: mov    %rdi,0x8(%rsp)
  0x000000011d1407f3: callq  0x000000011c68c920  ; ImmutableOopMap{[56]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d1407f8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d140802: mov    $0xa050f00,%eax
  0x000000011d140807: callq  0x000000011c690680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d14080c: jmpq   0x000000011d140778
  0x000000011d140811: mov    %rdx,%rdx
  0x000000011d140814: callq  0x000000011c68d400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011d140819: jmpq   0x000000011d140787
  0x000000011d14081e: nop
  0x000000011d14081f: nop
  0x000000011d140820: mov    0x420(%r15),%rax
  0x000000011d140827: movabs $0x0,%r10
  0x000000011d140831: mov    %r10,0x420(%r15)
  0x000000011d140838: movabs $0x0,%r10
  0x000000011d140842: mov    %r10,0x428(%r15)
  0x000000011d140849: add    $0x50,%rsp
  0x000000011d14084d: pop    %rbp
  0x000000011d14084e: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d140853: hlt    
  0x000000011d140854: hlt    
  0x000000011d140855: hlt    
  0x000000011d140856: hlt    
  0x000000011d140857: hlt    
  0x000000011d140858: hlt    
  0x000000011d140859: hlt    
  0x000000011d14085a: hlt    
  0x000000011d14085b: hlt    
  0x000000011d14085c: hlt    
  0x000000011d14085d: hlt    
  0x000000011d14085e: hlt    
  0x000000011d14085f: hlt    
[Stub Code]
  0x000000011d140860: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d140865: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14086f: jmpq   0x000000011d14086f  ;   {runtime_call}
  0x000000011d140874: nop
  0x000000011d140875: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14087f: jmpq   0x000000011d14087f  ;   {runtime_call}
[Exception Handler]
  0x000000011d140884: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d140889: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d140893: and    $0xfffffffffffffff0,%rsp
  0x000000011d140897: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14089c: hlt    
[Deopt Handler Code]
  0x000000011d14089d: movabs $0x11d14089d,%r10  ;   {section_word}
  0x000000011d1408a7: push   %r10
  0x000000011d1408a9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d1408ae: hlt    
  0x000000011d1408af: hlt    

ImmutableOopMap{[56]=Oop }pc offsets: 169 
ImmutableOopMap{[56]=Oop [48]=Oop }pc offsets: 212 
ImmutableOopMap{[64]=Oop }pc offsets: 308 
ImmutableOopMap{rsi=Oop [56]=Oop }pc offsets: 346 
ImmutableOopMap{[56]=Oop }pc offsets: 379 
ImmutableOopMap{rsi=Oop [56]=Oop }pc offsets: 389 
ImmutableOopMap{[56]=Oop rdi=Oop }pc offsets: 394 408 
ImmutableOopMap{}pc offsets: 428 441 Compiled method (c1)      91   40       2       java.util.concurrent.ConcurrentHashMap::casTabAt (21 bytes)
 total in heap  [0x000000011d145a90,0x000000011d145e10] = 896
 relocation     [0x000000011d145c08,0x000000011d145c30] = 40
 main code      [0x000000011d145c40,0x000000011d145d60] = 288
 stub code      [0x000000011d145d60,0x000000011d145d90] = 48
 metadata       [0x000000011d145d90,0x000000011d145d98] = 8
 scopes data    [0x000000011d145d98,0x000000011d145db8] = 32
 scopes pcs     [0x000000011d145db8,0x000000011d145e08] = 80
 dependencies   [0x000000011d145e08,0x000000011d145e10] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.casTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z  [0x000000011d145c40, 0x000000011d145d90]  336 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6d77b8} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi:rsi   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/util/concurrent/ConcurrentHashMap$Node'
  # parm3:    r8:r8     = 'java/util/concurrent/ConcurrentHashMap$Node'
  #           [sp+0x50]  (sp of caller)
  0x000000011d145c40: mov    %eax,-0x14000(%rsp)
  0x000000011d145c47: push   %rbp
  0x000000011d145c48: sub    $0x40,%rsp
  0x000000011d145c4c: mov    %rcx,%rax
  0x000000011d145c4f: movabs $0x14f700558,%rcx
  0x000000011d145c59: mov    0x18(%rcx),%edi
  0x000000011d145c5c: add    $0x8,%edi
  0x000000011d145c5f: mov    %edi,0x18(%rcx)
  0x000000011d145c62: and    $0x3ff8,%edi
  0x000000011d145c68: cmp    $0x0,%edi
  0x000000011d145c6b: je     0x000000011d145ce2  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@0 (line 765)

  0x000000011d145c71: movslq %edx,%rdx
  0x000000011d145c74: mov    $0x2,%ecx
  0x000000011d145c79: shl    %cl,%rdx
  0x000000011d145c7c: movabs $0x10,%r10
  0x000000011d145c86: add    %r10,%rdx
  0x000000011d145c89: lea    (%rsi,%rdx,1),%rsi
  0x000000011d145c8d: movsbl 0x30(%r15),%edi
  0x000000011d145c92: cmp    $0x0,%edi
  0x000000011d145c95: jne    0x000000011d145d03
  0x000000011d145c9b: shr    $0x3,%rax
  0x000000011d145c9f: mov    %r8,%r10
  0x000000011d145ca2: shr    $0x3,%r10
  0x000000011d145ca6: lock cmpxchg %r10d,(%rsi)
  0x000000011d145cab: mov    $0x1,%eax
  0x000000011d145cb0: je     0x000000011d145cbb
  0x000000011d145cb6: mov    $0x0,%eax
  0x000000011d145cbb: mov    %rsi,%rdi
  0x000000011d145cbe: xor    %r8,%rdi
  0x000000011d145cc1: shr    $0x16,%rdi
  0x000000011d145cc5: cmp    $0x0,%rdi
  0x000000011d145cc9: jne    0x000000011d145d1a  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17 (line 765)

  0x000000011d145ccf: and    $0x1,%eax
  0x000000011d145cd2: add    $0x40,%rsp
  0x000000011d145cd6: pop    %rbp
  0x000000011d145cd7: mov    0x108(%r15),%r10
  0x000000011d145cde: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d145ce1: retq   
  0x000000011d145ce2: movabs $0x14f6d77b8,%r10  ;   {metadata({method} {0x000000014f6d77b8} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d145cec: mov    %r10,0x8(%rsp)
  0x000000011d145cf1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d145cf9: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rax=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 765)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d145cfe: jmpq   0x000000011d145c71
  0x000000011d145d03: mov    (%rsi),%edi
  0x000000011d145d05: shl    $0x3,%rdi
  0x000000011d145d09: cmp    $0x0,%rdi
  0x000000011d145d0d: je     0x000000011d145c9b
  0x000000011d145d0f: mov    %rdi,(%rsp)
  0x000000011d145d13: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d145d18: jmp    0x000000011d145c9b
  0x000000011d145d1a: cmp    $0x0,%r8
  0x000000011d145d1e: je     0x000000011d145ccf
  0x000000011d145d20: mov    %rsi,(%rsp)
  0x000000011d145d24: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d145d29: jmp    0x000000011d145ccf
  0x000000011d145d2b: nop
  0x000000011d145d2c: nop
  0x000000011d145d2d: mov    0x420(%r15),%rax
  0x000000011d145d34: movabs $0x0,%r10
  0x000000011d145d3e: mov    %r10,0x420(%r15)
  0x000000011d145d45: movabs $0x0,%r10
  0x000000011d145d4f: mov    %r10,0x428(%r15)
  0x000000011d145d56: add    $0x40,%rsp
  0x000000011d145d5a: pop    %rbp
  0x000000011d145d5b: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
[Stub Code]
  0x000000011d145d60: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d145d65: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d145d6f: and    $0xfffffffffffffff0,%rsp
  0x000000011d145d73: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d145d78: hlt    
[Deopt Handler Code]
  0x000000011d145d79: movabs $0x11d145d79,%r10  ;   {section_word}
  0x000000011d145d83: push   %r10
  0x000000011d145d85: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d145d8a: hlt    
  0x000000011d145d8b: hlt    
  0x000000011d145d8c: hlt    
  0x000000011d145d8d: hlt    
  0x000000011d145d8e: hlt    
  0x000000011d145d8f: hlt    

ImmutableOopMap{rsi=Oop rax=Oop r8=Oop }pc offsets: 190 Compiled method (c1)      93   41       2       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
 total in heap  [0x000000011d145710,0x000000011d145a60] = 848
 relocation     [0x000000011d145888,0x000000011d1458b8] = 48
 main code      [0x000000011d1458c0,0x000000011d145980] = 192
 stub code      [0x000000011d145980,0x000000011d1459c0] = 64
 metadata       [0x000000011d1459c0,0x000000011d1459d0] = 16
 scopes data    [0x000000011d1459d0,0x000000011d1459f8] = 40
 scopes pcs     [0x000000011d1459f8,0x000000011d145a58] = 96
 dependencies   [0x000000011d145a58,0x000000011d145a60] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011d1458c0, 0x000000011d1459c0]  256 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6d9b60} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011d1458c0: mov    0x8(%rsi),%r10d
  0x000000011d1458c4: movabs $0x800000000,%r12
  0x000000011d1458ce: add    %r12,%r10
  0x000000011d1458d1: xor    %r12,%r12
  0x000000011d1458d4: cmp    %rax,%r10
  0x000000011d1458d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1458dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d1458e0: mov    %eax,-0x14000(%rsp)
  0x000000011d1458e7: push   %rbp
  0x000000011d1458e8: sub    $0x30,%rsp
  0x000000011d1458ec: movabs $0x14f830830,%r8
  0x000000011d1458f6: mov    0x18(%r8),%edi
  0x000000011d1458fa: add    $0x8,%edi
  0x000000011d1458fd: mov    %edi,0x18(%r8)
  0x000000011d145901: and    $0x3ff8,%edi
  0x000000011d145907: cmp    $0x0,%edi
  0x000000011d14590a: je     0x000000011d14592c  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@0 (line 1541)

  0x000000011d145910: mov    $0x1,%r8d          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)

  0x000000011d145916: nop
  0x000000011d145917: callq  0x000000011c5c8d00  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)
                                                ;   {optimized virtual_call}
  0x000000011d14591c: add    $0x30,%rsp
  0x000000011d145920: pop    %rbp
  0x000000011d145921: mov    0x108(%r15),%r10
  0x000000011d145928: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14592b: retq   
  0x000000011d14592c: movabs $0x14f6d9b60,%r10  ;   {metadata({method} {0x000000014f6d9b60} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d145936: mov    %r10,0x8(%rsp)
  0x000000011d14593b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d145943: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@-1 (line 1541)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d145948: jmp    0x000000011d145910
  0x000000011d14594a: nop
  0x000000011d14594b: nop
  0x000000011d14594c: mov    0x420(%r15),%rax
  0x000000011d145953: movabs $0x0,%r10
  0x000000011d14595d: mov    %r10,0x420(%r15)
  0x000000011d145964: movabs $0x0,%r10
  0x000000011d14596e: mov    %r10,0x428(%r15)
  0x000000011d145975: add    $0x30,%rsp
  0x000000011d145979: pop    %rbp
  0x000000011d14597a: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14597f: hlt    
[Stub Code]
  0x000000011d145980: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d145985: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14598f: jmpq   0x000000011d14598f  ;   {runtime_call}
[Exception Handler]
  0x000000011d145994: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d145999: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d1459a3: and    $0xfffffffffffffff0,%rsp
  0x000000011d1459a7: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d1459ac: hlt    
[Deopt Handler Code]
  0x000000011d1459ad: movabs $0x11d1459ad,%r10  ;   {section_word}
  0x000000011d1459b7: push   %r10
  0x000000011d1459b9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d1459be: hlt    
  0x000000011d1459bf: hlt    

ImmutableOopMap{}pc offsets: 92 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 136 Compiled method (c1)      95   35   !   2       java.util.concurrent.ConcurrentHashMap::putVal (432 bytes)
 total in heap  [0x000000011d143110,0x000000011d145700] = 9712
 relocation     [0x000000011d143288,0x000000011d1433b8] = 304
 main code      [0x000000011d1433c0,0x000000011d144540] = 4480
 stub code      [0x000000011d144540,0x000000011d144610] = 208
 metadata       [0x000000011d144610,0x000000011d144638] = 40
 scopes data    [0x000000011d144638,0x000000011d144d08] = 1744
 scopes pcs     [0x000000011d144d08,0x000000011d145598] = 2192
 dependencies   [0x000000011d145598,0x000000011d1455a0] = 8
 handler table  [0x000000011d1455a0,0x000000011d1456d8] = 312
 nul chk table  [0x000000011d1456d8,0x000000011d145700] = 40
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;  [0x000000011d1433c0, 0x000000011d144610]  4688 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6d8650} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8        = boolean
  #           [sp+0x140]  (sp of caller)
  0x000000011d1433c0: mov    0x8(%rsi),%r10d
  0x000000011d1433c4: movabs $0x800000000,%r12
  0x000000011d1433ce: add    %r12,%r10
  0x000000011d1433d1: xor    %r12,%r12
  0x000000011d1433d4: cmp    %rax,%r10
  0x000000011d1433d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1433dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d1433e0: mov    %eax,-0x14000(%rsp)
  0x000000011d1433e7: push   %rbp
  0x000000011d1433e8: sub    $0x130,%rsp
  0x000000011d1433ef: mov    %rsi,0xa8(%rsp)
  0x000000011d1433f7: mov    %rdx,0xb0(%rsp)
  0x000000011d1433ff: mov    %rcx,0xb8(%rsp)
  0x000000011d143407: mov    %r8d,0xc0(%rsp)
  0x000000011d14340f: movabs $0x14f6fb460,%rdi
  0x000000011d143419: mov    0x18(%rdi),%ebx
  0x000000011d14341c: add    $0x8,%ebx
  0x000000011d14341f: mov    %ebx,0x18(%rdi)
  0x000000011d143422: and    $0x3ff8,%ebx
  0x000000011d143428: cmp    $0x0,%ebx
  0x000000011d14342b: je     0x000000011d1441b3  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0 (line 1011)

  0x000000011d143431: cmp    $0x0,%rdx
  0x000000011d143435: je     0x000000011d1440d4  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1 (line 1011)

  0x000000011d14343b: cmp    $0x0,%rcx
  0x000000011d14343f: je     0x000000011d1440d4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5 (line 1011)

  0x000000011d143445: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)

  0x000000011d143448: nopl   0x0(%rax,%rax,1)
  0x000000011d14344d: movabs $0xffffffffffffffff,%rax
  0x000000011d143457: callq  0x000000011c5c8f80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {virtual_call}
  0x000000011d14345c: mov    %rax,%rsi
  0x000000011d14345f: shr    $0x10,%esi
  0x000000011d143462: xor    %rax,%rsi
  0x000000011d143465: and    $0x7fffffff,%esi
  0x000000011d14346b: mov    %esi,0xc8(%rsp)
  0x000000011d143472: mov    0xa8(%rsp),%rdi
  0x000000011d14347a: mov    0x28(%rdi),%ebx
  0x000000011d14347d: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29 (line 1014)

  0x000000011d143481: mov    $0x0,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34 (line 1016)

  0x000000011d143486: mov    %eax,0xc4(%rsp)
  0x000000011d14348d: data16 xchg %ax,%ax
  0x000000011d143490: cmp    $0x0,%rbx
  0x000000011d143494: je     0x000000011d1434a8  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36 (line 1016)

  0x000000011d14349a: mov    0xc(%rbx),%r9d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ; implicit exception: dispatches to 0x000000011d1441d4
  0x000000011d14349e: cmp    $0x0,%r9d
  0x000000011d1434a2: jne    0x000000011d1434d0  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45 (line 1016)

  0x000000011d1434a8: mov    %rdi,%rsi          ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)

  0x000000011d1434ab: nopl   0x0(%rax)
  0x000000011d1434af: callq  0x000000011c5c8d00  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }
                                                ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
                                                ;   {optimized virtual_call}
  0x000000011d1434b4: mov    0xc4(%rsp),%esi
  0x000000011d1434bb: mov    0xc0(%rsp),%r8d
  0x000000011d1434c3: mov    0xb8(%rsp),%rcx
  0x000000011d1434cb: jmpq   0x000000011d143f68  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54 (line 1017)

  0x000000011d1434d0: dec    %r9d
  0x000000011d1434d3: and    0xc8(%rsp),%r9d
  0x000000011d1434db: movslq %r9d,%rdx
  0x000000011d1434de: mov    $0x2,%ecx
  0x000000011d1434e3: shl    %cl,%rdx
  0x000000011d1434e6: movabs $0x10,%r10
  0x000000011d1434f0: add    %r10,%rdx
  0x000000011d1434f3: mov    (%rbx,%rdx,1),%esi
  0x000000011d1434f6: shl    $0x3,%rsi
  0x000000011d1434fa: mov    %rbx,%rdi
  0x000000011d1434fd: movabs $0xc,%rax
  0x000000011d143507: cmp    %rax,%rdx
  0x000000011d14350a: jne    0x000000011d14354b
  0x000000011d143510: cmp    $0x0,%rdi
  0x000000011d143514: je     0x000000011d14354b
  0x000000011d14351a: mov    0x8(%rdi),%edi
  0x000000011d14351d: movabs $0x800000000,%r12
  0x000000011d143527: add    %r12,%rdi
  0x000000011d14352a: xor    %r12,%r12
  0x000000011d14352d: movsbl 0x18b(%rdi),%edi
  0x000000011d143534: cmp    $0x0,%edi
  0x000000011d143537: je     0x000000011d14354b
  0x000000011d14353d: movsbl 0x30(%r15),%edi
  0x000000011d143542: cmp    $0x0,%edi
  0x000000011d143545: jne    0x000000011d1441d9
  0x000000011d14354b: cmp    $0x0,%rsi
  0x000000011d14354f: je     0x000000011d143581
  0x000000011d143555: movabs $0x80001b608,%rax  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000011d14355f: mov    0x8(%rsi),%ecx
  0x000000011d143562: movabs $0x800000000,%r12
  0x000000011d14356c: add    %r12,%rcx
  0x000000011d14356f: xor    %r12,%r12
  0x000000011d143572: cmp    0x38(%rcx),%rax
  0x000000011d143576: jne    0x000000011d1441f1
  0x000000011d14357c: jmpq   0x000000011d143581
  0x000000011d143581: mov    %rsi,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)

  0x000000011d143584: mov    %rdi,0xd0(%rsp)
  0x000000011d14358c: cmp    $0x0,%rdi
  0x000000011d143590: mov    %rdx,%r8
  0x000000011d143593: jne    0x000000011d1436f0  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75 (line 1018)

  0x000000011d143599: mov    0xc8(%rsp),%esi
  0x000000011d1435a0: mov    0xb8(%rsp),%rcx
  0x000000011d1435a8: mov    0xb0(%rsp),%rdx
  0x000000011d1435b0: mov    %rdx,%r11
  0x000000011d1435b3: movabs $0x80001b608,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000011d1435bd: mov    %rcx,%r14
  0x000000011d1435c0: mov    %rsi,%r13
  0x000000011d1435c3: mov    0x118(%r15),%rax
  0x000000011d1435ca: lea    0x20(%rax),%rdi
  0x000000011d1435ce: cmp    0x128(%r15),%rdi
  0x000000011d1435d5: ja     0x000000011d1441fa
  0x000000011d1435db: mov    %rdi,0x118(%r15)
  0x000000011d1435e2: mov    0xb8(%rdx),%rcx
  0x000000011d1435e9: mov    %rcx,(%rax)
  0x000000011d1435ec: mov    %rdx,%rcx
  0x000000011d1435ef: movabs $0x800000000,%r12
  0x000000011d1435f9: sub    %r12,%rcx
  0x000000011d1435fc: xor    %r12,%r12
  0x000000011d1435ff: mov    %ecx,0x8(%rax)
  0x000000011d143602: xor    %rcx,%rcx
  0x000000011d143605: mov    %ecx,0xc(%rax)
  0x000000011d143608: xor    %rcx,%rcx
  0x000000011d14360b: mov    %rcx,0x10(%rax)
  0x000000011d14360f: mov    %rcx,0x18(%rax)
  0x000000011d143613: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)

  0x000000011d143616: mov    %r13d,0xc(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 632)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x000000011d14361a: movsbl 0x30(%r15),%eax
  0x000000011d14361f: cmp    $0x0,%eax
  0x000000011d143622: jne    0x000000011d144207
  0x000000011d143628: mov    %r11,%r10
  0x000000011d14362b: shr    $0x3,%r10
  0x000000011d14362f: mov    %r10d,0x10(%rdx)
  0x000000011d143633: mov    %rdx,%rax
  0x000000011d143636: xor    %r11,%rax
  0x000000011d143639: shr    $0x16,%rax
  0x000000011d14363d: cmp    $0x0,%rax
  0x000000011d143641: jne    0x000000011d144226  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@11 (line 633)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x000000011d143647: movsbl 0x30(%r15),%eax
  0x000000011d14364c: cmp    $0x0,%eax
  0x000000011d14364f: jne    0x000000011d14423e
  0x000000011d143655: mov    %r14,%r10
  0x000000011d143658: shr    $0x3,%r10
  0x000000011d14365c: mov    %r10d,0x14(%rdx)
  0x000000011d143660: lock addl $0x0,-0x40(%rsp)
  0x000000011d143666: mov    %rdx,%rax
  0x000000011d143669: xor    %r14,%rax
  0x000000011d14366c: shr    $0x16,%rax
  0x000000011d143670: cmp    $0x0,%rax
  0x000000011d143674: jne    0x000000011d14425d  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16 (line 634)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x000000011d14367a: lea    (%rbx,%r8,1),%rcx
  0x000000011d14367e: movsbl 0x30(%r15),%eax
  0x000000011d143683: cmp    $0x0,%eax
  0x000000011d143686: jne    0x000000011d144275
  0x000000011d14368c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011d143696: shr    $0x3,%rax
  0x000000011d14369a: mov    %rdx,%r10
  0x000000011d14369d: shr    $0x3,%r10
  0x000000011d1436a1: lock cmpxchg %r10d,(%rcx)
  0x000000011d1436a6: mov    $0x1,%esi
  0x000000011d1436ab: je     0x000000011d1436b6
  0x000000011d1436b1: mov    $0x0,%esi
  0x000000011d1436b6: mov    %rcx,%rdi
  0x000000011d1436b9: xor    %rdx,%rdi
  0x000000011d1436bc: shr    $0x16,%rdi
  0x000000011d1436c0: cmp    $0x0,%rdi
  0x000000011d1436c4: jne    0x000000011d144293  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17 (line 765)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)

  0x000000011d1436ca: and    $0x1,%esi
  0x000000011d1436cd: cmp    $0x0,%esi
  0x000000011d1436d0: jne    0x000000011d144046  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@97 (line 1019)

  0x000000011d1436d6: mov    %rbx,%rax
  0x000000011d1436d9: mov    0xc4(%rsp),%esi
  0x000000011d1436e0: mov    0xc0(%rsp),%r8d
  0x000000011d1436e8: mov    %r14,%rcx
  0x000000011d1436eb: jmpq   0x000000011d143f68  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x000000011d1436f0: mov    0xc8(%rsp),%r13d
  0x000000011d1436f8: mov    0xb8(%rsp),%r14
  0x000000011d143700: mov    0xb0(%rsp),%r11
  0x000000011d143708: mov    0xc(%rdi),%eax     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                ; implicit exception: dispatches to 0x000000011d1442ab
  0x000000011d14370b: cmp    $0xffffffff,%eax
  0x000000011d14370e: jne    0x000000011d143748  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@112 (line 1022)

  0x000000011d143714: mov    %rbx,%rdx
  0x000000011d143717: mov    %rdi,%rcx
  0x000000011d14371a: mov    0xa8(%rsp),%rsi    ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)

  0x000000011d143722: nopl   0x0(%rax,%rax,1)
  0x000000011d143727: callq  0x000000011c5c8d00  ; ImmutableOopMap{[168]=Oop [176]=Oop [184]=Oop }
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)
                                                ;   {optimized virtual_call}
  0x000000011d14372c: mov    0xc4(%rsp),%esi
  0x000000011d143733: mov    0xc0(%rsp),%r8d
  0x000000011d14373b: mov    0xb8(%rsp),%rcx
  0x000000011d143743: jmpq   0x000000011d143f68  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@125 (line 1023)

  0x000000011d143748: mov    0xc0(%rsp),%ecx
  0x000000011d14374f: cmp    $0x0,%ecx
  0x000000011d143752: jne    0x000000011d14376f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@129 (line 1024)

  0x000000011d143758: mov    %eax,0xcc(%rsp)
  0x000000011d14375f: mov    %r8,%rdx
  0x000000011d143762: mov    %r9d,0xe8(%rsp)
  0x000000011d14376a: jmpq   0x000000011d14386b  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x000000011d14376f: cmp    0xc8(%rsp),%eax
  0x000000011d143776: je     0x000000011d143793  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@136 (line 1024)

  0x000000011d14377c: mov    %eax,0xcc(%rsp)
  0x000000011d143783: mov    %r8,%rdx
  0x000000011d143786: mov    %r9d,0xe8(%rsp)
  0x000000011d14378e: jmpq   0x000000011d14386b  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x000000011d143793: mov    0xb0(%rsp),%rdx
  0x000000011d14379b: mov    0x10(%rdi),%esi
  0x000000011d14379e: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@141 (line 1024)

  0x000000011d1437a2: cmp    %rdx,%rsi
  0x000000011d1437a5: jne    0x000000011d1437cf  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@148 (line 1024)

  0x000000011d1437ab: mov    %eax,0xcc(%rsp)
  0x000000011d1437b2: mov    %r8,0xe0(%rsp)
  0x000000011d1437ba: mov    %r9d,0xe8(%rsp)
  0x000000011d1437c2: mov    %rbx,0xd8(%rsp)
  0x000000011d1437ca: jmpq   0x000000011d14384a  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@165 (line 1026)

  0x000000011d1437cf: cmp    $0x0,%rsi
  0x000000011d1437d3: mov    %eax,0xcc(%rsp)
  0x000000011d1437da: jne    0x000000011d1437f0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@153 (line 1024)

  0x000000011d1437e0: mov    %r9d,0xe8(%rsp)
  0x000000011d1437e8: mov    %r8,%rdx
  0x000000011d1437eb: jmpq   0x000000011d14386b  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x000000011d1437f0: mov    %r8,0xe0(%rsp)
  0x000000011d1437f8: mov    %r9d,0xe8(%rsp)
  0x000000011d143800: mov    %rbx,0xd8(%rsp)
  0x000000011d143808: mov    %rdx,%r11
  0x000000011d14380b: mov    %rsi,%rdx
  0x000000011d14380e: mov    %r11,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)

  0x000000011d143811: nopl   0x0(%rax)
  0x000000011d143815: movabs $0xffffffffffffffff,%rax
  0x000000011d14381f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)
                                                ;   {virtual_call}
  0x000000011d143824: cmp    $0x0,%eax
  0x000000011d143827: mov    0xd0(%rsp),%rdi
  0x000000011d14382f: jne    0x000000011d14384a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162 (line 1026)

  0x000000011d143835: mov    0xe0(%rsp),%rdx
  0x000000011d14383d: mov    0xd8(%rsp),%rbx
  0x000000011d143845: jmpq   0x000000011d14386b  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x000000011d14384a: mov    0x14(%rdi),%esi
  0x000000011d14384d: shl    $0x3,%rsi          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@167 (line 1026)

  0x000000011d143851: cmp    $0x0,%rsi
  0x000000011d143855: jne    0x000000011d144030  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@173 (line 1026)

  0x000000011d14385b: mov    0xe0(%rsp),%rdx
  0x000000011d143863: mov    0xd8(%rsp),%rbx
  0x000000011d14386b: lea    0x118(%rsp),%rsi
  0x000000011d143873: mov    %rdi,0x8(%rsi)
  0x000000011d143877: mov    (%rdi),%rax
  0x000000011d14387a: mov    %rax,%rcx
  0x000000011d14387d: and    $0x7,%rcx
  0x000000011d143881: cmp    $0x5,%rcx
  0x000000011d143885: jne    0x000000011d143930
  0x000000011d14388b: mov    0x8(%rdi),%ecx
  0x000000011d14388e: movabs $0x800000000,%r12
  0x000000011d143898: add    %r12,%rcx
  0x000000011d14389b: xor    %r12,%r12
  0x000000011d14389e: mov    0xb8(%rcx),%rcx
  0x000000011d1438a5: or     %r15,%rcx
  0x000000011d1438a8: xor    %rax,%rcx
  0x000000011d1438ab: and    $0xffffffffffffff87,%rcx
  0x000000011d1438af: je     0x000000011d143958
  0x000000011d1438b5: test   $0x7,%rcx
  0x000000011d1438bc: jne    0x000000011d143911
  0x000000011d1438be: test   $0x300,%rcx
  0x000000011d1438c5: jne    0x000000011d1438e4
  0x000000011d1438c7: and    $0x37f,%rax
  0x000000011d1438ce: mov    %rax,%rcx
  0x000000011d1438d1: or     %r15,%rcx
  0x000000011d1438d4: lock cmpxchg %rcx,(%rdi)
  0x000000011d1438d9: jne    0x000000011d1442b0
  0x000000011d1438df: jmpq   0x000000011d143958
  0x000000011d1438e4: mov    0x8(%rdi),%ecx
  0x000000011d1438e7: movabs $0x800000000,%r12
  0x000000011d1438f1: add    %r12,%rcx
  0x000000011d1438f4: xor    %r12,%r12
  0x000000011d1438f7: mov    0xb8(%rcx),%rcx
  0x000000011d1438fe: or     %r15,%rcx
  0x000000011d143901: lock cmpxchg %rcx,(%rdi)
  0x000000011d143906: jne    0x000000011d1442b0
  0x000000011d14390c: jmpq   0x000000011d143958
  0x000000011d143911: mov    0x8(%rdi),%ecx
  0x000000011d143914: movabs $0x800000000,%r12
  0x000000011d14391e: add    %r12,%rcx
  0x000000011d143921: xor    %r12,%r12
  0x000000011d143924: mov    0xb8(%rcx),%rcx
  0x000000011d14392b: lock cmpxchg %rcx,(%rdi)
  0x000000011d143930: mov    (%rdi),%rax
  0x000000011d143933: or     $0x1,%rax
  0x000000011d143937: mov    %rax,(%rsi)
  0x000000011d14393a: lock cmpxchg %rsi,(%rdi)
  0x000000011d14393f: je     0x000000011d143958
  0x000000011d143945: sub    %rsp,%rax
  0x000000011d143948: and    $0xfffffffffffff007,%rax
  0x000000011d14394f: mov    %rax,(%rsi)
  0x000000011d143952: jne    0x000000011d1442b0  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)

  0x000000011d143958: mov    (%rbx,%rdx,1),%esi
  0x000000011d14395b: shl    $0x3,%rsi
  0x000000011d14395f: mov    %rbx,%rax
  0x000000011d143962: movabs $0xc,%rcx
  0x000000011d14396c: cmp    %rcx,%rdx
  0x000000011d14396f: jne    0x000000011d1439b0
  0x000000011d143975: cmp    $0x0,%rax
  0x000000011d143979: je     0x000000011d1439b0
  0x000000011d14397f: mov    0x8(%rax),%edx
  0x000000011d143982: movabs $0x800000000,%r12
  0x000000011d14398c: add    %r12,%rdx
  0x000000011d14398f: xor    %r12,%r12
  0x000000011d143992: movsbl 0x18b(%rdx),%edx
  0x000000011d143999: cmp    $0x0,%edx
  0x000000011d14399c: je     0x000000011d1439b0
  0x000000011d1439a2: movsbl 0x30(%r15),%edx
  0x000000011d1439a7: cmp    $0x0,%edx
  0x000000011d1439aa: jne    0x000000011d1442c3
  0x000000011d1439b0: cmp    $0x0,%rsi
  0x000000011d1439b4: je     0x000000011d1439e6
  0x000000011d1439ba: movabs $0x80001b608,%rax  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000011d1439c4: mov    0x8(%rsi),%ecx
  0x000000011d1439c7: movabs $0x800000000,%r12
  0x000000011d1439d1: add    %r12,%rcx
  0x000000011d1439d4: xor    %r12,%r12
  0x000000011d1439d7: cmp    0x38(%rcx),%rax
  0x000000011d1439db: jne    0x000000011d1442db
  0x000000011d1439e1: jmpq   0x000000011d1439e6
  0x000000011d1439e6: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)

  0x000000011d1439e9: cmp    %rdi,%rdx
  0x000000011d1439ec: je     0x000000011d143a20  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@197 (line 1032)

  0x000000011d1439f2: mov    0xc4(%rsp),%eax
  0x000000011d1439f9: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000011d143a03: mov    %rbx,0xd8(%rsp)
  0x000000011d143a0b: mov    0xc0(%rsp),%r8d
  0x000000011d143a13: mov    0xb8(%rsp),%rcx
  0x000000011d143a1b: jmpq   0x000000011d143f1d  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)

  0x000000011d143a20: mov    0xcc(%rsp),%eax
  0x000000011d143a27: cmp    $0x0,%eax
  0x000000011d143a2a: jl     0x000000011d143cf0  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@202 (line 1033)

  0x000000011d143a30: mov    %rdi,%rax
  0x000000011d143a33: mov    $0x1,%ecx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212 (line 1037)

  0x000000011d143a38: mov    %ecx,0xec(%rsp)
  0x000000011d143a3f: mov    %rbx,0xd8(%rsp)
  0x000000011d143a47: nop
  0x000000011d143a48: mov    0xc8(%rsp),%esi
  0x000000011d143a4f: mov    0xb0(%rsp),%rdx
  0x000000011d143a57: mov    0xc(%rax),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                ; implicit exception: dispatches to 0x000000011d1442e4
  0x000000011d143a5b: cmp    %esi,%r8d
  0x000000011d143a5e: je     0x000000011d143a6c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@219 (line 1037)

  0x000000011d143a64: mov    %rax,%r8
  0x000000011d143a67: jmpq   0x000000011d143ac5  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)

  0x000000011d143a6c: mov    0x10(%rax),%r8d
  0x000000011d143a70: shl    $0x3,%r8           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224 (line 1037)

  0x000000011d143a74: cmp    %rdx,%r8
  0x000000011d143a77: je     0x000000011d143b21  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@231 (line 1037)

  0x000000011d143a7d: cmp    $0x0,%r8
  0x000000011d143a81: jne    0x000000011d143a8f  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@236 (line 1037)

  0x000000011d143a87: mov    %rax,%r8
  0x000000011d143a8a: jmpq   0x000000011d143ac5  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)

  0x000000011d143a8f: mov    %rax,0xf0(%rsp)
  0x000000011d143a97: mov    %rdx,%r9
  0x000000011d143a9a: mov    %r8,%rdx
  0x000000011d143a9d: mov    %r9,%rsi           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)

  0x000000011d143aa0: nopl   0x0(%rax,%rax,1)
  0x000000011d143aa5: movabs $0xffffffffffffffff,%rax
  0x000000011d143aaf: callq  0x000000011c5c8f80  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [240]=Oop [176]=Oop [208]=Oop [288]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)
                                                ;   {virtual_call}
  0x000000011d143ab4: cmp    $0x0,%eax
  0x000000011d143ab7: mov    0xf0(%rsp),%r8
  0x000000011d143abf: jne    0x000000011d143b24  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@245 (line 1039)

  0x000000011d143ac5: mov    0x18(%r8),%edx
  0x000000011d143ac9: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@274 (line 1046)

  0x000000011d143acd: cmp    $0x0,%rdx
  0x000000011d143ad1: je     0x000000011d143bb5  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@280 (line 1046)

  0x000000011d143ad7: mov    0xec(%rsp),%ecx
  0x000000011d143ade: inc    %ecx
  0x000000011d143ae0: movabs $0x14f6fb460,%rsi
  0x000000011d143aea: mov    0x1c(%rsi),%edi
  0x000000011d143aed: add    $0x8,%edi
  0x000000011d143af0: mov    %edi,0x1c(%rsi)
  0x000000011d143af3: and    $0x1fff8,%edi
  0x000000011d143af9: cmp    $0x0,%edi
  0x000000011d143afc: je     0x000000011d1442e9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x000000011d143b02: mov    0x108(%r15),%r10   ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x000000011d143b09: test   %eax,(%r10)        ;   {poll}
  0x000000011d143b0c: mov    %rdx,%r8
  0x000000011d143b0f: mov    %rcx,%rbx
  0x000000011d143b12: mov    %r8,%rax
  0x000000011d143b15: mov    %ebx,0xec(%rsp)
  0x000000011d143b1c: jmpq   0x000000011d143a48  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x000000011d143b21: mov    %rax,%r8
  0x000000011d143b24: mov    0xec(%rsp),%ebx
  0x000000011d143b2b: mov    0xc0(%rsp),%r9d
  0x000000011d143b33: mov    0x14(%r8),%edx
  0x000000011d143b37: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250 (line 1040)

  0x000000011d143b3b: cmp    $0x0,%r9d
  0x000000011d143b3f: je     0x000000011d143b62  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1041)

  0x000000011d143b45: mov    0xc8(%rsp),%r13d
  0x000000011d143b4d: mov    0xb8(%rsp),%r14
  0x000000011d143b55: mov    0xb0(%rsp),%r11
  0x000000011d143b5d: jmpq   0x000000011d143cdf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)

  0x000000011d143b62: mov    0xb8(%rsp),%rcx
  0x000000011d143b6a: movsbl 0x30(%r15),%esi
  0x000000011d143b6f: cmp    $0x0,%esi
  0x000000011d143b72: jne    0x000000011d14430a
  0x000000011d143b78: mov    %rcx,%r10
  0x000000011d143b7b: shr    $0x3,%r10
  0x000000011d143b7f: mov    %r10d,0x14(%r8)
  0x000000011d143b83: lock addl $0x0,-0x40(%rsp)
  0x000000011d143b89: mov    %r8,%rax
  0x000000011d143b8c: xor    %rcx,%rax
  0x000000011d143b8f: shr    $0x16,%rax
  0x000000011d143b93: cmp    $0x0,%rax
  0x000000011d143b97: jne    0x000000011d14432a  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@262 (line 1042)

  0x000000011d143b9d: mov    0xc8(%rsp),%r13d
  0x000000011d143ba5: mov    %rcx,%r14
  0x000000011d143ba8: mov    0xb0(%rsp),%r11
  0x000000011d143bb0: jmpq   0x000000011d143cdf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@265 (line 1042)

  0x000000011d143bb5: mov    0xec(%rsp),%ebx
  0x000000011d143bbc: mov    0xc8(%rsp),%esi
  0x000000011d143bc3: mov    0xc0(%rsp),%r9d
  0x000000011d143bcb: mov    0xb8(%rsp),%rcx
  0x000000011d143bd3: mov    0xb0(%rsp),%rdx
  0x000000011d143bdb: mov    %rdx,%r11
  0x000000011d143bde: movabs $0x80001b608,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000011d143be8: mov    %rcx,%r14
  0x000000011d143beb: mov    %rsi,%r13
  0x000000011d143bee: mov    0x118(%r15),%rax
  0x000000011d143bf5: lea    0x20(%rax),%rdi
  0x000000011d143bf9: cmp    0x128(%r15),%rdi
  0x000000011d143c00: ja     0x000000011d144342
  0x000000011d143c06: mov    %rdi,0x118(%r15)
  0x000000011d143c0d: mov    0xb8(%rdx),%rcx
  0x000000011d143c14: mov    %rcx,(%rax)
  0x000000011d143c17: mov    %rdx,%rcx
  0x000000011d143c1a: movabs $0x800000000,%r12
  0x000000011d143c24: sub    %r12,%rcx
  0x000000011d143c27: xor    %r12,%r12
  0x000000011d143c2a: mov    %ecx,0x8(%rax)
  0x000000011d143c2d: xor    %rcx,%rcx
  0x000000011d143c30: mov    %ecx,0xc(%rax)
  0x000000011d143c33: xor    %rcx,%rcx
  0x000000011d143c36: mov    %rcx,0x10(%rax)
  0x000000011d143c3a: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)

  0x000000011d143c3e: mov    %r13d,0xc(%rax)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 632)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x000000011d143c42: movsbl 0x30(%r15),%edx
  0x000000011d143c47: cmp    $0x0,%edx
  0x000000011d143c4a: jne    0x000000011d14434f
  0x000000011d143c50: mov    %r11,%r10
  0x000000011d143c53: shr    $0x3,%r10
  0x000000011d143c57: mov    %r10d,0x10(%rax)
  0x000000011d143c5b: mov    %rax,%rdx
  0x000000011d143c5e: xor    %r11,%rdx
  0x000000011d143c61: shr    $0x16,%rdx
  0x000000011d143c65: cmp    $0x0,%rdx
  0x000000011d143c69: jne    0x000000011d14436e  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@11 (line 633)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x000000011d143c6f: movsbl 0x30(%r15),%edx
  0x000000011d143c74: cmp    $0x0,%edx
  0x000000011d143c77: jne    0x000000011d144386
  0x000000011d143c7d: mov    %r14,%r10
  0x000000011d143c80: shr    $0x3,%r10
  0x000000011d143c84: mov    %r10d,0x14(%rax)
  0x000000011d143c88: lock addl $0x0,-0x40(%rsp)
  0x000000011d143c8e: mov    %rax,%rdx
  0x000000011d143c91: xor    %r14,%rdx
  0x000000011d143c94: shr    $0x16,%rdx
  0x000000011d143c98: cmp    $0x0,%rdx
  0x000000011d143c9c: jne    0x000000011d1443a5  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16 (line 634)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x000000011d143ca2: movsbl 0x30(%r15),%edx
  0x000000011d143ca7: cmp    $0x0,%edx
  0x000000011d143caa: jne    0x000000011d1443bd
  0x000000011d143cb0: mov    %rax,%r10
  0x000000011d143cb3: shr    $0x3,%r10
  0x000000011d143cb7: mov    %r10d,0x18(%r8)
  0x000000011d143cbb: lock addl $0x0,-0x40(%rsp)
  0x000000011d143cc1: mov    %r8,%rdx
  0x000000011d143cc4: xor    %rax,%rdx
  0x000000011d143cc7: shr    $0x16,%rdx
  0x000000011d143ccb: cmp    $0x0,%rdx
  0x000000011d143ccf: jne    0x000000011d1443dd  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@296 (line 1047)

  0x000000011d143cd5: movabs $0x0,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299 (line 1048)
                                                ;   {oop(NULL)}
  0x000000011d143cdf: mov    %rdx,%rdi
  0x000000011d143ce2: mov    %rbx,%rax
  0x000000011d143ce5: mov    %r9,%r8
  0x000000011d143ce8: mov    %r14,%rcx
  0x000000011d143ceb: jmpq   0x000000011d143f1d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)

  0x000000011d143cf0: mov    %rbx,0xd8(%rsp)
  0x000000011d143cf8: mov    0xc8(%rsp),%r13d
  0x000000011d143d00: mov    0xc0(%rsp),%r9d
  0x000000011d143d08: mov    0xb8(%rsp),%r14
  0x000000011d143d10: mov    0xb0(%rsp),%r11
  0x000000011d143d18: cmp    $0x0,%rdi
  0x000000011d143d1c: je     0x000000011d143d7f
  0x000000011d143d22: nopw   0x0(%rax,%rax,1)
  0x000000011d143d28: jmpq   0x000000011d144404  ;   {no_reloc}
  0x000000011d143d2d: add    %al,(%rax)
  0x000000011d143d2f: add    %al,(%rax)
  0x000000011d143d31: add    %cl,-0x43b6f789(%rbx)
  0x000000011d143d37: add    %al,(%rax)
  0x000000011d143d39: add    %al,(%rax)
  0x000000011d143d3b: or     %al,(%rax)
  0x000000011d143d3d: add    %al,(%rax)
  0x000000011d143d3f: add    %r12,%rsi
  0x000000011d143d42: xor    %r12,%r12
  0x000000011d143d45: cmp    %r8,%rsi
  0x000000011d143d48: je     0x000000011d143d84
  0x000000011d143d4e: mov    0x10(%r8),%ecx
  0x000000011d143d52: cmp    (%rsi,%rcx,1),%r8
  0x000000011d143d56: je     0x000000011d143d84
  0x000000011d143d5c: cmp    $0x20,%ecx
  0x000000011d143d5f: jne    0x000000011d143d7f
  0x000000011d143d65: push   %rsi
  0x000000011d143d66: push   %r8
  0x000000011d143d68: callq  0x000000011c68f280  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011d143d6d: pop    %rsi
  0x000000011d143d6e: pop    %r8
  0x000000011d143d70: cmp    $0x0,%r8d
  0x000000011d143d74: je     0x000000011d143d7f
  0x000000011d143d7a: jmpq   0x000000011d143d84
  0x000000011d143d7f: xor    %rdx,%rdx
  0x000000011d143d82: jmp    0x000000011d143d8e
  0x000000011d143d84: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)

  0x000000011d143d8e: cmp    $0x0,%edx
  0x000000011d143d91: je     0x000000011d143eb9  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@316 (line 1052)

  0x000000011d143d97: cmp    $0x0,%rdi
  0x000000011d143d9b: je     0x000000011d143dfb
  0x000000011d143da1: nopl   0x0(%rax)
  0x000000011d143da8: jmpq   0x000000011d14441d  ;   {no_reloc}
  0x000000011d143dad: add    %al,(%rax)
  0x000000011d143daf: add    %al,(%rax)
  0x000000011d143db1: add    %cl,-0x43b6f7a1(%rbx)
  0x000000011d143db7: add    %al,(%rax)
  0x000000011d143db9: add    %al,(%rax)
  0x000000011d143dbb: or     %al,(%rax)
  0x000000011d143dbd: add    %al,(%rax)
  0x000000011d143dbf: add    %r12,%rbx
  0x000000011d143dc2: xor    %r12,%r12
  0x000000011d143dc5: cmp    %rcx,%rbx
  0x000000011d143dc8: je     0x000000011d143dfb
  0x000000011d143dce: mov    0x10(%rcx),%edx
  0x000000011d143dd1: cmp    (%rbx,%rdx,1),%rcx
  0x000000011d143dd5: je     0x000000011d143dfb
  0x000000011d143ddb: cmp    $0x20,%edx
  0x000000011d143dde: jne    0x000000011d144427
  0x000000011d143de4: push   %rbx
  0x000000011d143de5: push   %rcx
  0x000000011d143de6: callq  0x000000011c68f280  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011d143deb: pop    %rbx
  0x000000011d143dec: pop    %rcx
  0x000000011d143ded: cmp    $0x0,%ecx
  0x000000011d143df0: je     0x000000011d144427
  0x000000011d143df6: jmpq   0x000000011d143dfb
  0x000000011d143dfb: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)

  0x000000011d143dfe: mov    %r13,%rdx
  0x000000011d143e01: mov    %r11,%rcx
  0x000000011d143e04: mov    %r14,%r8           ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)

  0x000000011d143e07: nopw   0x0(%rax,%rax,1)
  0x000000011d143e0d: movabs $0xffffffffffffffff,%rax
  0x000000011d143e17: callq  0x000000011c5c8f80  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop [184]=Oop [176]=Oop [288]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)
                                                ;   {virtual_call}
  0x000000011d143e1c: cmp    $0x0,%rax
  0x000000011d143e20: jne    0x000000011d143e45  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@337 (line 1055)

  0x000000011d143e26: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011d143e30: mov    0xc0(%rsp),%r8d
  0x000000011d143e38: mov    0xb8(%rsp),%rcx
  0x000000011d143e40: jmpq   0x000000011d143eac  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x000000011d143e45: mov    0xc0(%rsp),%r8d
  0x000000011d143e4d: mov    0x14(%rax),%edx    ; implicit exception: dispatches to 0x000000011d144430
  0x000000011d143e50: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)

  0x000000011d143e54: cmp    $0x0,%r8d
  0x000000011d143e58: je     0x000000011d143e6e  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@348 (line 1058)

  0x000000011d143e5e: mov    %rdx,%rax
  0x000000011d143e61: mov    0xb8(%rsp),%rcx
  0x000000011d143e69: jmpq   0x000000011d143eac  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x000000011d143e6e: mov    0xb8(%rsp),%rcx
  0x000000011d143e76: movsbl 0x30(%r15),%esi
  0x000000011d143e7b: cmp    $0x0,%esi
  0x000000011d143e7e: jne    0x000000011d144435
  0x000000011d143e84: mov    %rcx,%r10
  0x000000011d143e87: shr    $0x3,%r10
  0x000000011d143e8b: mov    %r10d,0x14(%rax)
  0x000000011d143e8f: lock addl $0x0,-0x40(%rsp)
  0x000000011d143e95: mov    %rax,%rsi
  0x000000011d143e98: xor    %rcx,%rsi
  0x000000011d143e9b: shr    $0x16,%rsi
  0x000000011d143e9f: cmp    $0x0,%rsi
  0x000000011d143ea3: jne    0x000000011d144454  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@354 (line 1059)

  0x000000011d143ea9: mov    %rdx,%rax
  0x000000011d143eac: mov    %rax,%rdi
  0x000000011d143eaf: mov    $0x2,%eax
  0x000000011d143eb4: jmpq   0x000000011d143f1d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x000000011d143eb9: mov    %r9,%r8
  0x000000011d143ebc: mov    %r14,%rcx
  0x000000011d143ebf: cmp    $0x0,%rdi
  0x000000011d143ec3: je     0x000000011d143ef4
  0x000000011d143ec9: movabs $0x80001be50,%rsi  ;   {metadata('java/util/concurrent/ConcurrentHashMap$ReservationNode')}
  0x000000011d143ed3: mov    0x8(%rdi),%edx
  0x000000011d143ed6: movabs $0x800000000,%r12
  0x000000011d143ee0: add    %r12,%rdx
  0x000000011d143ee3: xor    %r12,%r12
  0x000000011d143ee6: cmp    %rdx,%rsi
  0x000000011d143ee9: jne    0x000000011d143ef4
  0x000000011d143eef: jmpq   0x000000011d143ef9
  0x000000011d143ef4: xor    %rax,%rax
  0x000000011d143ef7: jmp    0x000000011d143f03
  0x000000011d143ef9: movabs $0x1,%rax          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362 (line 1062)

  0x000000011d143f03: cmp    $0x0,%eax
  0x000000011d143f06: jne    0x000000011d144089  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@365 (line 1062)

  0x000000011d143f0c: mov    0xc4(%rsp),%eax
  0x000000011d143f13: movabs $0x0,%rdi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)
                                                ;   {oop(NULL)}
  0x000000011d143f1d: mov    %rax,%rbx
  0x000000011d143f20: lea    0x118(%rsp),%rax
  0x000000011d143f28: mov    0x8(%rax),%rsi
  0x000000011d143f2c: mov    (%rsi),%rdx
  0x000000011d143f2f: and    $0x7,%rdx
  0x000000011d143f33: cmp    $0x5,%rdx
  0x000000011d143f37: je     0x000000011d143f54
  0x000000011d143f3d: mov    (%rax),%rdx
  0x000000011d143f40: test   %rdx,%rdx
  0x000000011d143f43: je     0x000000011d143f54
  0x000000011d143f49: lock cmpxchg %rdx,(%rsi)
  0x000000011d143f4e: jne    0x000000011d14446c  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@380 (line 1065)

  0x000000011d143f54: cmp    $0x0,%ebx
  0x000000011d143f57: jne    0x000000011d143fb1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@394 (line 1066)

  0x000000011d143f5d: mov    0xd8(%rsp),%rax
  0x000000011d143f65: mov    %rbx,%rsi
  0x000000011d143f68: movabs $0x14f6fb460,%rdx
  0x000000011d143f72: mov    0x1c(%rdx),%edi
  0x000000011d143f75: add    $0x8,%edi
  0x000000011d143f78: mov    %edi,0x1c(%rdx)
  0x000000011d143f7b: and    $0x1fff8,%edi
  0x000000011d143f81: cmp    $0x0,%edi
  0x000000011d143f84: je     0x000000011d144482  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x000000011d143f8a: mov    0x108(%r15),%r10   ; ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x000000011d143f91: test   %eax,(%r10)        ;   {poll}
  0x000000011d143f94: mov    %rax,%rdx
  0x000000011d143f97: mov    %rsi,%rax
  0x000000011d143f9a: mov    %rdx,%rbx
  0x000000011d143f9d: mov    %eax,0xc4(%rsp)
  0x000000011d143fa4: mov    0xa8(%rsp),%rdi
  0x000000011d143fac: jmpq   0x000000011d143490  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x000000011d143fb1: mov    0xd8(%rsp),%rdx
  0x000000011d143fb9: cmp    $0x8,%ebx
  0x000000011d143fbc: jge    0x000000011d143fce  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@401 (line 1067)

  0x000000011d143fc2: mov    %ebx,0x100(%rsp)
  0x000000011d143fc9: jmpq   0x000000011d144004  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@412 (line 1069)

  0x000000011d143fce: mov    %rdi,0xf8(%rsp)
  0x000000011d143fd6: mov    %ebx,0x100(%rsp)
  0x000000011d143fdd: mov    0xe8(%rsp),%r9d
  0x000000011d143fe5: mov    %r9,%rcx
  0x000000011d143fe8: mov    0xa8(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)

  0x000000011d143ff0: nopl   0x0(%rax)
  0x000000011d143ff7: callq  0x000000011c5c8d00  ; ImmutableOopMap{[168]=Oop [248]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)
                                                ;   {optimized virtual_call}
  0x000000011d143ffc: mov    0xf8(%rsp),%rdi
  0x000000011d144004: cmp    $0x0,%rdi
  0x000000011d144008: jne    0x000000011d14401a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@414 (line 1069)

  0x000000011d14400e: mov    0x100(%rsp),%eax
  0x000000011d144015: jmpq   0x000000011d14404d  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@423 (line 1075)

  0x000000011d14401a: mov    %rdi,%rax
  0x000000011d14401d: add    $0x130,%rsp
  0x000000011d144024: pop    %rbp
  0x000000011d144025: mov    0x108(%r15),%r10
  0x000000011d14402c: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14402f: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@419 (line 1070)

  0x000000011d144030: mov    %rsi,%rax
  0x000000011d144033: add    $0x130,%rsp
  0x000000011d14403a: pop    %rbp
  0x000000011d14403b: mov    0x108(%r15),%r10
  0x000000011d144042: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d144045: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@178 (line 1028)

  0x000000011d144046: mov    0xc4(%rsp),%eax
  0x000000011d14404d: mov    0xa8(%rsp),%rsi
  0x000000011d144055: movabs $0x1,%rdx
  0x000000011d14405f: mov    %rax,%rcx          ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)

  0x000000011d144062: nopl   0x0(%rax,%rax,1)
  0x000000011d144067: callq  0x000000011c5c8d00  ; ImmutableOopMap{}
                                                ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)
                                                ;   {optimized virtual_call}
  0x000000011d14406c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011d144076: add    $0x130,%rsp
  0x000000011d14407d: pop    %rbp
  0x000000011d14407e: mov    0x108(%r15),%r10
  0x000000011d144085: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d144088: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@431 (line 1076)

  0x000000011d144089: nopl   0x0(%rax)
  0x000000011d144090: jmpq   0x000000011d1444b2  ;   {no_reloc}
  0x000000011d144095: add    %al,(%rax)
  0x000000011d144097: add    %al,(%rax)
  0x000000011d144099: add    %ch,%cl
  0x000000011d14409b: sbb    $0x48000004,%eax   ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {oop("Recursive update"{0x000000043fdeb920})}
  0x000000011d1440a0: mov    $0x3fdeb920,%edx
  0x000000011d1440a5: add    $0x0,%al
  0x000000011d1440a7: add    %al,(%rax)
  0x000000011d1440a9: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)

  0x000000011d1440ac: mov    %rax,0x108(%rsp)
  0x000000011d1440b4: data16 xchg %ax,%ax
  0x000000011d1440b7: callq  0x000000011c5c8d00  ; ImmutableOopMap{[264]=Oop [208]=Oop [288]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)
                                                ;   {optimized virtual_call}
  0x000000011d1440bc: mov    0x108(%rsp),%rax   ; ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)

  0x000000011d1440c4: movabs $0x11d1440c4,%rdx  ;   {section_word}
  0x000000011d1440ce: callq  0x000000011c68e600  ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x000000011d1440d3: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)

  0x000000011d1440d4: nopl   0x0(%rax)
  0x000000011d1440d8: jmpq   0x000000011d1444d8  ;   {no_reloc}
  0x000000011d1440dd: add    %al,(%rax)
  0x000000011d1440df: add    %al,(%rax)
  0x000000011d1440e1: add    %cl,-0x75(%rcx)
  0x000000011d1440e4: xchg   %ebx,(%rax)
  0x000000011d1440e6: add    %eax,(%rax)
  0x000000011d1440e8: add    %cl,-0x73(%rax)
  0x000000011d1440eb: js     0x000000011d144115
  0x000000011d1440ed: cmp    0x128(%r15),%rdi
  0x000000011d1440f4: ja     0x000000011d1444e2
  0x000000011d1440fa: mov    %rdi,0x118(%r15)
  0x000000011d144101: mov    0xb8(%rdx),%rcx
  0x000000011d144108: mov    %rcx,(%rax)
  0x000000011d14410b: mov    %rdx,%rcx
  0x000000011d14410e: movabs $0x800000000,%r12
  0x000000011d144118: sub    %r12,%rcx
  0x000000011d14411b: xor    %r12,%r12
  0x000000011d14411e: mov    %ecx,0x8(%rax)
  0x000000011d144121: xor    %rcx,%rcx
  0x000000011d144124: mov    %ecx,0xc(%rax)
  0x000000011d144127: xor    %rcx,%rcx
  0x000000011d14412a: mov    %rcx,0x10(%rax)
  0x000000011d14412e: mov    %rcx,0x18(%rax)
  0x000000011d144132: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)

  0x000000011d144136: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)

  0x000000011d144139: mov    %rax,0x110(%rsp)
  0x000000011d144141: nopw   0x0(%rax,%rax,1)
  0x000000011d144147: callq  0x000000011c5c8d00  ; ImmutableOopMap{[272]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
                                                ;   {optimized virtual_call}
  0x000000011d14414c: mov    0x110(%rsp),%rax
  0x000000011d144154: jmpq   0x000000011d144530  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15 (line 1011)

  0x000000011d144159: mov    0x420(%r15),%rax
  0x000000011d144160: xor    %r10,%r10
  0x000000011d144163: mov    %r10,0x420(%r15)
  0x000000011d14416a: xor    %r10,%r10
  0x000000011d14416d: mov    %r10,0x428(%r15)
  0x000000011d144174: mov    %rax,%rsi
  0x000000011d144177: lea    0x118(%rsp),%rax
  0x000000011d14417f: mov    0x8(%rax),%rbx
  0x000000011d144183: mov    (%rbx),%rdi
  0x000000011d144186: and    $0x7,%rdi
  0x000000011d14418a: cmp    $0x5,%rdi
  0x000000011d14418e: je     0x000000011d1441ab
  0x000000011d144194: mov    (%rax),%rdi
  0x000000011d144197: test   %rdi,%rdi
  0x000000011d14419a: je     0x000000011d1441ab
  0x000000011d1441a0: lock cmpxchg %rdi,(%rbx)
  0x000000011d1441a5: jne    0x000000011d1444ef  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@388 (line 1065)

  0x000000011d1441ab: mov    %rsi,%rax
  0x000000011d1441ae: jmpq   0x000000011d144530
  0x000000011d1441b3: movabs $0x14f6d8650,%r10  ;   {metadata({method} {0x000000014f6d8650} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d1441bd: mov    %r10,0x8(%rsp)
  0x000000011d1441c2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d1441ca: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop rcx=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1 (line 1011)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1441cf: jmpq   0x000000011d143431
  0x000000011d1441d4: callq  0x000000011c68cf20  ; ImmutableOopMap{rdi=Oop [168]=Oop [184]=Oop [176]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1441d9: cmp    $0x0,%rsi
  0x000000011d1441dd: je     0x000000011d14354b
  0x000000011d1441e3: mov    %rsi,(%rsp)
  0x000000011d1441e7: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d1441ec: jmpq   0x000000011d14354b
  0x000000011d1441f1: mov    %rsi,(%rsp)
  0x000000011d1441f5: callq  0x000000011c68eea0  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011d1441fa: mov    %rdx,%rdx
  0x000000011d1441fd: callq  0x000000011c68d700  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011d144202: jmpq   0x000000011d143613
  0x000000011d144207: mov    0x10(%rdx),%eax
  0x000000011d14420a: shl    $0x3,%rax
  0x000000011d14420e: cmp    $0x0,%rax
  0x000000011d144212: je     0x000000011d143628
  0x000000011d144218: mov    %rax,(%rsp)
  0x000000011d14421c: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d144221: jmpq   0x000000011d143628
  0x000000011d144226: cmp    $0x0,%r11
  0x000000011d14422a: je     0x000000011d143647
  0x000000011d144230: mov    %rdx,(%rsp)
  0x000000011d144234: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d144239: jmpq   0x000000011d143647
  0x000000011d14423e: mov    0x14(%rdx),%eax
  0x000000011d144241: shl    $0x3,%rax
  0x000000011d144245: cmp    $0x0,%rax
  0x000000011d144249: je     0x000000011d143655
  0x000000011d14424f: mov    %rax,(%rsp)
  0x000000011d144253: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d144258: jmpq   0x000000011d143655
  0x000000011d14425d: cmp    $0x0,%r14
  0x000000011d144261: je     0x000000011d14367a
  0x000000011d144267: mov    %rdx,(%rsp)
  0x000000011d14426b: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d144270: jmpq   0x000000011d14367a
  0x000000011d144275: mov    (%rcx),%eax
  0x000000011d144277: shl    $0x3,%rax
  0x000000011d14427b: cmp    $0x0,%rax
  0x000000011d14427f: je     0x000000011d14368c
  0x000000011d144285: mov    %rax,(%rsp)
  0x000000011d144289: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14428e: jmpq   0x000000011d14368c
  0x000000011d144293: cmp    $0x0,%rdx
  0x000000011d144297: je     0x000000011d1436ca
  0x000000011d14429d: mov    %rcx,(%rsp)
  0x000000011d1442a1: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d1442a6: jmpq   0x000000011d1436ca
  0x000000011d1442ab: callq  0x000000011c68cf20  ; ImmutableOopMap{[168]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1442b0: mov    %rdi,0x8(%rsp)
  0x000000011d1442b5: mov    %rsi,(%rsp)
  0x000000011d1442b9: callq  0x000000011c68f700  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)
                                                ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x000000011d1442be: jmpq   0x000000011d143958
  0x000000011d1442c3: cmp    $0x0,%rsi
  0x000000011d1442c7: je     0x000000011d1439b0
  0x000000011d1442cd: mov    %rsi,(%rsp)
  0x000000011d1442d1: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d1442d6: jmpq   0x000000011d1439b0
  0x000000011d1442db: mov    %rsi,(%rsp)
  0x000000011d1442df: callq  0x000000011c68eea0  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011d1442e4: callq  0x000000011c68cf20  ; ImmutableOopMap{[168]=Oop [184]=Oop rax=Oop [216]=Oop [208]=Oop rdx=Oop [176]=Oop [288]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1442e9: movabs $0x14f6d8650,%r10  ;   {metadata({method} {0x000000014f6d8650} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d1442f3: mov    %r10,0x8(%rsp)
  0x000000011d1442f8: movq   $0x131,(%rsp)
  0x000000011d144300: callq  0x000000011c691600  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d144305: jmpq   0x000000011d143b02
  0x000000011d14430a: mov    0x14(%r8),%esi
  0x000000011d14430e: shl    $0x3,%rsi
  0x000000011d144312: cmp    $0x0,%rsi
  0x000000011d144316: je     0x000000011d143b78
  0x000000011d14431c: mov    %rsi,(%rsp)
  0x000000011d144320: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d144325: jmpq   0x000000011d143b78
  0x000000011d14432a: cmp    $0x0,%rcx
  0x000000011d14432e: je     0x000000011d143b9d
  0x000000011d144334: mov    %r8,(%rsp)
  0x000000011d144338: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14433d: jmpq   0x000000011d143b9d
  0x000000011d144342: mov    %rdx,%rdx
  0x000000011d144345: callq  0x000000011c68d700  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011d14434a: jmpq   0x000000011d143c3e
  0x000000011d14434f: mov    0x10(%rax),%edx
  0x000000011d144352: shl    $0x3,%rdx
  0x000000011d144356: cmp    $0x0,%rdx
  0x000000011d14435a: je     0x000000011d143c50
  0x000000011d144360: mov    %rdx,(%rsp)
  0x000000011d144364: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d144369: jmpq   0x000000011d143c50
  0x000000011d14436e: cmp    $0x0,%r11
  0x000000011d144372: je     0x000000011d143c6f
  0x000000011d144378: mov    %rax,(%rsp)
  0x000000011d14437c: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d144381: jmpq   0x000000011d143c6f
  0x000000011d144386: mov    0x14(%rax),%edx
  0x000000011d144389: shl    $0x3,%rdx
  0x000000011d14438d: cmp    $0x0,%rdx
  0x000000011d144391: je     0x000000011d143c7d
  0x000000011d144397: mov    %rdx,(%rsp)
  0x000000011d14439b: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d1443a0: jmpq   0x000000011d143c7d
  0x000000011d1443a5: cmp    $0x0,%r14
  0x000000011d1443a9: je     0x000000011d143ca2
  0x000000011d1443af: mov    %rax,(%rsp)
  0x000000011d1443b3: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d1443b8: jmpq   0x000000011d143ca2
  0x000000011d1443bd: mov    0x18(%r8),%edx
  0x000000011d1443c1: shl    $0x3,%rdx
  0x000000011d1443c5: cmp    $0x0,%rdx
  0x000000011d1443c9: je     0x000000011d143cb0
  0x000000011d1443cf: mov    %rdx,(%rsp)
  0x000000011d1443d3: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d1443d8: jmpq   0x000000011d143cb0
  0x000000011d1443dd: cmp    $0x0,%rax
  0x000000011d1443e1: je     0x000000011d143cd5
  0x000000011d1443e7: mov    %r8,(%rsp)
  0x000000011d1443eb: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d1443f0: jmpq   0x000000011d143cd5
  0x000000011d1443f5: movabs $0x0,%r8           ;   {metadata(NULL)}
  0x000000011d1443ff: mov    $0xa050f00,%eax
  0x000000011d144404: callq  0x000000011c690680  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d144409: jmpq   0x000000011d143d28
  0x000000011d14440e: movabs $0x0,%rcx          ;   {metadata(NULL)}
  0x000000011d144418: mov    $0xa050f00,%eax
  0x000000011d14441d: callq  0x000000011c690680  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d144422: jmpq   0x000000011d143da8
  0x000000011d144427: mov    %rdi,(%rsp)
  0x000000011d14442b: callq  0x000000011c68eea0  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011d144430: callq  0x000000011c68cf20  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d144435: mov    0x14(%rax),%esi
  0x000000011d144438: shl    $0x3,%rsi
  0x000000011d14443c: cmp    $0x0,%rsi
  0x000000011d144440: je     0x000000011d143e84
  0x000000011d144446: mov    %rsi,(%rsp)
  0x000000011d14444a: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14444f: jmpq   0x000000011d143e84
  0x000000011d144454: cmp    $0x0,%rcx
  0x000000011d144458: je     0x000000011d143ea9
  0x000000011d14445e: mov    %rax,(%rsp)
  0x000000011d144462: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d144467: jmpq   0x000000011d143ea9
  0x000000011d14446c: lea    0x118(%rsp),%rax
  0x000000011d144474: mov    %rax,(%rsp)
  0x000000011d144478: callq  0x000000011c68fb80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000000011d14447d: jmpq   0x000000011d143f54
  0x000000011d144482: movabs $0x14f6d8650,%r10  ;   {metadata({method} {0x000000014f6d8650} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d14448c: mov    %r10,0x8(%rsp)
  0x000000011d144491: movq   $0x1a4,(%rsp)
  0x000000011d144499: callq  0x000000011c691600  ; ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14449e: jmpq   0x000000011d143f8a
  0x000000011d1444a3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d1444ad: mov    $0xa050f00,%eax
  0x000000011d1444b2: callq  0x000000011c690680  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d1444b7: jmpq   0x000000011d144090
  0x000000011d1444bc: mov    %rdx,%rdx
  0x000000011d1444bf: callq  0x000000011c68d400  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011d1444c4: jmpq   0x000000011d14409f
  0x000000011d1444c9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d1444d3: mov    $0xa050f00,%eax
  0x000000011d1444d8: callq  0x000000011c690680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d1444dd: jmpq   0x000000011d1440d8
  0x000000011d1444e2: mov    %rdx,%rdx
  0x000000011d1444e5: callq  0x000000011c68d700  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011d1444ea: jmpq   0x000000011d144136
  0x000000011d1444ef: lea    0x118(%rsp),%rax
  0x000000011d1444f7: mov    %rax,(%rsp)
  0x000000011d1444fb: callq  0x000000011c68fb80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000000011d144500: jmpq   0x000000011d1441ab
  0x000000011d144505: nop
  0x000000011d144506: nop
  0x000000011d144507: mov    0x420(%r15),%rax
  0x000000011d14450e: movabs $0x0,%r10
  0x000000011d144518: mov    %r10,0x420(%r15)
  0x000000011d14451f: movabs $0x0,%r10
  0x000000011d144529: mov    %r10,0x428(%r15)
  0x000000011d144530: add    $0x130,%rsp
  0x000000011d144537: pop    %rbp
  0x000000011d144538: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14453d: hlt    
  0x000000011d14453e: hlt    
  0x000000011d14453f: hlt    
[Stub Code]
  0x000000011d144540: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d144545: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14454f: jmpq   0x000000011d14454f  ;   {runtime_call}
  0x000000011d144554: nop
  0x000000011d144555: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14455f: jmpq   0x000000011d14455f  ;   {runtime_call}
  0x000000011d144564: nop
  0x000000011d144565: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14456f: jmpq   0x000000011d14456f  ;   {runtime_call}
  0x000000011d144574: nop
  0x000000011d144575: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14457f: jmpq   0x000000011d14457f  ;   {runtime_call}
  0x000000011d144584: nop
  0x000000011d144585: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14458f: jmpq   0x000000011d14458f  ;   {runtime_call}
  0x000000011d144594: nop
  0x000000011d144595: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14459f: jmpq   0x000000011d14459f  ;   {runtime_call}
  0x000000011d1445a4: nop
  0x000000011d1445a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1445af: jmpq   0x000000011d1445af  ;   {runtime_call}
  0x000000011d1445b4: nop
  0x000000011d1445b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1445bf: jmpq   0x000000011d1445bf  ;   {runtime_call}
  0x000000011d1445c4: nop
  0x000000011d1445c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1445cf: jmpq   0x000000011d1445cf  ;   {runtime_call}
  0x000000011d1445d4: nop
  0x000000011d1445d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1445df: jmpq   0x000000011d1445df  ;   {runtime_call}
[Exception Handler]
  0x000000011d1445e4: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d1445e9: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d1445f3: and    $0xfffffffffffffff0,%rsp
  0x000000011d1445f7: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d1445fc: hlt    
[Deopt Handler Code]
  0x000000011d1445fd: movabs $0x11d1445fd,%r10  ;   {section_word}
  0x000000011d144607: push   %r10
  0x000000011d144609: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14460e: hlt    
  0x000000011d14460f: hlt    

ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 156 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }pc offsets: 244 
ImmutableOopMap{[168]=Oop [176]=Oop [184]=Oop }pc offsets: 876 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop }pc offsets: 1124 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [240]=Oop [176]=Oop [208]=Oop [288]=Oop }pc offsets: 1780 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 1865 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop [184]=Oop [176]=Oop [288]=Oop }pc offsets: 2652 
ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }pc offsets: 3025 
ImmutableOopMap{[168]=Oop [248]=Oop }pc offsets: 3132 
ImmutableOopMap{}pc offsets: 3244 
ImmutableOopMap{[264]=Oop [208]=Oop [288]=Oop }pc offsets: 3324 
ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }pc offsets: 3332 
ImmutableOopMap{[272]=Oop }pc offsets: 3468 
ImmutableOopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop rcx=Oop [184]=Oop }pc offsets: 3599 
ImmutableOopMap{rdi=Oop [168]=Oop [184]=Oop [176]=Oop rbx=Oop }pc offsets: 3609 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }pc offsets: 3642 
ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop }pc offsets: 3650 
ImmutableOopMap{[168]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop rbx=Oop }pc offsets: 3824 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }pc offsets: 3838 3876 
ImmutableOopMap{[168]=Oop [184]=Oop rax=Oop [216]=Oop [208]=Oop rdx=Oop [176]=Oop [288]=Oop }pc offsets: 3881 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 3909 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop [288]=Oop }pc offsets: 3978 
ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }pc offsets: 4169 4194 4208 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }pc offsets: 4213 
ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }pc offsets: 4318 
ImmutableOopMap{[208]=Oop [288]=Oop }pc offsets: 4343 4356 
ImmutableOopMap{}pc offsets: 4381 4394 ----------------------------------------------------------------------
java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V  [0x0000000124371e40, 0x0000000124372050]  528 bytes
[Entry Point]
  # {method} {0x000000014f5c72d8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000124371e40: mov    0x8(%rsi),%r10d
  0x0000000124371e44: movabs $0x800000000,%r12
  0x0000000124371e4e: add    %r12,%r10
  0x0000000124371e51: xor    %r12,%r12
  0x0000000124371e54: cmp    %r10,%rax
  0x0000000124371e57: je     0x0000000124371e68
  0x0000000124371e5d: jmpq   0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x0000000124371e62: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000124371e68: mov    %eax,-0x14000(%rsp)
  0x0000000124371e6f: push   %rbp
  0x0000000124371e70: mov    %rsp,%rbp
  0x0000000124371e73: sub    $0x50,%rsp
  0x0000000124371e77: mov    %r9,(%rsp)
  0x0000000124371e7b: mov    %r8,%r9
  0x0000000124371e7e: mov    %rcx,0x18(%rsp)
  0x0000000124371e83: cmp    $0x0,%rcx
  0x0000000124371e87: lea    0x18(%rsp),%r8
  0x0000000124371e8c: cmove  0x18(%rsp),%r8
  0x0000000124371e92: mov    %rdx,%rcx
  0x0000000124371e95: mov    %rsi,0x8(%rsp)
  0x0000000124371e9a: cmp    $0x0,%rsi
  0x0000000124371e9e: lea    0x8(%rsp),%rdx
  0x0000000124371ea3: cmove  0x8(%rsp),%rdx
  0x0000000124371ea9: movabs $0x43fc00d60,%r14  ;   {oop(a 'java/lang/Class'{0x000000043fc00d60} = 'java/lang/System')}
  0x0000000124371eb3: mov    %r14,0x38(%rsp)
  0x0000000124371eb8: lea    0x38(%rsp),%r14
  0x0000000124371ebd: mov    %r14,%rsi          ; ImmutableOopMap{[24]=Oop [8]=Oop [56]=Oop }
  0x0000000124371ec0: vzeroupper 
  0x0000000124371ec3: movabs $0x124371ec0,%r10  ;   {internal_word}
  0x0000000124371ecd: mov    %r10,0x328(%r15)
  0x0000000124371ed4: mov    %rsp,0x320(%r15)
  0x0000000124371edb: cmpb   $0x0,-0x151b7e08(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x0000000124371ee2: je     0x0000000124371f26
  0x0000000124371ee8: push   %rsi
  0x0000000124371ee9: push   %rdx
  0x0000000124371eea: push   %rcx
  0x0000000124371eeb: push   %r8
  0x0000000124371eed: push   %r9
  0x0000000124371eef: movabs $0x14f5c72d8,%rsi  ;   {metadata({method} {0x000000014f5c72d8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x0000000124371ef9: mov    %r15,%rdi
  0x0000000124371efc: test   $0xf,%esp
  0x0000000124371f02: je     0x0000000124371f1a
  0x0000000124371f08: sub    $0x8,%rsp
  0x0000000124371f0c: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000124371f11: add    $0x8,%rsp
  0x0000000124371f15: jmpq   0x0000000124371f1f
  0x0000000124371f1a: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000124371f1f: pop    %r9
  0x0000000124371f21: pop    %r8
  0x0000000124371f23: pop    %rcx
  0x0000000124371f24: pop    %rdx
  0x0000000124371f25: pop    %rsi
  0x0000000124371f26: lea    0x340(%r15),%rdi
  0x0000000124371f2d: movl   $0x4,0x3b8(%r15)
  0x0000000124371f38: callq  0x000000010ec29637  ;   {runtime_call JVM_ArrayCopy}
  0x0000000124371f3d: vzeroupper 
  0x0000000124371f40: movl   $0x5,0x3b8(%r15)
  0x0000000124371f4b: lock addl $0x0,-0x40(%rsp)
  0x0000000124371f51: testb  $0x8,0x108(%r15)
  0x0000000124371f59: jne    0x0000000124371f70
  0x0000000124371f5f: cmpl   $0x0,0xd8(%r15)
  0x0000000124371f6a: je     0x0000000124371f8c
  0x0000000124371f70: vzeroupper 
  0x0000000124371f73: mov    %r15,%rdi
  0x0000000124371f76: mov    %rsp,%r12
  0x0000000124371f79: sub    $0x0,%rsp
  0x0000000124371f7d: and    $0xfffffffffffffff0,%rsp
  0x0000000124371f81: callq  0x000000010ef71148  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000124371f86: mov    %r12,%rsp
  0x0000000124371f89: xor    %r12,%r12
  0x0000000124371f8c: movl   $0x8,0x3b8(%r15)
  0x0000000124371f97: cmpl   $0x2,0x408(%r15)
  0x0000000124371fa2: je     0x0000000124372030
  0x0000000124371fa8: cmpb   $0x0,-0x151b7ed5(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x0000000124371faf: je     0x0000000124371fe5
  0x0000000124371fb5: movabs $0x14f5c72d8,%rsi  ;   {metadata({method} {0x000000014f5c72d8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x0000000124371fbf: mov    %r15,%rdi
  0x0000000124371fc2: test   $0xf,%esp
  0x0000000124371fc8: je     0x0000000124371fe0
  0x0000000124371fce: sub    $0x8,%rsp
  0x0000000124371fd2: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000124371fd7: add    $0x8,%rsp
  0x0000000124371fdb: jmpq   0x0000000124371fe5
  0x0000000124371fe0: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000000124371fe5: movabs $0x0,%r10
  0x0000000124371fef: mov    %r10,0x320(%r15)
  0x0000000124371ff6: movabs $0x0,%r10
  0x0000000124372000: mov    %r10,0x328(%r15)
  0x0000000124372007: vzeroupper 
  0x000000012437200a: mov    0xe0(%r15),%rcx
  0x0000000124372011: movl   $0x0,0x100(%rcx)
  0x000000012437201b: leaveq 
  0x000000012437201c: cmpq   $0x0,0x8(%r15)
  0x0000000124372024: jne    0x000000012437202b
  0x000000012437202a: retq   
  0x000000012437202b: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000124372030: vzeroupper 
  0x0000000124372033: mov    %rsp,%r12
  0x0000000124372036: sub    $0x0,%rsp
  0x000000012437203a: and    $0xfffffffffffffff0,%rsp
  0x000000012437203e: callq  0x000000010ee99586  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000124372043: mov    %r12,%rsp
  0x0000000124372046: xor    %r12,%r12
  0x0000000124372049: jmpq   0x0000000124371fa8
  0x000000012437204e: hlt    
  0x000000012437204f: hlt    
Compiled method (c1)     126    9       2       java.lang.Math::floorMod (10 bytes)
 total in heap  [0x000000011d142d10,0x000000011d1430c8] = 952
 relocation     [0x000000011d142e88,0x000000011d142eb0] = 40
 main code      [0x000000011d142ec0,0x000000011d142fa0] = 224
 stub code      [0x000000011d142fa0,0x000000011d142fd0] = 48
 metadata       [0x000000011d142fd0,0x000000011d142fe0] = 16
 scopes data    [0x000000011d142fe0,0x000000011d143030] = 80
 scopes pcs     [0x000000011d143030,0x000000011d1430b0] = 128
 dependencies   [0x000000011d1430b0,0x000000011d1430b8] = 8
 nul chk table  [0x000000011d1430b8,0x000000011d1430c8] = 16
----------------------------------------------------------------------
java/lang/Math.floorMod(II)I  [0x000000011d142ec0, 0x000000011d142fd0]  272 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f722f50} 'floorMod' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011d142ec0: mov    %eax,-0x14000(%rsp)
  0x000000011d142ec7: push   %rbp
  0x000000011d142ec8: sub    $0x40,%rsp
  0x000000011d142ecc: mov    %rdx,%rdi
  0x000000011d142ecf: movabs $0x14f726520,%rax
  0x000000011d142ed9: mov    0x18(%rax),%edx
  0x000000011d142edc: add    $0x8,%edx
  0x000000011d142edf: mov    %edx,0x18(%rax)
  0x000000011d142ee2: and    $0x3ff8,%edx
  0x000000011d142ee8: cmp    $0x0,%edx
  0x000000011d142eeb: je     0x000000011d142f45  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorMod@0 (line 1277)

  0x000000011d142ef1: mov    %rsi,%rax
  0x000000011d142ef4: cmp    $0x80000000,%eax
  0x000000011d142efa: jne    0x000000011d142f0b
  0x000000011d142f00: xor    %edx,%edx
  0x000000011d142f02: cmp    $0xffffffff,%edi
  0x000000011d142f05: je     0x000000011d142f0e
  0x000000011d142f0b: cltd   
  0x000000011d142f0c: idiv   %edi               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ; implicit exception: dispatches to 0x000000011d142f63
  0x000000011d142f0e: mov    %rdi,%rbx
  0x000000011d142f11: xor    %rsi,%rbx
  0x000000011d142f14: cmp    $0x0,%ebx
  0x000000011d142f17: jge    0x000000011d142f2d  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)

  0x000000011d142f1d: mov    %rax,%rbx
  0x000000011d142f20: imul   %edi,%ebx
  0x000000011d142f23: cmp    %esi,%ebx
  0x000000011d142f25: je     0x000000011d142f2d  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14 (line 1163)
                                                ; - java.lang.Math::floorMod@3 (line 1277)

  0x000000011d142f2b: dec    %eax
  0x000000011d142f2d: imul   %edi,%eax
  0x000000011d142f30: sub    %eax,%esi
  0x000000011d142f32: mov    %rsi,%rax
  0x000000011d142f35: add    $0x40,%rsp
  0x000000011d142f39: pop    %rbp
  0x000000011d142f3a: mov    0x108(%r15),%r10
  0x000000011d142f41: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d142f44: retq   
  0x000000011d142f45: movabs $0x14f722f50,%r10  ;   {metadata({method} {0x000000014f722f50} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000000011d142f4f: mov    %r10,0x8(%rsp)
  0x000000011d142f54: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d142f5c: callq  0x000000011c691600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1 (line 1277)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d142f61: jmp    0x000000011d142ef1
  0x000000011d142f63: callq  0x000000011c68cd20  ; ImmutableOopMap{}
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2 (line 1161)
                                                ; - java.lang.Math::floorMod@3 (line 1277)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011d142f68: nop
  0x000000011d142f69: nop
  0x000000011d142f6a: mov    0x420(%r15),%rax
  0x000000011d142f71: movabs $0x0,%r10
  0x000000011d142f7b: mov    %r10,0x420(%r15)
  0x000000011d142f82: movabs $0x0,%r10
  0x000000011d142f8c: mov    %r10,0x428(%r15)
  0x000000011d142f93: add    $0x40,%rsp
  0x000000011d142f97: pop    %rbp
  0x000000011d142f98: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d142f9d: hlt    
  0x000000011d142f9e: hlt    
  0x000000011d142f9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d142fa0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d142fa5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d142faf: and    $0xfffffffffffffff0,%rsp
  0x000000011d142fb3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d142fb8: hlt    
[Deopt Handler Code]
  0x000000011d142fb9: movabs $0x11d142fb9,%r10  ;   {section_word}
  0x000000011d142fc3: push   %r10
  0x000000011d142fc5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d142fca: hlt    
  0x000000011d142fcb: hlt    
  0x000000011d142fcc: hlt    
  0x000000011d142fcd: hlt    
  0x000000011d142fce: hlt    
  0x000000011d142fcf: hlt    

ImmutableOopMap{}pc offsets: 161 168 Compiled method (c1)     128   12       2       java.lang.String::equals (65 bytes)
 total in heap  [0x000000011d142690,0x000000011d142ce8] = 1624
 relocation     [0x000000011d142808,0x000000011d142850] = 72
 main code      [0x000000011d142860,0x000000011d142a60] = 512
 stub code      [0x000000011d142a60,0x000000011d142ab0] = 80
 metadata       [0x000000011d142ab0,0x000000011d142ac0] = 16
 scopes data    [0x000000011d142ac0,0x000000011d142b60] = 160
 scopes pcs     [0x000000011d142b60,0x000000011d142cd0] = 368
 dependencies   [0x000000011d142cd0,0x000000011d142cd8] = 8
 nul chk table  [0x000000011d142cd8,0x000000011d142ce8] = 16
----------------------------------------------------------------------
java/lang/String.equals(Ljava/lang/Object;)Z  [0x000000011d142860, 0x000000011d142ab0]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f5a9e10} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011d142860: mov    0x8(%rsi),%r10d
  0x000000011d142864: movabs $0x800000000,%r12
  0x000000011d14286e: add    %r12,%r10
  0x000000011d142871: xor    %r12,%r12
  0x000000011d142874: cmp    %rax,%r10
  0x000000011d142877: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14287d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d142880: mov    %eax,-0x14000(%rsp)
  0x000000011d142887: push   %rbp
  0x000000011d142888: sub    $0x30,%rsp
  0x000000011d14288c: movabs $0x14f7265c0,%rdi
  0x000000011d142896: mov    0x18(%rdi),%ebx
  0x000000011d142899: add    $0x8,%ebx
  0x000000011d14289c: mov    %ebx,0x18(%rdi)
  0x000000011d14289f: and    $0x3ff8,%ebx
  0x000000011d1428a5: cmp    $0x0,%ebx
  0x000000011d1428a8: je     0x000000011d1429e9  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@0 (line 1003)

  0x000000011d1428ae: cmp    %rdx,%rsi
  0x000000011d1428b1: je     0x000000011d1429d4  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2 (line 1003)

  0x000000011d1428b7: cmp    $0x0,%rdx
  0x000000011d1428bb: je     0x000000011d1428ec
  0x000000011d1428c1: movabs $0x800001808,%rax  ;   {metadata('java/lang/String')}
  0x000000011d1428cb: mov    0x8(%rdx),%ebx
  0x000000011d1428ce: movabs $0x800000000,%r12
  0x000000011d1428d8: add    %r12,%rbx
  0x000000011d1428db: xor    %r12,%r12
  0x000000011d1428de: cmp    %rbx,%rax
  0x000000011d1428e1: jne    0x000000011d1428ec
  0x000000011d1428e7: jmpq   0x000000011d1428f1
  0x000000011d1428ec: xor    %rdi,%rdi
  0x000000011d1428ef: jmp    0x000000011d1428fb
  0x000000011d1428f1: movabs $0x1,%rdi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8 (line 1006)

  0x000000011d1428fb: cmp    $0x0,%edi
  0x000000011d1428fe: je     0x000000011d1429bf  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@11 (line 1006)

  0x000000011d142904: cmp    $0x0,%rdx
  0x000000011d142908: je     0x000000011d142939
  0x000000011d14290e: movabs $0x800001808,%rbx  ;   {metadata('java/lang/String')}
  0x000000011d142918: mov    0x8(%rdx),%edi
  0x000000011d14291b: movabs $0x800000000,%r12
  0x000000011d142925: add    %r12,%rdi
  0x000000011d142928: xor    %r12,%r12
  0x000000011d14292b: cmp    %rdi,%rbx
  0x000000011d14292e: jne    0x000000011d142a0a
  0x000000011d142934: jmpq   0x000000011d142939
  0x000000011d142939: mov    %rdx,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)

  0x000000011d14293c: movsbl 0x14(%rsi),%edx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x000000011d142940: movsbl 0x14(%rdi),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ; implicit exception: dispatches to 0x000000011d142a13
  0x000000011d142944: mov    %rdx,%rax
  0x000000011d142947: shl    $0x18,%eax
  0x000000011d14294a: sar    $0x18,%eax
  0x000000011d14294d: shl    $0x18,%ebx
  0x000000011d142950: sar    $0x18,%ebx
  0x000000011d142953: cmp    %ebx,%eax
  0x000000011d142955: jne    0x000000011d1429bf  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)

  0x000000011d14295b: cmp    $0x0,%edx
  0x000000011d14295e: mov    $0x0,%edx
  0x000000011d142963: jne    0x000000011d14296e
  0x000000011d142969: mov    $0x1,%edx
  0x000000011d14296e: and    $0x1,%edx
  0x000000011d142971: cmp    $0x0,%edx
  0x000000011d142974: je     0x000000011d142999  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@34 (line 1009)

  0x000000011d14297a: mov    0xc(%rsi),%esi
  0x000000011d14297d: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38 (line 1009)

  0x000000011d142981: mov    0xc(%rdi),%edx
  0x000000011d142984: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42 (line 1009)

  0x000000011d142988: nopl   0x0(%rax)
  0x000000011d14298f: callq  0x000000011d13fb40  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45 (line 1009)
                                                ;   {static_call}
  0x000000011d142994: jmpq   0x000000011d1429ac  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@48 (line 1009)

  0x000000011d142999: mov    0xc(%rsi),%esi
  0x000000011d14299c: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@52 (line 1010)

  0x000000011d1429a0: mov    0xc(%rdi),%edx
  0x000000011d1429a3: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@56 (line 1010)

  0x000000011d1429a7: callq  0x000000011c5c9200  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@59 (line 1010)
                                                ;   {static_call}
  0x000000011d1429ac: and    $0x1,%eax
  0x000000011d1429af: add    $0x30,%rsp
  0x000000011d1429b3: pop    %rbp
  0x000000011d1429b4: mov    0x108(%r15),%r10
  0x000000011d1429bb: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1429be: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@62 (line 1009)

  0x000000011d1429bf: mov    $0x0,%eax
  0x000000011d1429c4: add    $0x30,%rsp
  0x000000011d1429c8: pop    %rbp
  0x000000011d1429c9: mov    0x108(%r15),%r10
  0x000000011d1429d0: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1429d3: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@64 (line 1013)

  0x000000011d1429d4: mov    $0x1,%eax
  0x000000011d1429d9: add    $0x30,%rsp
  0x000000011d1429dd: pop    %rbp
  0x000000011d1429de: mov    0x108(%r15),%r10
  0x000000011d1429e5: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1429e8: retq   
  0x000000011d1429e9: movabs $0x14f5a9e10,%r10  ;   {metadata({method} {0x000000014f5a9e10} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011d1429f3: mov    %r10,0x8(%rsp)
  0x000000011d1429f8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d142a00: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 1003)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d142a05: jmpq   0x000000011d1428ae
  0x000000011d142a0a: mov    %rdx,(%rsp)
  0x000000011d142a0e: callq  0x000000011c68eea0  ; ImmutableOopMap{rsi=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011d142a13: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d142a18: nop
  0x000000011d142a19: nop
  0x000000011d142a1a: mov    0x420(%r15),%rax
  0x000000011d142a21: movabs $0x0,%r10
  0x000000011d142a2b: mov    %r10,0x420(%r15)
  0x000000011d142a32: movabs $0x0,%r10
  0x000000011d142a3c: mov    %r10,0x428(%r15)
  0x000000011d142a43: add    $0x30,%rsp
  0x000000011d142a47: pop    %rbp
  0x000000011d142a48: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d142a4d: hlt    
  0x000000011d142a4e: hlt    
  0x000000011d142a4f: hlt    
  0x000000011d142a50: hlt    
  0x000000011d142a51: hlt    
  0x000000011d142a52: hlt    
  0x000000011d142a53: hlt    
  0x000000011d142a54: hlt    
  0x000000011d142a55: hlt    
  0x000000011d142a56: hlt    
  0x000000011d142a57: hlt    
  0x000000011d142a58: hlt    
  0x000000011d142a59: hlt    
  0x000000011d142a5a: hlt    
  0x000000011d142a5b: hlt    
  0x000000011d142a5c: hlt    
  0x000000011d142a5d: hlt    
  0x000000011d142a5e: hlt    
  0x000000011d142a5f: hlt    
[Stub Code]
  0x000000011d142a60: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d142a65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d142a6f: jmpq   0x000000011d142a6f  ;   {runtime_call}
  0x000000011d142a74: nop
  0x000000011d142a75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d142a7f: jmpq   0x000000011d142a7f  ;   {runtime_call}
[Exception Handler]
  0x000000011d142a84: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d142a89: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d142a93: and    $0xfffffffffffffff0,%rsp
  0x000000011d142a97: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d142a9c: hlt    
[Deopt Handler Code]
  0x000000011d142a9d: movabs $0x11d142a9d,%r10  ;   {section_word}
  0x000000011d142aa7: push   %r10
  0x000000011d142aa9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d142aae: hlt    
  0x000000011d142aaf: hlt    

ImmutableOopMap{}pc offsets: 308 332 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 421 
ImmutableOopMap{rsi=Oop }pc offsets: 435 
ImmutableOopMap{rsi=Oop rdi=Oop }pc offsets: 440 Compiled method (c1)     132    6       2       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x000000011d142310,0x000000011d142648] = 824
 relocation     [0x000000011d142488,0x000000011d1424b0] = 40
 main code      [0x000000011d1424c0,0x000000011d1425a0] = 224
 stub code      [0x000000011d1425a0,0x000000011d1425d0] = 48
 metadata       [0x000000011d1425d0,0x000000011d1425d8] = 8
 scopes data    [0x000000011d1425d8,0x000000011d1425f0] = 24
 scopes pcs     [0x000000011d1425f0,0x000000011d142640] = 80
 dependencies   [0x000000011d142640,0x000000011d142648] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x000000011d1424c0, 0x000000011d1425d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f5ae300} 'isLatin1' '()Z' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000011d1424c0: mov    0x8(%rsi),%r10d
  0x000000011d1424c4: movabs $0x800000000,%r12
  0x000000011d1424ce: add    %r12,%r10
  0x000000011d1424d1: xor    %r12,%r12
  0x000000011d1424d4: cmp    %rax,%r10
  0x000000011d1424d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1424dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d1424e0: mov    %eax,-0x14000(%rsp)
  0x000000011d1424e7: push   %rbp
  0x000000011d1424e8: sub    $0x30,%rsp
  0x000000011d1424ec: movabs $0x14f6fb500,%rax
  0x000000011d1424f6: mov    0x18(%rax),%edi
  0x000000011d1424f9: add    $0x8,%edi
  0x000000011d1424fc: mov    %edi,0x18(%rax)
  0x000000011d1424ff: and    $0x3ff8,%edi
  0x000000011d142505: cmp    $0x0,%edi
  0x000000011d142508: je     0x000000011d142538  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@0 (line 3266)

  0x000000011d14250e: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)

  0x000000011d142512: cmp    $0x0,%eax
  0x000000011d142515: mov    $0x0,%eax
  0x000000011d14251a: jne    0x000000011d142525
  0x000000011d142520: mov    $0x1,%eax
  0x000000011d142525: and    $0x1,%eax
  0x000000011d142528: add    $0x30,%rsp
  0x000000011d14252c: pop    %rbp
  0x000000011d14252d: mov    0x108(%r15),%r10
  0x000000011d142534: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d142537: retq   
  0x000000011d142538: movabs $0x14f5ae300,%r10  ;   {metadata({method} {0x000000014f5ae300} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000000011d142542: mov    %r10,0x8(%rsp)
  0x000000011d142547: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14254f: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d142554: jmp    0x000000011d14250e
  0x000000011d142556: nop
  0x000000011d142557: nop
  0x000000011d142558: mov    0x420(%r15),%rax
  0x000000011d14255f: movabs $0x0,%r10
  0x000000011d142569: mov    %r10,0x420(%r15)
  0x000000011d142570: movabs $0x0,%r10
  0x000000011d14257a: mov    %r10,0x428(%r15)
  0x000000011d142581: add    $0x30,%rsp
  0x000000011d142585: pop    %rbp
  0x000000011d142586: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14258b: hlt    
  0x000000011d14258c: hlt    
  0x000000011d14258d: hlt    
  0x000000011d14258e: hlt    
  0x000000011d14258f: hlt    
  0x000000011d142590: hlt    
  0x000000011d142591: hlt    
  0x000000011d142592: hlt    
  0x000000011d142593: hlt    
  0x000000011d142594: hlt    
  0x000000011d142595: hlt    
  0x000000011d142596: hlt    
  0x000000011d142597: hlt    
  0x000000011d142598: hlt    
  0x000000011d142599: hlt    
  0x000000011d14259a: hlt    
  0x000000011d14259b: hlt    
  0x000000011d14259c: hlt    
  0x000000011d14259d: hlt    
  0x000000011d14259e: hlt    
  0x000000011d14259f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d1425a0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d1425a5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d1425af: and    $0xfffffffffffffff0,%rsp
  0x000000011d1425b3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d1425b8: hlt    
[Deopt Handler Code]
  0x000000011d1425b9: movabs $0x11d1425b9,%r10  ;   {section_word}
  0x000000011d1425c3: push   %r10
  0x000000011d1425c5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d1425ca: hlt    
  0x000000011d1425cb: hlt    
  0x000000011d1425cc: hlt    
  0x000000011d1425cd: hlt    
  0x000000011d1425ce: hlt    
  0x000000011d1425cf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 148 Compiled method (c1)     133   49       2       java.util.HashMap::getNode (148 bytes)
 total in heap  [0x000000011d148c90,0x000000011d1496e8] = 2648
 relocation     [0x000000011d148e08,0x000000011d148e70] = 104
 main code      [0x000000011d148e80,0x000000011d1491e0] = 864
 stub code      [0x000000011d1491e0,0x000000011d149240] = 96
 metadata       [0x000000011d149240,0x000000011d149248] = 8
 scopes data    [0x000000011d149248,0x000000011d1493b8] = 368
 scopes pcs     [0x000000011d1493b8,0x000000011d1496b8] = 768
 dependencies   [0x000000011d1496b8,0x000000011d1496c0] = 8
 nul chk table  [0x000000011d1496c0,0x000000011d1496e8] = 40
----------------------------------------------------------------------
java/util/HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;  [0x000000011d148e80, 0x000000011d149240]  960 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6cbdd0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x000000011d148e80: mov    0x8(%rsi),%r10d
  0x000000011d148e84: movabs $0x800000000,%r12
  0x000000011d148e8e: add    %r12,%r10
  0x000000011d148e91: xor    %r12,%r12
  0x000000011d148e94: cmp    %rax,%r10
  0x000000011d148e97: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d148e9d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d148ea0: mov    %eax,-0x14000(%rsp)
  0x000000011d148ea7: push   %rbp
  0x000000011d148ea8: sub    $0x50,%rsp
  0x000000011d148eac: mov    %edx,0x28(%rsp)
  0x000000011d148eb0: mov    %rcx,0x30(%rsp)
  0x000000011d148eb5: movabs $0x14f7eb9a8,%rdi
  0x000000011d148ebf: mov    0x18(%rdi),%ebx
  0x000000011d148ec2: add    $0x8,%ebx
  0x000000011d148ec5: mov    %ebx,0x18(%rdi)
  0x000000011d148ec8: and    $0x3ff8,%ebx
  0x000000011d148ece: cmp    $0x0,%ebx
  0x000000011d148ed1: je     0x000000011d149127  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@0 (line 564)

  0x000000011d148ed7: mov    0x24(%rsi),%esi
  0x000000011d148eda: shl    $0x3,%rsi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@1 (line 564)

  0x000000011d148ede: cmp    $0x0,%rsi
  0x000000011d148ee2: je     0x000000011d14909b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@6 (line 564)

  0x000000011d148ee8: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 564)
                                                ; implicit exception: dispatches to 0x000000011d149148
  0x000000011d148eeb: cmp    $0x0,%edi
  0x000000011d148eee: jle    0x000000011d14909b  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@14 (line 564)

  0x000000011d148ef4: dec    %edi
  0x000000011d148ef6: and    %rdx,%rdi
  0x000000011d148ef9: cmp    0xc(%rsi),%edi
  0x000000011d148efc: jae    0x000000011d14914d
  0x000000011d148f02: movslq %edi,%rdi
  0x000000011d148f05: mov    0x10(%rsi,%rdi,4),%edi
  0x000000011d148f09: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 564)

  0x000000011d148f0d: cmp    $0x0,%rdi
  0x000000011d148f11: je     0x000000011d14909b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@28 (line 564)

  0x000000011d148f17: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 566)
                                                ; implicit exception: dispatches to 0x000000011d14915b
  0x000000011d148f1a: cmp    %edx,%esi
  0x000000011d148f1c: jne    0x000000011d148f6a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@37 (line 566)

  0x000000011d148f22: mov    0x10(%rdi),%esi
  0x000000011d148f25: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@42 (line 566)

  0x000000011d148f29: cmp    %rcx,%rsi
  0x000000011d148f2c: je     0x000000011d149114  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@49 (line 566)

  0x000000011d148f32: cmp    $0x0,%rcx
  0x000000011d148f36: je     0x000000011d148f6a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@53 (line 566)

  0x000000011d148f3c: mov    %rdi,0x20(%rsp)
  0x000000011d148f41: mov    %rsi,%rdx
  0x000000011d148f44: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 567)

  0x000000011d148f47: nopw   0x0(%rax,%rax,1)
  0x000000011d148f4d: movabs $0xffffffffffffffff,%rax
  0x000000011d148f57: callq  0x000000011c5c8f80  ; ImmutableOopMap{[48]=Oop [32]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 567)
                                                ;   {virtual_call}
  0x000000011d148f5c: cmp    $0x0,%eax
  0x000000011d148f5f: mov    0x20(%rsp),%rdi
  0x000000011d148f64: jne    0x000000011d149114  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@62 (line 567)

  0x000000011d148f6a: mov    0x18(%rdi),%edx
  0x000000011d148f6d: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@70 (line 569)

  0x000000011d148f71: cmp    $0x0,%rdx
  0x000000011d148f75: je     0x000000011d14909b  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@76 (line 569)

  0x000000011d148f7b: cmp    $0x0,%rdi
  0x000000011d148f7f: je     0x000000011d148fb0
  0x000000011d148f85: movabs $0x800032a90,%rax  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000011d148f8f: mov    0x8(%rdi),%ebx
  0x000000011d148f92: movabs $0x800000000,%r12
  0x000000011d148f9c: add    %r12,%rbx
  0x000000011d148f9f: xor    %r12,%r12
  0x000000011d148fa2: cmp    %rbx,%rax
  0x000000011d148fa5: jne    0x000000011d148fb0
  0x000000011d148fab: jmpq   0x000000011d148fb5
  0x000000011d148fb0: xor    %rsi,%rsi
  0x000000011d148fb3: jmp    0x000000011d148fbf
  0x000000011d148fb5: movabs $0x1,%rsi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@81 (line 570)

  0x000000011d148fbf: cmp    $0x0,%esi
  0x000000011d148fc2: jne    0x000000011d1490b5  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@84 (line 570)

  0x000000011d148fc8: mov    0x30(%rsp),%rcx
  0x000000011d148fcd: mov    0x28(%rsp),%edi
  0x000000011d148fd1: mov    0xc(%rdx),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 573)
                                                ; implicit exception: dispatches to 0x000000011d149160
  0x000000011d148fd4: cmp    %edi,%esi
  0x000000011d148fd6: jne    0x000000011d149022  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@104 (line 573)

  0x000000011d148fdc: mov    0x10(%rdx),%esi
  0x000000011d148fdf: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@109 (line 573)

  0x000000011d148fe3: cmp    %rcx,%rsi
  0x000000011d148fe6: je     0x000000011d149088  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@116 (line 573)

  0x000000011d148fec: cmp    $0x0,%rcx
  0x000000011d148ff0: je     0x000000011d149022  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@120 (line 573)

  0x000000011d148ff6: mov    %rdx,0x38(%rsp)
  0x000000011d148ffb: mov    %rsi,%rdx
  0x000000011d148ffe: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 574)

  0x000000011d149001: nopl   0x0(%rax)
  0x000000011d149005: movabs $0xffffffffffffffff,%rax
  0x000000011d14900f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[56]=Oop [48]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 574)
                                                ;   {virtual_call}
  0x000000011d149014: cmp    $0x0,%eax
  0x000000011d149017: mov    0x38(%rsp),%rdx
  0x000000011d14901c: jne    0x000000011d149088  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@129 (line 574)

  0x000000011d149022: mov    0x18(%rdx),%eax
  0x000000011d149025: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@137 (line 576)

  0x000000011d149029: cmp    $0x0,%rax
  0x000000011d14902d: mov    $0x8,%edx
  0x000000011d149032: jne    0x000000011d14903d
  0x000000011d149038: mov    $0x0,%edx
  0x000000011d14903d: movabs $0x14f7eb9a8,%rcx
  0x000000011d149047: mov    0x1c(%rcx),%esi
  0x000000011d14904a: add    %edx,%esi
  0x000000011d14904c: mov    %esi,0x1c(%rcx)
  0x000000011d14904f: cmp    $0x0,%edx
  0x000000011d149052: jne    0x000000011d14905d
  0x000000011d149058: mov    $0x8,%esi
  0x000000011d14905d: and    $0x1fff8,%esi
  0x000000011d149063: cmp    $0x0,%esi
  0x000000011d149066: je     0x000000011d149165  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x000000011d14906c: mov    0x108(%r15),%r10   ; ImmutableOopMap{[48]=Oop rax=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x000000011d149073: test   %eax,(%r10)        ;   {poll}
  0x000000011d149076: cmp    $0x0,%rax
  0x000000011d14907a: je     0x000000011d14909b  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x000000011d149080: mov    %rax,%rdx
  0x000000011d149083: jmpq   0x000000011d148fc8  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@98 (line 573)

  0x000000011d149088: mov    %rdx,%rax
  0x000000011d14908b: add    $0x50,%rsp
  0x000000011d14908f: pop    %rbp
  0x000000011d149090: mov    0x108(%r15),%r10
  0x000000011d149097: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14909a: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@134 (line 575)

  0x000000011d14909b: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011d1490a5: add    $0x50,%rsp
  0x000000011d1490a9: pop    %rbp
  0x000000011d1490aa: mov    0x108(%r15),%r10
  0x000000011d1490b1: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1490b4: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@147 (line 579)

  0x000000011d1490b5: mov    0x30(%rsp),%rcx
  0x000000011d1490ba: mov    0x28(%rsp),%edx
  0x000000011d1490be: cmp    $0x0,%rdi
  0x000000011d1490c2: je     0x000000011d1490f3
  0x000000011d1490c8: movabs $0x800032a90,%rbx  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000011d1490d2: mov    0x8(%rdi),%esi
  0x000000011d1490d5: movabs $0x800000000,%r12
  0x000000011d1490df: add    %r12,%rsi
  0x000000011d1490e2: xor    %r12,%r12
  0x000000011d1490e5: cmp    %rsi,%rbx
  0x000000011d1490e8: jne    0x000000011d149186
  0x000000011d1490ee: jmpq   0x000000011d1490f3
  0x000000011d1490f3: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 571)

  0x000000011d1490f6: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ; implicit exception: dispatches to 0x000000011d14918f
  0x000000011d1490f9: nopw   0x0(%rax,%rax,1)
  0x000000011d1490ff: callq  0x000000011c5c8d00  ; ImmutableOopMap{}
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ;   {optimized virtual_call}
  0x000000011d149104: add    $0x50,%rsp
  0x000000011d149108: pop    %rbp
  0x000000011d149109: mov    0x108(%r15),%r10
  0x000000011d149110: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d149113: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@97 (line 571)

  0x000000011d149114: mov    %rdi,%rax
  0x000000011d149117: add    $0x50,%rsp
  0x000000011d14911b: pop    %rbp
  0x000000011d14911c: mov    0x108(%r15),%r10
  0x000000011d149123: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d149126: retq   
  0x000000011d149127: movabs $0x14f6cbdd0,%r10  ;   {metadata({method} {0x000000014f6cbdd0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011d149131: mov    %r10,0x8(%rsp)
  0x000000011d149136: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14913e: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 564)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d149143: jmpq   0x000000011d148ed7
  0x000000011d149148: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 564)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14914d: mov    %rdi,(%rsp)
  0x000000011d149151: mov    %rsi,0x8(%rsp)
  0x000000011d149156: callq  0x000000011c68c920  ; ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 564)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14915b: callq  0x000000011c68cf20  ; ImmutableOopMap{rdi=Oop rcx=Oop [48]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 566)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d149160: callq  0x000000011c68cf20  ; ImmutableOopMap{rdx=Oop rcx=Oop [48]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 573)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d149165: movabs $0x14f6cbdd0,%r10  ;   {metadata({method} {0x000000014f6cbdd0} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011d14916f: mov    %r10,0x8(%rsp)
  0x000000011d149174: movq   $0x8f,(%rsp)
  0x000000011d14917c: callq  0x000000011c691600  ; ImmutableOopMap{[48]=Oop rax=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d149181: jmpq   0x000000011d14906c
  0x000000011d149186: mov    %rdi,(%rsp)
  0x000000011d14918a: callq  0x000000011c68eea0  ; ImmutableOopMap{rcx=Oop [48]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 571)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011d14918f: callq  0x000000011c68cf20  ; ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d149194: nop
  0x000000011d149195: nop
  0x000000011d149196: mov    0x420(%r15),%rax
  0x000000011d14919d: movabs $0x0,%r10
  0x000000011d1491a7: mov    %r10,0x420(%r15)
  0x000000011d1491ae: movabs $0x0,%r10
  0x000000011d1491b8: mov    %r10,0x428(%r15)
  0x000000011d1491bf: add    $0x50,%rsp
  0x000000011d1491c3: pop    %rbp
  0x000000011d1491c4: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d1491c9: hlt    
  0x000000011d1491ca: hlt    
  0x000000011d1491cb: hlt    
  0x000000011d1491cc: hlt    
  0x000000011d1491cd: hlt    
  0x000000011d1491ce: hlt    
  0x000000011d1491cf: hlt    
  0x000000011d1491d0: hlt    
  0x000000011d1491d1: hlt    
  0x000000011d1491d2: hlt    
  0x000000011d1491d3: hlt    
  0x000000011d1491d4: hlt    
  0x000000011d1491d5: hlt    
  0x000000011d1491d6: hlt    
  0x000000011d1491d7: hlt    
  0x000000011d1491d8: hlt    
  0x000000011d1491d9: hlt    
  0x000000011d1491da: hlt    
  0x000000011d1491db: hlt    
  0x000000011d1491dc: hlt    
  0x000000011d1491dd: hlt    
  0x000000011d1491de: hlt    
  0x000000011d1491df: hlt    
[Stub Code]
  0x000000011d1491e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d1491e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1491ef: jmpq   0x000000011d1491ef  ;   {runtime_call}
  0x000000011d1491f4: nop
  0x000000011d1491f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1491ff: jmpq   0x000000011d1491ff  ;   {runtime_call}
  0x000000011d149204: nop
  0x000000011d149205: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14920f: jmpq   0x000000011d14920f  ;   {runtime_call}
[Exception Handler]
  0x000000011d149214: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d149219: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d149223: and    $0xfffffffffffffff0,%rsp
  0x000000011d149227: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14922c: hlt    
[Deopt Handler Code]
  0x000000011d14922d: movabs $0x11d14922d,%r10  ;   {section_word}
  0x000000011d149237: push   %r10
  0x000000011d149239: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14923e: hlt    
  0x000000011d14923f: hlt    

ImmutableOopMap{[48]=Oop [32]=Oop }pc offsets: 220 
ImmutableOopMap{[56]=Oop [48]=Oop }pc offsets: 404 
ImmutableOopMap{[48]=Oop rax=Oop }pc offsets: 499 
ImmutableOopMap{}pc offsets: 644 
ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }pc offsets: 707 717 
ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }pc offsets: 731 
ImmutableOopMap{rdi=Oop rcx=Oop [48]=Oop }pc offsets: 736 
ImmutableOopMap{rdx=Oop rcx=Oop [48]=Oop }pc offsets: 741 
ImmutableOopMap{[48]=Oop rax=Oop }pc offsets: 769 
ImmutableOopMap{rcx=Oop [48]=Oop }pc offsets: 783 
ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }pc offsets: 788 Compiled method (c1)     141   51       2       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x000000011d147810,0x000000011d148c38] = 5160
 relocation     [0x000000011d147988,0x000000011d147a70] = 232
 main code      [0x000000011d147a80,0x000000011d148180] = 1792
 stub code      [0x000000011d148180,0x000000011d148250] = 208
 metadata       [0x000000011d148250,0x000000011d148258] = 8
 scopes data    [0x000000011d148258,0x000000011d1485e8] = 912
 scopes pcs     [0x000000011d1485e8,0x000000011d148bd8] = 1520
 dependencies   [0x000000011d148bd8,0x000000011d148be0] = 8
 nul chk table  [0x000000011d148be0,0x000000011d148c38] = 88
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x000000011d147a80, 0x000000011d148250]  2000 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6cc228} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x000000011d147a80: mov    0x8(%rsi),%r10d
  0x000000011d147a84: movabs $0x800000000,%r12
  0x000000011d147a8e: add    %r12,%r10
  0x000000011d147a91: xor    %r12,%r12
  0x000000011d147a94: cmp    %rax,%r10
  0x000000011d147a97: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d147a9d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d147aa0: mov    %eax,-0x14000(%rsp)
  0x000000011d147aa7: push   %rbp
  0x000000011d147aa8: sub    $0xa0,%rsp
  0x000000011d147aaf: mov    %rsi,0x58(%rsp)
  0x000000011d147ab4: mov    %edx,0x40(%rsp)
  0x000000011d147ab8: mov    %rcx,0x48(%rsp)
  0x000000011d147abd: movabs $0x14f7e43d8,%rbx
  0x000000011d147ac7: mov    0x18(%rbx),%eax
  0x000000011d147aca: add    $0x8,%eax
  0x000000011d147acd: mov    %eax,0x18(%rbx)
  0x000000011d147ad0: and    $0x3ff8,%eax
  0x000000011d147ad6: cmp    $0x0,%eax
  0x000000011d147ad9: je     0x000000011d147fe9  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0 (line 623)

  0x000000011d147adf: mov    0x24(%rsi),%ebx
  0x000000011d147ae2: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 623)

  0x000000011d147ae6: cmp    $0x0,%rbx
  0x000000011d147aea: je     0x000000011d147b0f  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7 (line 623)

  0x000000011d147af0: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)
                                                ; implicit exception: dispatches to 0x000000011d14800a
  0x000000011d147af3: cmp    $0x0,%eax
  0x000000011d147af6: je     0x000000011d147b0f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 623)

  0x000000011d147afc: mov    %edi,0x60(%rsp)
  0x000000011d147b00: mov    %r9d,0x44(%rsp)
  0x000000011d147b05: mov    %r8,0x50(%rsp)
  0x000000011d147b0a: jmpq   0x000000011d147b38  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x000000011d147b0f: mov    %edi,0x60(%rsp)
  0x000000011d147b13: mov    %r9d,0x44(%rsp)
  0x000000011d147b18: mov    %r8,0x50(%rsp)
  0x000000011d147b1d: mov    %rsi,%rbx
  0x000000011d147b20: mov    %rbx,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x000000011d147b23: nopl   0x0(%rax)
  0x000000011d147b27: callq  0x000000011c5c8d00  ; ImmutableOopMap{[80]=Oop [72]=Oop [88]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)
                                                ;   {optimized virtual_call}
  0x000000011d147b2c: mov    %rax,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x000000011d147b2f: mov    0xc(%rdx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ; implicit exception: dispatches to 0x000000011d14800f
  0x000000011d147b32: mov    %rcx,%rax
  0x000000011d147b35: mov    %rdx,%rbx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x000000011d147b38: dec    %eax
  0x000000011d147b3a: and    0x40(%rsp),%eax
  0x000000011d147b3e: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000000011d148014
  0x000000011d147b41: jae    0x000000011d14801e
  0x000000011d147b47: movslq %eax,%rdx
  0x000000011d147b4a: mov    0x10(%rbx,%rdx,4),%edi
  0x000000011d147b4e: shl    $0x3,%rdi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)

  0x000000011d147b52: cmp    $0x0,%rdi
  0x000000011d147b56: jne    0x000000011d147c47  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44 (line 625)

  0x000000011d147b5c: mov    %eax,0x64(%rsp)
  0x000000011d147b60: mov    %rbx,0x68(%rsp)
  0x000000011d147b65: mov    0x40(%rsp),%edx
  0x000000011d147b69: mov    0x48(%rsp),%rcx
  0x000000011d147b6e: mov    0x50(%rsp),%r8
  0x000000011d147b73: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000011d147b7d: mov    0x58(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x000000011d147b82: data16 xchg %ax,%ax
  0x000000011d147b85: movabs $0xffffffffffffffff,%rax
  0x000000011d147b8f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[88]=Oop [104]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)
                                                ;   {virtual_call}
  0x000000011d147b94: mov    0x68(%rsp),%rbx
  0x000000011d147b99: mov    0x64(%rsp),%edx
  0x000000011d147b9d: cmp    0xc(%rbx),%edx
  0x000000011d147ba0: jae    0x000000011d14802c
  0x000000011d147ba6: cmp    $0x0,%rax
  0x000000011d147baa: je     0x000000011d147c0e
  0x000000011d147bb0: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x000000011d14803a
  0x000000011d147bb3: movabs $0x800000000,%r12
  0x000000011d147bbd: add    %r12,%rsi
  0x000000011d147bc0: xor    %r12,%r12
  0x000000011d147bc3: mov    0x8(%rax),%edi
  0x000000011d147bc6: movabs $0x800000000,%r12
  0x000000011d147bd0: add    %r12,%rdi
  0x000000011d147bd3: xor    %r12,%r12
  0x000000011d147bd6: mov    0xe8(%rsi),%rsi
  0x000000011d147bdd: cmp    %rsi,%rdi
  0x000000011d147be0: je     0x000000011d147c0e
  0x000000011d147be6: mov    0x10(%rsi),%ecx
  0x000000011d147be9: cmp    (%rdi,%rcx,1),%rsi
  0x000000011d147bed: je     0x000000011d147c0e
  0x000000011d147bf3: cmp    $0x20,%ecx
  0x000000011d147bf6: jne    0x000000011d14803f
  0x000000011d147bfc: push   %rdi
  0x000000011d147bfd: push   %rsi
  0x000000011d147bfe: callq  0x000000011c68f280  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011d147c03: pop    %rdi
  0x000000011d147c04: pop    %rsi
  0x000000011d147c05: cmp    $0x0,%esi
  0x000000011d147c08: je     0x000000011d14803f
  0x000000011d147c0e: movslq %edx,%rdx
  0x000000011d147c11: lea    0x10(%rbx,%rdx,4),%rdx
  0x000000011d147c16: movsbl 0x30(%r15),%esi
  0x000000011d147c1b: cmp    $0x0,%esi
  0x000000011d147c1e: jne    0x000000011d148048
  0x000000011d147c24: mov    %rax,%r10
  0x000000011d147c27: shr    $0x3,%r10
  0x000000011d147c2b: mov    %r10d,(%rdx)
  0x000000011d147c2e: mov    %rdx,%rsi
  0x000000011d147c31: xor    %rax,%rsi
  0x000000011d147c34: shr    $0x16,%rsi
  0x000000011d147c38: cmp    $0x0,%rsi
  0x000000011d147c3c: jne    0x000000011d148066  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x000000011d147c42: jmpq   0x000000011d147ee6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60 (line 626)

  0x000000011d147c47: mov    0xc(%rdi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)
                                                ; implicit exception: dispatches to 0x000000011d14807e
  0x000000011d147c4a: cmp    0x40(%rsp),%edx
  0x000000011d147c4e: je     0x000000011d147c5e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 629)

  0x000000011d147c54: mov    %rbx,0x68(%rsp)
  0x000000011d147c59: jmpq   0x000000011d147cb2  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 632)

  0x000000011d147c5e: mov    0x48(%rsp),%rcx
  0x000000011d147c63: mov    0x10(%rdi),%edx
  0x000000011d147c66: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74 (line 629)

  0x000000011d147c6a: cmp    %rcx,%rdx
  0x000000011d147c6d: je     0x000000011d147ed9  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81 (line 629)

  0x000000011d147c73: cmp    $0x0,%rcx
  0x000000011d147c77: jne    0x000000011d147c87  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85 (line 629)

  0x000000011d147c7d: mov    %rbx,0x68(%rsp)
  0x000000011d147c82: jmpq   0x000000011d147cb2  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 632)

  0x000000011d147c87: mov    %rdi,0x70(%rsp)
  0x000000011d147c8c: mov    %rbx,0x68(%rsp)
  0x000000011d147c91: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)

  0x000000011d147c94: nop
  0x000000011d147c95: movabs $0xffffffffffffffff,%rax
  0x000000011d147c9f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[88]=Oop [80]=Oop [112]=Oop [72]=Oop [104]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)
                                                ;   {virtual_call}
  0x000000011d147ca4: cmp    $0x0,%eax
  0x000000011d147ca7: mov    0x70(%rsp),%rdi
  0x000000011d147cac: jne    0x000000011d147ed9  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94 (line 630)

  0x000000011d147cb2: cmp    $0x0,%rdi
  0x000000011d147cb6: je     0x000000011d147ce7
  0x000000011d147cbc: movabs $0x800032a90,%r8   ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000011d147cc6: mov    0x8(%rdi),%ecx
  0x000000011d147cc9: movabs $0x800000000,%r12
  0x000000011d147cd3: add    %r12,%rcx
  0x000000011d147cd6: xor    %r12,%r12
  0x000000011d147cd9: cmp    %rcx,%r8
  0x000000011d147cdc: jne    0x000000011d147ce7
  0x000000011d147ce2: jmpq   0x000000011d147cec
  0x000000011d147ce7: xor    %rdx,%rdx
  0x000000011d147cea: jmp    0x000000011d147cf6
  0x000000011d147cec: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106 (line 632)

  0x000000011d147cf6: cmp    $0x0,%edx
  0x000000011d147cf9: je     0x000000011d147d61  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 632)

  0x000000011d147cff: cmp    $0x0,%rdi
  0x000000011d147d03: je     0x000000011d147d34
  0x000000011d147d09: movabs $0x800032a90,%rcx  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000011d147d13: mov    0x8(%rdi),%edx
  0x000000011d147d16: movabs $0x800000000,%r12
  0x000000011d147d20: add    %r12,%rdx
  0x000000011d147d23: xor    %r12,%r12
  0x000000011d147d26: cmp    %rdx,%rcx
  0x000000011d147d29: jne    0x000000011d148083
  0x000000011d147d2f: jmpq   0x000000011d147d34
  0x000000011d147d34: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 633)

  0x000000011d147d37: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011d14808c
  0x000000011d147d3a: mov    0x58(%rsp),%rdx
  0x000000011d147d3f: mov    0x68(%rsp),%rcx
  0x000000011d147d44: mov    0x40(%rsp),%r8d
  0x000000011d147d49: mov    0x48(%rsp),%r9
  0x000000011d147d4e: mov    0x50(%rsp),%rdi    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)

  0x000000011d147d53: nopl   0x0(%rax)
  0x000000011d147d57: callq  0x000000011c5c8d00  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)
                                                ;   {optimized virtual_call}
  0x000000011d147d5c: jmpq   0x000000011d147edc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128 (line 633)

  0x000000011d147d61: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134 (line 636)

  0x000000011d147d66: xchg   %ax,%ax
  0x000000011d147d68: mov    %ebx,0x78(%rsp)
  0x000000011d147d6c: mov    0x48(%rsp),%rcx
  0x000000011d147d71: mov    0x40(%rsp),%edx
  0x000000011d147d75: mov    0x18(%rdi),%eax    ; implicit exception: dispatches to 0x000000011d148091
  0x000000011d147d78: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)

  0x000000011d147d7c: mov    %rax,0x80(%rsp)
  0x000000011d147d84: cmp    $0x0,%rax
  0x000000011d147d88: je     0x000000011d147e2e  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 636)

  0x000000011d147d8e: mov    0xc(%rax),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)
                                                ; implicit exception: dispatches to 0x000000011d148096
  0x000000011d147d91: cmp    %edx,%esi
  0x000000011d147d93: jne    0x000000011d147dd5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 642)

  0x000000011d147d99: mov    0x10(%rax),%esi
  0x000000011d147d9c: shl    $0x3,%rsi          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186 (line 642)

  0x000000011d147da0: cmp    %rcx,%rsi
  0x000000011d147da3: je     0x000000011d147e14  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193 (line 642)

  0x000000011d147da9: cmp    $0x0,%rcx
  0x000000011d147dad: je     0x000000011d147dd5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197 (line 642)

  0x000000011d147db3: mov    %rsi,%rdx
  0x000000011d147db6: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)

  0x000000011d147db9: nopl   0x0(%rax)
  0x000000011d147dbd: movabs $0xffffffffffffffff,%rax
  0x000000011d147dc7: callq  0x000000011c5c8f80  ; ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop [128]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)
                                                ;   {virtual_call}
  0x000000011d147dcc: cmp    $0x0,%eax
  0x000000011d147dcf: jne    0x000000011d147e21  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206 (line 643)

  0x000000011d147dd5: mov    0x78(%rsp),%ebx
  0x000000011d147dd9: inc    %ebx
  0x000000011d147ddb: movabs $0x14f7e43d8,%rdx
  0x000000011d147de5: mov    0x1c(%rdx),%ecx
  0x000000011d147de8: add    $0x8,%ecx
  0x000000011d147deb: mov    %ecx,0x1c(%rdx)
  0x000000011d147dee: and    $0x1fff8,%ecx
  0x000000011d147df4: cmp    $0x0,%ecx
  0x000000011d147df7: je     0x000000011d14809b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011d147dfd: mov    0x108(%r15),%r10   ; ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011d147e04: test   %eax,(%r10)        ;   {poll}
  0x000000011d147e07: mov    0x80(%rsp),%rdi
  0x000000011d147e0f: jmpq   0x000000011d147d68  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x000000011d147e14: mov    0x80(%rsp),%rax
  0x000000011d147e1c: jmpq   0x000000011d147edc  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 648)

  0x000000011d147e21: mov    0x80(%rsp),%rax
  0x000000011d147e29: jmpq   0x000000011d147edc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209 (line 644)

  0x000000011d147e2e: mov    %rdi,0x88(%rsp)
  0x000000011d147e36: mov    0x40(%rsp),%edx
  0x000000011d147e3a: mov    0x50(%rsp),%r8
  0x000000011d147e3f: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000011d147e49: mov    0x58(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x000000011d147e4e: nopl   0x0(%rax)
  0x000000011d147e55: movabs $0xffffffffffffffff,%rax
  0x000000011d147e5f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[88]=Oop [80]=Oop [128]=Oop [104]=Oop [136]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)
                                                ;   {virtual_call}
  0x000000011d147e64: movsbl 0x30(%r15),%edx
  0x000000011d147e69: cmp    $0x0,%edx
  0x000000011d147e6c: mov    0x88(%rsp),%rdi
  0x000000011d147e74: jne    0x000000011d1480bc
  0x000000011d147e7a: mov    %rax,%r10
  0x000000011d147e7d: shr    $0x3,%r10
  0x000000011d147e81: mov    %r10d,0x18(%rdi)
  0x000000011d147e85: mov    %rdi,%rdx
  0x000000011d147e88: xor    %rax,%rdx
  0x000000011d147e8b: shr    $0x16,%rdx
  0x000000011d147e8f: cmp    $0x0,%rdx
  0x000000011d147e93: jne    0x000000011d1480db  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x000000011d147e99: mov    0x78(%rsp),%ebx
  0x000000011d147e9d: cmp    $0x7,%ebx
  0x000000011d147ea0: jge    0x000000011d147eb3  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 638)

  0x000000011d147ea6: mov    0x80(%rsp),%rax
  0x000000011d147eae: jmpq   0x000000011d147edc  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 648)

  0x000000011d147eb3: mov    0x68(%rsp),%rbx
  0x000000011d147eb8: mov    0x40(%rsp),%ecx
  0x000000011d147ebc: mov    %rbx,%rdx
  0x000000011d147ebf: mov    0x58(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 639)

  0x000000011d147ec4: data16 xchg %ax,%ax
  0x000000011d147ec7: callq  0x000000011c5c8d00  ; ImmutableOopMap{[88]=Oop [80]=Oop [128]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 639)
                                                ;   {optimized virtual_call}
  0x000000011d147ecc: mov    0x80(%rsp),%rax
  0x000000011d147ed4: jmpq   0x000000011d147edc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172 (line 639)

  0x000000011d147ed9: mov    %rdi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101 (line 631)

  0x000000011d147edc: cmp    $0x0,%rax
  0x000000011d147ee0: jne    0x000000011d147f0f  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224 (line 648)

  0x000000011d147ee6: mov    0x58(%rsp),%rsi
  0x000000011d147eeb: mov    0x18(%rsi),%edx    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261 (line 656)

  0x000000011d147eee: inc    %edx
  0x000000011d147ef0: mov    %edx,0x18(%rsi)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266 (line 656)

  0x000000011d147ef3: mov    0x14(%rsi),%edx    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271 (line 657)

  0x000000011d147ef6: inc    %edx
  0x000000011d147ef8: mov    %edx,0x14(%rsi)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277 (line 657)

  0x000000011d147efb: mov    0x1c(%rsi),%edi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281 (line 657)

  0x000000011d147efe: cmp    %edi,%edx
  0x000000011d147f00: jg     0x000000011d147f9f  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284 (line 657)

  0x000000011d147f06: mov    0x60(%rsp),%edi
  0x000000011d147f0a: jmpq   0x000000011d147fb5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292 (line 659)

  0x000000011d147f0f: mov    0x44(%rsp),%r9d
  0x000000011d147f14: mov    0x58(%rsp),%rsi
  0x000000011d147f19: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x000000011d1480f3
  0x000000011d147f1c: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 649)

  0x000000011d147f20: cmp    $0x0,%r9d
  0x000000011d147f24: je     0x000000011d147f34  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236 (line 650)

  0x000000011d147f2a: cmp    $0x0,%rdi
  0x000000011d147f2e: jne    0x000000011d147f66  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241 (line 650)

  0x000000011d147f34: mov    0x50(%rsp),%r8
  0x000000011d147f39: movsbl 0x30(%r15),%edx
  0x000000011d147f3e: cmp    $0x0,%edx
  0x000000011d147f41: jne    0x000000011d1480f8
  0x000000011d147f47: mov    %r8,%r10
  0x000000011d147f4a: shr    $0x3,%r10
  0x000000011d147f4e: mov    %r10d,0x14(%rax)
  0x000000011d147f52: mov    %rax,%rdx
  0x000000011d147f55: xor    %r8,%rdx
  0x000000011d147f58: shr    $0x16,%rdx
  0x000000011d147f5c: cmp    $0x0,%rdx
  0x000000011d147f60: jne    0x000000011d148117  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247 (line 651)

  0x000000011d147f66: mov    %rdi,0x90(%rsp)
  0x000000011d147f6e: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 652)

  0x000000011d147f71: nopl   0x0(%rax)
  0x000000011d147f75: movabs $0xffffffffffffffff,%rax
  0x000000011d147f7f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 652)
                                                ;   {virtual_call}
  0x000000011d147f84: mov    0x90(%rsp),%rax
  0x000000011d147f8c: add    $0xa0,%rsp
  0x000000011d147f93: pop    %rbp
  0x000000011d147f94: mov    0x108(%r15),%r10
  0x000000011d147f9b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d147f9e: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258 (line 653)

  0x000000011d147f9f: mov    %rsi,%rdi
  0x000000011d147fa2: mov    %rdi,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)

  0x000000011d147fa5: xchg   %ax,%ax
  0x000000011d147fa7: callq  0x000000011c5c8d00  ; ImmutableOopMap{[88]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)
                                                ;   {optimized virtual_call}
  0x000000011d147fac: mov    0x60(%rsp),%edi
  0x000000011d147fb0: mov    0x58(%rsp),%rsi
  0x000000011d147fb5: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)

  0x000000011d147fb8: nopl   0x0(%rax,%rax,1)
  0x000000011d147fbd: movabs $0xffffffffffffffff,%rax
  0x000000011d147fc7: callq  0x000000011c5c8f80  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)
                                                ;   {virtual_call}
  0x000000011d147fcc: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011d147fd6: add    $0xa0,%rsp
  0x000000011d147fdd: pop    %rbp
  0x000000011d147fde: mov    0x108(%r15),%r10
  0x000000011d147fe5: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d147fe8: retq   
  0x000000011d147fe9: movabs $0x14f6cc228,%r10  ;   {metadata({method} {0x000000014f6cc228} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011d147ff3: mov    %r10,0x8(%rsp)
  0x000000011d147ff8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d148000: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop [88]=Oop rcx=Oop [72]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 623)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d148005: jmpq   0x000000011d147adf
  0x000000011d14800a: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop [88]=Oop rcx=Oop [72]=Oop r8=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14800f: callq  0x000000011c68cf20  ; ImmutableOopMap{[80]=Oop [72]=Oop [88]=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d148014: callq  0x000000011c68cf20  ; ImmutableOopMap{[80]=Oop [72]=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d148019: callq  0x000000011c68cf20  ; ImmutableOopMap{[80]=Oop [72]=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14801e: mov    %rax,(%rsp)
  0x000000011d148022: mov    %rbx,0x8(%rsp)
  0x000000011d148027: callq  0x000000011c68c920  ; ImmutableOopMap{[80]=Oop [72]=Oop [88]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14802c: mov    %rdx,(%rsp)
  0x000000011d148030: mov    %rbx,0x8(%rsp)
  0x000000011d148035: callq  0x000000011c68c920  ; ImmutableOopMap{[88]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14803a: callq  0x000000011c68cf20  ; ImmutableOopMap{[88]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14803f: mov    %rax,(%rsp)
  0x000000011d148043: callq  0x000000011c68eca0  ; ImmutableOopMap{[88]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011d148048: mov    (%rdx),%esi
  0x000000011d14804a: shl    $0x3,%rsi
  0x000000011d14804e: cmp    $0x0,%rsi
  0x000000011d148052: je     0x000000011d147c24
  0x000000011d148058: mov    %rsi,(%rsp)
  0x000000011d14805c: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d148061: jmpq   0x000000011d147c24
  0x000000011d148066: cmp    $0x0,%rax
  0x000000011d14806a: je     0x000000011d147c42
  0x000000011d148070: mov    %rdx,(%rsp)
  0x000000011d148074: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d148079: jmpq   0x000000011d147c42
  0x000000011d14807e: callq  0x000000011c68cf20  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d148083: mov    %rdi,(%rsp)
  0x000000011d148087: callq  0x000000011c68eea0  ; ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 633)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011d14808c: callq  0x000000011c68cf20  ; ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop rsi=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d148091: callq  0x000000011c68cf20  ; ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop rdi=Oop rcx=Oop [72]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d148096: callq  0x000000011c68cf20  ; ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop rcx=Oop [72]=Oop rax=Oop [128]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14809b: movabs $0x14f6cc228,%r10  ;   {metadata({method} {0x000000014f6cc228} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011d1480a5: mov    %r10,0x8(%rsp)
  0x000000011d1480aa: movq   $0xdb,(%rsp)
  0x000000011d1480b2: callq  0x000000011c691600  ; ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1480b7: jmpq   0x000000011d147dfd
  0x000000011d1480bc: mov    0x18(%rdi),%edx
  0x000000011d1480bf: shl    $0x3,%rdx
  0x000000011d1480c3: cmp    $0x0,%rdx
  0x000000011d1480c7: je     0x000000011d147e7a
  0x000000011d1480cd: mov    %rdx,(%rsp)
  0x000000011d1480d1: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d1480d6: jmpq   0x000000011d147e7a
  0x000000011d1480db: cmp    $0x0,%rax
  0x000000011d1480df: je     0x000000011d147e99
  0x000000011d1480e5: mov    %rdi,(%rsp)
  0x000000011d1480e9: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d1480ee: jmpq   0x000000011d147e99
  0x000000011d1480f3: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop [88]=Oop [80]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 649)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d1480f8: mov    0x14(%rax),%edx
  0x000000011d1480fb: shl    $0x3,%rdx
  0x000000011d1480ff: cmp    $0x0,%rdx
  0x000000011d148103: je     0x000000011d147f47
  0x000000011d148109: mov    %rdx,(%rsp)
  0x000000011d14810d: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d148112: jmpq   0x000000011d147f47
  0x000000011d148117: cmp    $0x0,%r8
  0x000000011d14811b: je     0x000000011d147f66
  0x000000011d148121: mov    %rax,(%rsp)
  0x000000011d148125: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14812a: jmpq   0x000000011d147f66
  0x000000011d14812f: nop
  0x000000011d148130: nop
  0x000000011d148131: mov    0x420(%r15),%rax
  0x000000011d148138: movabs $0x0,%r10
  0x000000011d148142: mov    %r10,0x420(%r15)
  0x000000011d148149: movabs $0x0,%r10
  0x000000011d148153: mov    %r10,0x428(%r15)
  0x000000011d14815a: add    $0xa0,%rsp
  0x000000011d148161: pop    %rbp
  0x000000011d148162: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d148167: hlt    
  0x000000011d148168: hlt    
  0x000000011d148169: hlt    
  0x000000011d14816a: hlt    
  0x000000011d14816b: hlt    
  0x000000011d14816c: hlt    
  0x000000011d14816d: hlt    
  0x000000011d14816e: hlt    
  0x000000011d14816f: hlt    
  0x000000011d148170: hlt    
  0x000000011d148171: hlt    
  0x000000011d148172: hlt    
  0x000000011d148173: hlt    
  0x000000011d148174: hlt    
  0x000000011d148175: hlt    
  0x000000011d148176: hlt    
  0x000000011d148177: hlt    
  0x000000011d148178: hlt    
  0x000000011d148179: hlt    
  0x000000011d14817a: hlt    
  0x000000011d14817b: hlt    
  0x000000011d14817c: hlt    
  0x000000011d14817d: hlt    
  0x000000011d14817e: hlt    
  0x000000011d14817f: hlt    
[Stub Code]
  0x000000011d148180: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d148185: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14818f: jmpq   0x000000011d14818f  ;   {runtime_call}
  0x000000011d148194: nop
  0x000000011d148195: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14819f: jmpq   0x000000011d14819f  ;   {runtime_call}
  0x000000011d1481a4: nop
  0x000000011d1481a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1481af: jmpq   0x000000011d1481af  ;   {runtime_call}
  0x000000011d1481b4: nop
  0x000000011d1481b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1481bf: jmpq   0x000000011d1481bf  ;   {runtime_call}
  0x000000011d1481c4: nop
  0x000000011d1481c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1481cf: jmpq   0x000000011d1481cf  ;   {runtime_call}
  0x000000011d1481d4: nop
  0x000000011d1481d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1481df: jmpq   0x000000011d1481df  ;   {runtime_call}
  0x000000011d1481e4: nop
  0x000000011d1481e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1481ef: jmpq   0x000000011d1481ef  ;   {runtime_call}
  0x000000011d1481f4: nop
  0x000000011d1481f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1481ff: jmpq   0x000000011d1481ff  ;   {runtime_call}
  0x000000011d148204: nop
  0x000000011d148205: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14820f: jmpq   0x000000011d14820f  ;   {runtime_call}
  0x000000011d148214: nop
  0x000000011d148215: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14821f: jmpq   0x000000011d14821f  ;   {runtime_call}
[Exception Handler]
  0x000000011d148224: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d148229: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d148233: and    $0xfffffffffffffff0,%rsp
  0x000000011d148237: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14823c: hlt    
[Deopt Handler Code]
  0x000000011d14823d: movabs $0x11d14823d,%r10  ;   {section_word}
  0x000000011d148247: push   %r10
  0x000000011d148249: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14824e: hlt    
  0x000000011d14824f: hlt    

ImmutableOopMap{[80]=Oop [72]=Oop [88]=Oop }pc offsets: 172 
ImmutableOopMap{[88]=Oop [104]=Oop }pc offsets: 276 
ImmutableOopMap{[88]=Oop [80]=Oop [112]=Oop [72]=Oop [104]=Oop }pc offsets: 548 
ImmutableOopMap{[88]=Oop [80]=Oop }pc offsets: 732 
ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop [128]=Oop }pc offsets: 844 900 
ImmutableOopMap{[88]=Oop [80]=Oop [128]=Oop [104]=Oop [136]=Oop }pc offsets: 996 
ImmutableOopMap{[88]=Oop [80]=Oop [128]=Oop }pc offsets: 1100 
ImmutableOopMap{[144]=Oop }pc offsets: 1284 
ImmutableOopMap{[88]=Oop }pc offsets: 1324 
ImmutableOopMap{}pc offsets: 1356 
ImmutableOopMap{rsi=Oop [88]=Oop rcx=Oop [72]=Oop r8=Oop }pc offsets: 1413 
ImmutableOopMap{rsi=Oop [88]=Oop rcx=Oop [72]=Oop r8=Oop rbx=Oop }pc offsets: 1423 
ImmutableOopMap{[80]=Oop [72]=Oop [88]=Oop rdx=Oop }pc offsets: 1428 
ImmutableOopMap{[80]=Oop [72]=Oop [88]=Oop rbx=Oop }pc offsets: 1433 1438 1452 
ImmutableOopMap{[88]=Oop rax=Oop rbx=Oop }pc offsets: 1466 1471 1480 
ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop [72]=Oop rbx=Oop }pc offsets: 1539 
ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop }pc offsets: 1548 
ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop rsi=Oop }pc offsets: 1553 
ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop rdi=Oop rcx=Oop [72]=Oop }pc offsets: 1558 
ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop rcx=Oop [72]=Oop rax=Oop [128]=Oop }pc offsets: 1563 
ImmutableOopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop [128]=Oop }pc offsets: 1591 
ImmutableOopMap{rsi=Oop [88]=Oop [80]=Oop rax=Oop }pc offsets: 1656 ----------------------------------------------------------------------
java/lang/Object.hashCode()I  [0x0000000124372240, 0x0000000124372450]  528 bytes
[Entry Point]
  # {method} {0x000000014f5a4788} 'hashCode' '()I' in 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x0000000124372240: mov    0x8(%rsi),%r10d
  0x0000000124372244: movabs $0x800000000,%r12
  0x000000012437224e: add    %r12,%r10
  0x0000000124372251: xor    %r12,%r12
  0x0000000124372254: cmp    %r10,%rax
  0x0000000124372257: je     0x0000000124372268
  0x000000012437225d: jmpq   0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x0000000124372262: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000124372268: mov    (%rsi),%rax
  0x000000012437226b: test   $0x1,%rax
  0x0000000124372271: je     0x0000000124372295
  0x0000000124372277: test   $0x4,%rax
  0x000000012437227d: jne    0x0000000124372295
  0x0000000124372283: shr    $0x8,%rax
  0x0000000124372287: and    $0x7fffffff,%rax
  0x000000012437228e: je     0x0000000124372295
  0x0000000124372294: retq   
  0x0000000124372295: mov    %eax,-0x14000(%rsp)
  0x000000012437229c: push   %rbp
  0x000000012437229d: mov    %rsp,%rbp
  0x00000001243722a0: sub    $0x40,%rsp
  0x00000001243722a4: mov    %rsi,(%rsp)
  0x00000001243722a8: cmp    $0x0,%rsi
  0x00000001243722ac: lea    (%rsp),%rsi
  0x00000001243722b0: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00000001243722b5: vzeroupper 
  0x00000001243722b8: movabs $0x1243722b5,%r10  ;   {internal_word}
  0x00000001243722c2: mov    %r10,0x328(%r15)
  0x00000001243722c9: mov    %rsp,0x320(%r15)
  0x00000001243722d0: cmpb   $0x0,-0x151b81fd(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x00000001243722d7: je     0x000000012437230f
  0x00000001243722dd: push   %rsi
  0x00000001243722de: movabs $0x14f5a4788,%rsi  ;   {metadata({method} {0x000000014f5a4788} 'hashCode' '()I' in 'java/lang/Object')}
  0x00000001243722e8: mov    %r15,%rdi
  0x00000001243722eb: test   $0xf,%esp
  0x00000001243722f1: je     0x0000000124372309
  0x00000001243722f7: sub    $0x8,%rsp
  0x00000001243722fb: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000124372300: add    $0x8,%rsp
  0x0000000124372304: jmpq   0x000000012437230e
  0x0000000124372309: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000012437230e: pop    %rsi
  0x000000012437230f: lea    0x340(%r15),%rdi
  0x0000000124372316: movl   $0x4,0x3b8(%r15)
  0x0000000124372321: callq  0x000000010ec2ae1b  ;   {runtime_call JVM_IHashCode}
  0x0000000124372326: vzeroupper 
  0x0000000124372329: movl   $0x5,0x3b8(%r15)
  0x0000000124372334: lock addl $0x0,-0x40(%rsp)
  0x000000012437233a: testb  $0x8,0x108(%r15)
  0x0000000124372342: jne    0x0000000124372359
  0x0000000124372348: cmpl   $0x0,0xd8(%r15)
  0x0000000124372353: je     0x000000012437237d
  0x0000000124372359: vzeroupper 
  0x000000012437235c: mov    %rax,-0x8(%rbp)
  0x0000000124372360: mov    %r15,%rdi
  0x0000000124372363: mov    %rsp,%r12
  0x0000000124372366: sub    $0x0,%rsp
  0x000000012437236a: and    $0xfffffffffffffff0,%rsp
  0x000000012437236e: callq  0x000000010ef71148  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000124372373: mov    %r12,%rsp
  0x0000000124372376: xor    %r12,%r12
  0x0000000124372379: mov    -0x8(%rbp),%rax
  0x000000012437237d: movl   $0x8,0x3b8(%r15)
  0x0000000124372388: cmpl   $0x2,0x408(%r15)
  0x0000000124372393: je     0x0000000124372429
  0x0000000124372399: cmpb   $0x0,-0x151b82c6(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x00000001243723a0: je     0x00000001243723de
  0x00000001243723a6: mov    %rax,-0x8(%rbp)
  0x00000001243723aa: movabs $0x14f5a4788,%rsi  ;   {metadata({method} {0x000000014f5a4788} 'hashCode' '()I' in 'java/lang/Object')}
  0x00000001243723b4: mov    %r15,%rdi
  0x00000001243723b7: test   $0xf,%esp
  0x00000001243723bd: je     0x00000001243723d5
  0x00000001243723c3: sub    $0x8,%rsp
  0x00000001243723c7: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00000001243723cc: add    $0x8,%rsp
  0x00000001243723d0: jmpq   0x00000001243723da
  0x00000001243723d5: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00000001243723da: mov    -0x8(%rbp),%rax
  0x00000001243723de: movabs $0x0,%r10
  0x00000001243723e8: mov    %r10,0x320(%r15)
  0x00000001243723ef: movabs $0x0,%r10
  0x00000001243723f9: mov    %r10,0x328(%r15)
  0x0000000124372400: vzeroupper 
  0x0000000124372403: mov    0xe0(%r15),%rcx
  0x000000012437240a: movl   $0x0,0x100(%rcx)
  0x0000000124372414: leaveq 
  0x0000000124372415: cmpq   $0x0,0x8(%r15)
  0x000000012437241d: jne    0x0000000124372424
  0x0000000124372423: retq   
  0x0000000124372424: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x0000000124372429: vzeroupper 
  0x000000012437242c: mov    %rax,-0x8(%rbp)
  0x0000000124372430: mov    %rsp,%r12
  0x0000000124372433: sub    $0x0,%rsp
  0x0000000124372437: and    $0xfffffffffffffff0,%rsp
  0x000000012437243b: callq  0x000000010ee99586  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000000124372440: mov    %r12,%rsp
  0x0000000124372443: xor    %r12,%r12
  0x0000000124372446: mov    -0x8(%rbp),%rax
  0x000000012437244a: jmpq   0x0000000124372399
  0x000000012437244f: hlt    
Compiled method (c1)     157   42       2       java.lang.String::length (11 bytes)
 total in heap  [0x000000011d147410,0x000000011d1477b0] = 928
 relocation     [0x000000011d147588,0x000000011d1475b0] = 40
 main code      [0x000000011d1475c0,0x000000011d1476a0] = 224
 stub code      [0x000000011d1476a0,0x000000011d1476d0] = 48
 metadata       [0x000000011d1476d0,0x000000011d1476e0] = 16
 scopes data    [0x000000011d1476e0,0x000000011d147718] = 56
 scopes pcs     [0x000000011d147718,0x000000011d147798] = 128
 dependencies   [0x000000011d147798,0x000000011d1477a0] = 8
 nul chk table  [0x000000011d1477a0,0x000000011d1477b0] = 16
----------------------------------------------------------------------
java/lang/String.length()I  [0x000000011d1475c0, 0x000000011d1476d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f5a9330} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000011d1475c0: mov    0x8(%rsi),%r10d
  0x000000011d1475c4: movabs $0x800000000,%r12
  0x000000011d1475ce: add    %r12,%r10
  0x000000011d1475d1: xor    %r12,%r12
  0x000000011d1475d4: cmp    %rax,%r10
  0x000000011d1475d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1475dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d1475e0: mov    %eax,-0x14000(%rsp)
  0x000000011d1475e7: push   %rbp
  0x000000011d1475e8: sub    $0x30,%rsp
  0x000000011d1475ec: movabs $0x14f7292e0,%rcx
  0x000000011d1475f6: mov    0x18(%rcx),%eax
  0x000000011d1475f9: add    $0x8,%eax
  0x000000011d1475fc: mov    %eax,0x18(%rcx)
  0x000000011d1475ff: and    $0x3ff8,%eax
  0x000000011d147605: cmp    $0x0,%eax
  0x000000011d147608: je     0x000000011d147634  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@0 (line 658)

  0x000000011d14760e: mov    0xc(%rsi),%ecx
  0x000000011d147611: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)

  0x000000011d147615: mov    0xc(%rcx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; implicit exception: dispatches to 0x000000011d147652
  0x000000011d147618: movsbl 0x14(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)

  0x000000011d14761c: shl    $0x18,%ecx
  0x000000011d14761f: sar    $0x18,%ecx
  0x000000011d147622: sar    %cl,%eax
  0x000000011d147624: add    $0x30,%rsp
  0x000000011d147628: pop    %rbp
  0x000000011d147629: mov    0x108(%r15),%r10
  0x000000011d147630: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d147633: retq   
  0x000000011d147634: movabs $0x14f5a9330,%r10  ;   {metadata({method} {0x000000014f5a9330} 'length' '()I' in 'java/lang/String')}
  0x000000011d14763e: mov    %r10,0x8(%rsp)
  0x000000011d147643: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14764b: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d147650: jmp    0x000000011d14760e
  0x000000011d147652: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d147657: nop
  0x000000011d147658: nop
  0x000000011d147659: mov    0x420(%r15),%rax
  0x000000011d147660: movabs $0x0,%r10
  0x000000011d14766a: mov    %r10,0x420(%r15)
  0x000000011d147671: movabs $0x0,%r10
  0x000000011d14767b: mov    %r10,0x428(%r15)
  0x000000011d147682: add    $0x30,%rsp
  0x000000011d147686: pop    %rbp
  0x000000011d147687: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14768c: hlt    
  0x000000011d14768d: hlt    
  0x000000011d14768e: hlt    
  0x000000011d14768f: hlt    
  0x000000011d147690: hlt    
  0x000000011d147691: hlt    
  0x000000011d147692: hlt    
  0x000000011d147693: hlt    
  0x000000011d147694: hlt    
  0x000000011d147695: hlt    
  0x000000011d147696: hlt    
  0x000000011d147697: hlt    
  0x000000011d147698: hlt    
  0x000000011d147699: hlt    
  0x000000011d14769a: hlt    
  0x000000011d14769b: hlt    
  0x000000011d14769c: hlt    
  0x000000011d14769d: hlt    
  0x000000011d14769e: hlt    
  0x000000011d14769f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d1476a0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d1476a5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d1476af: and    $0xfffffffffffffff0,%rsp
  0x000000011d1476b3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d1476b8: hlt    
[Deopt Handler Code]
  0x000000011d1476b9: movabs $0x11d1476b9,%r10  ;   {section_word}
  0x000000011d1476c3: push   %r10
  0x000000011d1476c5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d1476ca: hlt    
  0x000000011d1476cb: hlt    
  0x000000011d1476cc: hlt    
  0x000000011d1476cd: hlt    
  0x000000011d1476ce: hlt    
  0x000000011d1476cf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 144 151 Compiled method (c1)     159   38       2       java.util.concurrent.ConcurrentHashMap$Node::<init> (20 bytes)
 total in heap  [0x000000011d146f90,0x000000011d1473c8] = 1080
 relocation     [0x000000011d147108,0x000000011d147138] = 48
 main code      [0x000000011d147140,0x000000011d1472e0] = 416
 stub code      [0x000000011d1472e0,0x000000011d147310] = 48
 metadata       [0x000000011d147310,0x000000011d147320] = 16
 scopes data    [0x000000011d147320,0x000000011d147350] = 48
 scopes pcs     [0x000000011d147350,0x000000011d1473c0] = 112
 dependencies   [0x000000011d1473c0,0x000000011d1473c8] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap$Node.<init>(ILjava/lang/Object;Ljava/lang/Object;)V  [0x000000011d147140, 0x000000011d147310]  464 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6e8828} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap$Node'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011d147140: mov    0x8(%rsi),%r10d
  0x000000011d147144: movabs $0x800000000,%r12
  0x000000011d14714e: add    %r12,%r10
  0x000000011d147151: xor    %r12,%r12
  0x000000011d147154: cmp    %rax,%r10
  0x000000011d147157: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14715d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d147160: mov    %eax,-0x14000(%rsp)
  0x000000011d147167: push   %rbp
  0x000000011d147168: sub    $0x30,%rsp
  0x000000011d14716c: movabs $0x14f700508,%rdi
  0x000000011d147176: mov    0x18(%rdi),%ebx
  0x000000011d147179: add    $0x8,%ebx
  0x000000011d14717c: mov    %ebx,0x18(%rdi)
  0x000000011d14717f: and    $0x3ff8,%ebx
  0x000000011d147185: cmp    $0x0,%ebx
  0x000000011d147188: je     0x000000011d147201  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@0 (line 631)

  0x000000011d14718e: mov    %edx,0xc(%rsi)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 632)

  0x000000011d147191: movsbl 0x30(%r15),%edi
  0x000000011d147196: cmp    $0x0,%edi
  0x000000011d147199: jne    0x000000011d147222
  0x000000011d14719f: mov    %rcx,%r10
  0x000000011d1471a2: shr    $0x3,%r10
  0x000000011d1471a6: mov    %r10d,0x10(%rsi)
  0x000000011d1471aa: mov    %rsi,%rdi
  0x000000011d1471ad: xor    %rcx,%rdi
  0x000000011d1471b0: shr    $0x16,%rdi
  0x000000011d1471b4: cmp    $0x0,%rdi
  0x000000011d1471b8: jne    0x000000011d147241  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@11 (line 633)

  0x000000011d1471be: movsbl 0x30(%r15),%edi
  0x000000011d1471c3: cmp    $0x0,%edi
  0x000000011d1471c6: jne    0x000000011d147259
  0x000000011d1471cc: mov    %r8,%r10
  0x000000011d1471cf: shr    $0x3,%r10
  0x000000011d1471d3: mov    %r10d,0x14(%rsi)
  0x000000011d1471d7: lock addl $0x0,-0x40(%rsp)
  0x000000011d1471dd: mov    %rsi,%rdi
  0x000000011d1471e0: xor    %r8,%rdi
  0x000000011d1471e3: shr    $0x16,%rdi
  0x000000011d1471e7: cmp    $0x0,%rdi
  0x000000011d1471eb: jne    0x000000011d147278  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16 (line 634)

  0x000000011d1471f1: add    $0x30,%rsp
  0x000000011d1471f5: pop    %rbp
  0x000000011d1471f6: mov    0x108(%r15),%r10
  0x000000011d1471fd: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d147200: retq   
  0x000000011d147201: movabs $0x14f6e8828,%r10  ;   {metadata({method} {0x000000014f6e8828} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000000011d14720b: mov    %r10,0x8(%rsp)
  0x000000011d147210: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d147218: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1 (line 631)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14721d: jmpq   0x000000011d14718e
  0x000000011d147222: mov    0x10(%rsi),%edi
  0x000000011d147225: shl    $0x3,%rdi
  0x000000011d147229: cmp    $0x0,%rdi
  0x000000011d14722d: je     0x000000011d14719f
  0x000000011d147233: mov    %rdi,(%rsp)
  0x000000011d147237: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14723c: jmpq   0x000000011d14719f
  0x000000011d147241: cmp    $0x0,%rcx
  0x000000011d147245: je     0x000000011d1471be
  0x000000011d14724b: mov    %rsi,(%rsp)
  0x000000011d14724f: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d147254: jmpq   0x000000011d1471be
  0x000000011d147259: mov    0x14(%rsi),%edi
  0x000000011d14725c: shl    $0x3,%rdi
  0x000000011d147260: cmp    $0x0,%rdi
  0x000000011d147264: je     0x000000011d1471cc
  0x000000011d14726a: mov    %rdi,(%rsp)
  0x000000011d14726e: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d147273: jmpq   0x000000011d1471cc
  0x000000011d147278: cmp    $0x0,%r8
  0x000000011d14727c: je     0x000000011d1471f1
  0x000000011d147282: mov    %rsi,(%rsp)
  0x000000011d147286: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14728b: jmpq   0x000000011d1471f1
  0x000000011d147290: nop
  0x000000011d147291: nop
  0x000000011d147292: mov    0x420(%r15),%rax
  0x000000011d147299: movabs $0x0,%r10
  0x000000011d1472a3: mov    %r10,0x420(%r15)
  0x000000011d1472aa: movabs $0x0,%r10
  0x000000011d1472b4: mov    %r10,0x428(%r15)
  0x000000011d1472bb: add    $0x30,%rsp
  0x000000011d1472bf: pop    %rbp
  0x000000011d1472c0: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d1472c5: hlt    
  0x000000011d1472c6: hlt    
  0x000000011d1472c7: hlt    
  0x000000011d1472c8: hlt    
  0x000000011d1472c9: hlt    
  0x000000011d1472ca: hlt    
  0x000000011d1472cb: hlt    
  0x000000011d1472cc: hlt    
  0x000000011d1472cd: hlt    
  0x000000011d1472ce: hlt    
  0x000000011d1472cf: hlt    
  0x000000011d1472d0: hlt    
  0x000000011d1472d1: hlt    
  0x000000011d1472d2: hlt    
  0x000000011d1472d3: hlt    
  0x000000011d1472d4: hlt    
  0x000000011d1472d5: hlt    
  0x000000011d1472d6: hlt    
  0x000000011d1472d7: hlt    
  0x000000011d1472d8: hlt    
  0x000000011d1472d9: hlt    
  0x000000011d1472da: hlt    
  0x000000011d1472db: hlt    
  0x000000011d1472dc: hlt    
  0x000000011d1472dd: hlt    
  0x000000011d1472de: hlt    
  0x000000011d1472df: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d1472e0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d1472e5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d1472ef: and    $0xfffffffffffffff0,%rsp
  0x000000011d1472f3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d1472f8: hlt    
[Deopt Handler Code]
  0x000000011d1472f9: movabs $0x11d1472f9,%r10  ;   {section_word}
  0x000000011d147303: push   %r10
  0x000000011d147305: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14730a: hlt    
  0x000000011d14730b: hlt    
  0x000000011d14730c: hlt    
  0x000000011d14730d: hlt    
  0x000000011d14730e: hlt    
  0x000000011d14730f: hlt    

ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop }pc offsets: 221 Compiled method (c1)     162   34       2       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
 total in heap  [0x000000011d146c90,0x000000011d146f78] = 744
 relocation     [0x000000011d146e08,0x000000011d146e28] = 32
 main code      [0x000000011d146e40,0x000000011d146ee0] = 160
 stub code      [0x000000011d146ee0,0x000000011d146f10] = 48
 metadata       [0x000000011d146f10,0x000000011d146f18] = 8
 scopes data    [0x000000011d146f18,0x000000011d146f30] = 24
 scopes pcs     [0x000000011d146f30,0x000000011d146f70] = 64
 dependencies   [0x000000011d146f70,0x000000011d146f78] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.spread(I)I  [0x000000011d146e40, 0x000000011d146f10]  208 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6d72f8} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011d146e40: mov    %eax,-0x14000(%rsp)
  0x000000011d146e47: push   %rbp
  0x000000011d146e48: sub    $0x30,%rsp
  0x000000011d146e4c: movabs $0x14f6ffd68,%rax
  0x000000011d146e56: mov    0x18(%rax),%edi
  0x000000011d146e59: add    $0x8,%edi
  0x000000011d146e5c: mov    %edi,0x18(%rax)
  0x000000011d146e5f: and    $0x3ff8,%edi
  0x000000011d146e65: cmp    $0x0,%edi
  0x000000011d146e68: je     0x000000011d146e8d  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 697)

  0x000000011d146e6e: mov    %rsi,%rax
  0x000000011d146e71: shr    $0x10,%eax
  0x000000011d146e74: xor    %rsi,%rax
  0x000000011d146e77: and    $0x7fffffff,%eax
  0x000000011d146e7d: add    $0x30,%rsp
  0x000000011d146e81: pop    %rbp
  0x000000011d146e82: mov    0x108(%r15),%r10
  0x000000011d146e89: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d146e8c: retq   
  0x000000011d146e8d: movabs $0x14f6d72f8,%r10  ;   {metadata({method} {0x000000014f6d72f8} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d146e97: mov    %r10,0x8(%rsp)
  0x000000011d146e9c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d146ea4: callq  0x000000011c691600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d146ea9: jmp    0x000000011d146e6e
  0x000000011d146eab: nop
  0x000000011d146eac: nop
  0x000000011d146ead: mov    0x420(%r15),%rax
  0x000000011d146eb4: movabs $0x0,%r10
  0x000000011d146ebe: mov    %r10,0x420(%r15)
  0x000000011d146ec5: movabs $0x0,%r10
  0x000000011d146ecf: mov    %r10,0x428(%r15)
  0x000000011d146ed6: add    $0x30,%rsp
  0x000000011d146eda: pop    %rbp
  0x000000011d146edb: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
[Stub Code]
  0x000000011d146ee0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d146ee5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d146eef: and    $0xfffffffffffffff0,%rsp
  0x000000011d146ef3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d146ef8: hlt    
[Deopt Handler Code]
  0x000000011d146ef9: movabs $0x11d146ef9,%r10  ;   {section_word}
  0x000000011d146f03: push   %r10
  0x000000011d146f05: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d146f0a: hlt    
  0x000000011d146f0b: hlt    
  0x000000011d146f0c: hlt    
  0x000000011d146f0d: hlt    
  0x000000011d146f0e: hlt    
  0x000000011d146f0f: hlt    

ImmutableOopMap{}pc offsets: 105 Compiled method (c1)     164   36       2       java.util.concurrent.ConcurrentHashMap::addCount (289 bytes)
 total in heap  [0x000000011d145e90,0x000000011d146c50] = 3520
 relocation     [0x000000011d146008,0x000000011d146098] = 144
 main code      [0x000000011d1460a0,0x000000011d1464e0] = 1088
 stub code      [0x000000011d1464e0,0x000000011d146580] = 160
 metadata       [0x000000011d146580,0x000000011d146598] = 24
 scopes data    [0x000000011d146598,0x000000011d146808] = 624
 scopes pcs     [0x000000011d146808,0x000000011d146c28] = 1056
 dependencies   [0x000000011d146c28,0x000000011d146c30] = 8
 nul chk table  [0x000000011d146c30,0x000000011d146c50] = 32
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.addCount(JI)V  [0x000000011d1460a0, 0x000000011d146580]  1248 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6dbf90} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = long
  # parm1:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x000000011d1460a0: mov    0x8(%rsi),%r10d
  0x000000011d1460a4: movabs $0x800000000,%r12
  0x000000011d1460ae: add    %r12,%r10
  0x000000011d1460b1: xor    %r12,%r12
  0x000000011d1460b4: cmp    %rax,%r10
  0x000000011d1460b7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1460bd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d1460c0: mov    %eax,-0x14000(%rsp)
  0x000000011d1460c7: push   %rbp
  0x000000011d1460c8: sub    $0xb0,%rsp
  0x000000011d1460cf: mov    %rsi,0x88(%rsp)
  0x000000011d1460d7: mov    %ecx,0x74(%rsp)
  0x000000011d1460db: movabs $0x14f7005f8,%rax
  0x000000011d1460e5: mov    0x18(%rax),%ebx
  0x000000011d1460e8: add    $0x8,%ebx
  0x000000011d1460eb: mov    %ebx,0x18(%rax)
  0x000000011d1460ee: and    $0x3ff8,%ebx
  0x000000011d1460f4: cmp    $0x0,%ebx
  0x000000011d1460f7: je     0x000000011d146437  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@0 (line 2318)

  0x000000011d1460fd: mov    0x30(%rsi),%edi
  0x000000011d146100: shl    $0x3,%rdi          ;*getfield counterCells {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@1 (line 2318)

  0x000000011d146104: cmp    $0x0,%rdi
  0x000000011d146108: jne    0x000000011d146143  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@7 (line 2318)

  0x000000011d14610e: vmovsd 0x18(%rsi),%xmm0
  0x000000011d146113: vmovq  %xmm0,%rax         ;*getfield baseCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@18 (line 2318)

  0x000000011d146118: mov    %rax,%r8
  0x000000011d14611b: add    %rdx,%r8
  0x000000011d14611e: lea    0x18(%rsi),%r9
  0x000000011d146122: mov    %r8,%rbx
  0x000000011d146125: lock cmpxchg %rbx,(%r9)
  0x000000011d14612a: mov    $0x1,%ebx
  0x000000011d14612f: je     0x000000011d14613a
  0x000000011d146135: mov    $0x0,%ebx          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@31 (line 2319)

  0x000000011d14613a: cmp    $0x0,%ebx
  0x000000011d14613d: jne    0x000000011d14624b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@34 (line 2319)

  0x000000011d146143: cmp    $0x0,%rdi
  0x000000011d146147: jne    0x000000011d146157  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@42 (line 2322)

  0x000000011d14614d: mov    $0x1,%edi
  0x000000011d146152: jmpq   0x000000011d146416  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x000000011d146157: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2322)
                                                ; implicit exception: dispatches to 0x000000011d146458
  0x000000011d14615a: dec    %ebx
  0x000000011d14615c: cmp    $0x0,%ebx
  0x000000011d14615f: jge    0x000000011d14616f  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@53 (line 2322)

  0x000000011d146165: mov    $0x1,%edi
  0x000000011d14616a: jmpq   0x000000011d146416  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x000000011d14616f: mov    %ebx,0x70(%rsp)
  0x000000011d146173: mov    %rdi,0x78(%rsp)
  0x000000011d146178: mov    %rdx,0x80(%rsp)
  0x000000011d146180: nopl   0x0(%rax)
  0x000000011d146187: callq  0x000000011c5c9200  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*invokestatic getProbe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@58 (line 2323)
                                                ;   {static_call}
  0x000000011d14618c: and    0x70(%rsp),%eax
  0x000000011d146190: mov    0x78(%rsp),%rdi
  0x000000011d146195: cmp    0xc(%rdi),%eax
  0x000000011d146198: jae    0x000000011d14645d
  0x000000011d14619e: movslq %eax,%rax
  0x000000011d1461a1: mov    0x10(%rdi,%rax,4),%eax
  0x000000011d1461a5: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2323)

  0x000000011d1461a9: cmp    $0x0,%rax
  0x000000011d1461ad: jne    0x000000011d1461cd  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@68 (line 2323)

  0x000000011d1461b3: mov    $0x1,%edi
  0x000000011d1461b8: mov    0x80(%rsp),%rdx
  0x000000011d1461c0: mov    0x88(%rsp),%rsi
  0x000000011d1461c8: jmpq   0x000000011d146416  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x000000011d1461cd: mov    0x80(%rsp),%rdx
  0x000000011d1461d5: vmovsd 0x90(%rax),%xmm0   ; implicit exception: dispatches to 0x000000011d14646b
  0x000000011d1461dd: vmovq  %xmm0,%rbx         ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2323)

  0x000000011d1461e2: mov    %rbx,%rsi
  0x000000011d1461e5: add    %rdx,%rsi
  0x000000011d1461e8: lea    0x90(%rax),%rdi
  0x000000011d1461ef: mov    %rbx,%rax
  0x000000011d1461f2: mov    %rsi,%rbx
  0x000000011d1461f5: lock cmpxchg %rbx,(%rdi)
  0x000000011d1461fa: mov    $0x1,%esi
  0x000000011d1461ff: je     0x000000011d14620a
  0x000000011d146205: mov    $0x0,%esi          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@91 (line 2325)

  0x000000011d14620a: cmp    $0x0,%esi
  0x000000011d14620d: jne    0x000000011d146223  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@97 (line 2325)

  0x000000011d146213: mov    %rsi,%rdi
  0x000000011d146216: mov    0x88(%rsp),%rsi
  0x000000011d14621e: jmpq   0x000000011d146416  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x000000011d146223: mov    0x74(%rsp),%ecx
  0x000000011d146227: cmp    $0x1,%ecx
  0x000000011d14622a: jle    0x000000011d146403  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@110 (line 2329)

  0x000000011d146230: mov    0x88(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2331)

  0x000000011d146238: nopl   0x0(%rax)
  0x000000011d14623f: callq  0x000000011c5c8d00  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2331)
                                                ;   {optimized virtual_call}
  0x000000011d146244: mov    %rax,%r8           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@120 (line 2333)

  0x000000011d146247: mov    0x74(%rsp),%ecx
  0x000000011d14624b: cmp    $0x0,%ecx
  0x000000011d14624e: jl     0x000000011d1463f0  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@121 (line 2333)

  0x000000011d146254: nopl   0x0(%rax)
  0x000000011d146258: mov    0x88(%rsp),%rsi
  0x000000011d146260: mov    0x14(%rsi),%edi    ;*getfield sizeCtl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@127 (line 2335)

  0x000000011d146263: movslq %edi,%rbx
  0x000000011d146266: cmp    %rbx,%r8
  0x000000011d146269: jl     0x000000011d1463f0  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@134 (line 2335)

  0x000000011d14626f: mov    0x28(%rsi),%ebx
  0x000000011d146272: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@139 (line 2335)

  0x000000011d146276: cmp    $0x0,%rbx
  0x000000011d14627a: je     0x000000011d1463f0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@145 (line 2335)

  0x000000011d146280: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2335)
                                                ; implicit exception: dispatches to 0x000000011d146470
  0x000000011d146283: cmp    $0x40000000,%eax
  0x000000011d146289: jge    0x000000011d1463f0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@156 (line 2335)

  0x000000011d14628f: mov    %rbx,0x98(%rsp)
  0x000000011d146297: mov    %edi,0x90(%rsp)
  0x000000011d14629e: mov    %rax,%rsi          ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)

  0x000000011d1462a1: nopw   0x0(%rax,%rax,1)
  0x000000011d1462a7: callq  0x000000011d146505  ; ImmutableOopMap{[136]=Oop [152]=Oop }
                                                ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)
                                                ;   {static_call}
  0x000000011d1462ac: or     $0x8000,%eax
  0x000000011d1462b2: mov    0x90(%rsp),%edi
  0x000000011d1462b9: cmp    $0x0,%edi
  0x000000011d1462bc: jge    0x000000011d146351  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@168 (line 2338)

  0x000000011d1462c2: mov    %rdi,%rdx
  0x000000011d1462c5: shr    $0x10,%edx
  0x000000011d1462c8: cmp    %eax,%edx
  0x000000011d1462ca: jne    0x000000011d1463f0  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@178 (line 2339)

  0x000000011d1462d0: mov    %rax,%rdx
  0x000000011d1462d3: inc    %edx
  0x000000011d1462d5: cmp    %edx,%edi
  0x000000011d1462d7: je     0x000000011d1463f0  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@187 (line 2339)

  0x000000011d1462dd: add    $0xffff,%eax
  0x000000011d1462e3: cmp    %eax,%edi
  0x000000011d1462e5: je     0x000000011d1463f0  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@197 (line 2339)

  0x000000011d1462eb: mov    0x88(%rsp),%rsi
  0x000000011d1462f3: mov    0x2c(%rsi),%ecx
  0x000000011d1462f6: shl    $0x3,%rcx          ;*getfield nextTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@201 (line 2339)

  0x000000011d1462fa: cmp    $0x0,%rcx
  0x000000011d1462fe: je     0x000000011d1463f0  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@207 (line 2339)

  0x000000011d146304: mov    0x20(%rsi),%eax    ;*getfield transferIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@211 (line 2339)

  0x000000011d146307: cmp    $0x0,%eax
  0x000000011d14630a: jle    0x000000011d1463f0  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@214 (line 2339)

  0x000000011d146310: mov    %rdi,%rdx
  0x000000011d146313: inc    %edx
  0x000000011d146315: lea    0x14(%rsi),%rbx
  0x000000011d146319: mov    %rdi,%rax
  0x000000011d14631c: lock cmpxchg %edx,(%rbx)
  0x000000011d146320: mov    $0x1,%edx
  0x000000011d146325: je     0x000000011d146330
  0x000000011d14632b: mov    $0x0,%edx          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@233 (line 2343)

  0x000000011d146330: cmp    $0x0,%edx
  0x000000011d146333: je     0x000000011d1463ac  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@236 (line 2343)

  0x000000011d146339: mov    0x98(%rsp),%rdx
  0x000000011d146341: mov    %rsi,%rdi
  0x000000011d146344: mov    %rdi,%rsi          ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244 (line 2344)

  0x000000011d146347: callq  0x000000011c5c8d00  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244 (line 2344)
                                                ;   {optimized virtual_call}
  0x000000011d14634c: jmpq   0x000000011d1463ac  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@247 (line 2344)

  0x000000011d146351: mov    0x88(%rsp),%rsi
  0x000000011d146359: shl    $0x10,%eax
  0x000000011d14635c: mov    %rax,%rdx
  0x000000011d14635f: add    $0x2,%edx
  0x000000011d146362: lea    0x14(%rsi),%rcx
  0x000000011d146366: mov    %rdi,%rax
  0x000000011d146369: lock cmpxchg %edx,(%rcx)
  0x000000011d14636d: mov    $0x1,%edx
  0x000000011d146372: je     0x000000011d14637d
  0x000000011d146378: mov    $0x0,%edx          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@266 (line 2346)

  0x000000011d14637d: cmp    $0x0,%edx
  0x000000011d146380: je     0x000000011d1463ac  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@269 (line 2346)

  0x000000011d146386: mov    0x98(%rsp),%rbx
  0x000000011d14638e: mov    %rbx,%rdx
  0x000000011d146391: movabs $0x0,%rcx          ;   {oop(NULL)}
  0x000000011d14639b: mov    %rsi,%rdi
  0x000000011d14639e: mov    %rdi,%rsi          ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2348)

  0x000000011d1463a1: nopw   0x0(%rax,%rax,1)
  0x000000011d1463a7: callq  0x000000011d146525  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2348)
                                                ;   {optimized virtual_call}
  0x000000011d1463ac: mov    0x88(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280 (line 2349)

  0x000000011d1463b4: data16 xchg %ax,%ax
  0x000000011d1463b7: callq  0x000000011d146535  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280 (line 2349)
                                                ;   {optimized virtual_call}
  0x000000011d1463bc: movabs $0x14f7005f8,%rdx
  0x000000011d1463c6: mov    0x1c(%rdx),%ecx
  0x000000011d1463c9: add    $0x8,%ecx
  0x000000011d1463cc: mov    %ecx,0x1c(%rdx)
  0x000000011d1463cf: and    $0x1fff8,%ecx
  0x000000011d1463d5: cmp    $0x0,%ecx
  0x000000011d1463d8: je     0x000000011d146475  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x000000011d1463de: mov    0x108(%r15),%r10   ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x000000011d1463e5: test   %eax,(%r10)        ;   {poll}
  0x000000011d1463e8: mov    %rax,%r8
  0x000000011d1463eb: jmpq   0x000000011d146258  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x000000011d1463f0: add    $0xb0,%rsp
  0x000000011d1463f7: pop    %rbp
  0x000000011d1463f8: mov    0x108(%r15),%r10
  0x000000011d1463ff: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d146402: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288 (line 2352)

  0x000000011d146403: add    $0xb0,%rsp
  0x000000011d14640a: pop    %rbp
  0x000000011d14640b: mov    0x108(%r15),%r10
  0x000000011d146412: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d146415: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@113 (line 2330)

  0x000000011d146416: mov    %rdi,%rcx          ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2326)

  0x000000011d146419: nopw   0x0(%rax,%rax,1)
  0x000000011d14641f: callq  0x000000011c5c8d00  ; ImmutableOopMap{}
                                                ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2326)
                                                ;   {optimized virtual_call}
  0x000000011d146424: add    $0xb0,%rsp
  0x000000011d14642b: pop    %rbp
  0x000000011d14642c: mov    0x108(%r15),%r10
  0x000000011d146433: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d146436: retq   
  0x000000011d146437: movabs $0x14f6dbf90,%r10  ;   {metadata({method} {0x000000014f6dbf90} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d146441: mov    %r10,0x8(%rsp)
  0x000000011d146446: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14644e: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@-1 (line 2318)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d146453: jmpq   0x000000011d1460fd
  0x000000011d146458: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop [136]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2322)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14645d: mov    %rax,(%rsp)
  0x000000011d146461: mov    %rdi,0x8(%rsp)
  0x000000011d146466: callq  0x000000011c68c920  ; ImmutableOopMap{[136]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2323)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14646b: callq  0x000000011c68cf20  ; ImmutableOopMap{[136]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2323)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d146470: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop [136]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2335)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d146475: movabs $0x14f6dbf90,%r10  ;   {metadata({method} {0x000000014f6dbf90} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000000011d14647f: mov    %r10,0x8(%rsp)
  0x000000011d146484: movq   $0x11d,(%rsp)
  0x000000011d14648c: callq  0x000000011c691600  ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d146491: jmpq   0x000000011d1463de
  0x000000011d146496: nop
  0x000000011d146497: nop
  0x000000011d146498: mov    0x420(%r15),%rax
  0x000000011d14649f: movabs $0x0,%r10
  0x000000011d1464a9: mov    %r10,0x420(%r15)
  0x000000011d1464b0: movabs $0x0,%r10
  0x000000011d1464ba: mov    %r10,0x428(%r15)
  0x000000011d1464c1: add    $0xb0,%rsp
  0x000000011d1464c8: pop    %rbp
  0x000000011d1464c9: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d1464ce: hlt    
  0x000000011d1464cf: hlt    
  0x000000011d1464d0: hlt    
  0x000000011d1464d1: hlt    
  0x000000011d1464d2: hlt    
  0x000000011d1464d3: hlt    
  0x000000011d1464d4: hlt    
  0x000000011d1464d5: hlt    
  0x000000011d1464d6: hlt    
  0x000000011d1464d7: hlt    
  0x000000011d1464d8: hlt    
  0x000000011d1464d9: hlt    
  0x000000011d1464da: hlt    
  0x000000011d1464db: hlt    
  0x000000011d1464dc: hlt    
  0x000000011d1464dd: hlt    
  0x000000011d1464de: hlt    
  0x000000011d1464df: hlt    
[Stub Code]
  0x000000011d1464e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d1464e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1464ef: jmpq   0x000000011d1464ef  ;   {runtime_call}
  0x000000011d1464f4: nop
  0x000000011d1464f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d1464ff: jmpq   0x000000011d1464ff  ;   {runtime_call}
  0x000000011d146504: nop
  0x000000011d146505: movabs $0x14f69e6f0,%rbx  ;   {static_stub}
  0x000000011d14650f: jmpq   0x000000011c5d2cdb  ;   {runtime_call I2C/C2I adapters}
  0x000000011d146514: nop
  0x000000011d146515: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14651f: jmpq   0x000000011d14651f  ;   {runtime_call}
  0x000000011d146524: nop
  0x000000011d146525: movabs $0x14f6dc950,%rbx  ;   {static_stub}
  0x000000011d14652f: jmpq   0x000000011c5d18e4  ;   {runtime_call I2C/C2I adapters}
  0x000000011d146534: nop
  0x000000011d146535: movabs $0x14f6dca60,%rbx  ;   {static_stub}
  0x000000011d14653f: jmpq   0x000000011c5c9a5c  ;   {runtime_call I2C/C2I adapters}
  0x000000011d146544: nop
  0x000000011d146545: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14654f: jmpq   0x000000011d14654f  ;   {runtime_call}
[Exception Handler]
  0x000000011d146554: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d146559: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d146563: and    $0xfffffffffffffff0,%rsp
  0x000000011d146567: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14656c: hlt    
[Deopt Handler Code]
  0x000000011d14656d: movabs $0x11d14656d,%r10  ;   {section_word}
  0x000000011d146577: push   %r10
  0x000000011d146579: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14657e: hlt    
  0x000000011d14657f: hlt    

ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 236 
ImmutableOopMap{[136]=Oop }pc offsets: 420 
ImmutableOopMap{[136]=Oop [152]=Oop }pc offsets: 524 
ImmutableOopMap{[136]=Oop }pc offsets: 684 780 796 837 
ImmutableOopMap{}pc offsets: 900 
ImmutableOopMap{rsi=Oop [136]=Oop }pc offsets: 947 
ImmutableOopMap{rsi=Oop [136]=Oop rdi=Oop }pc offsets: 957 
ImmutableOopMap{[136]=Oop rdi=Oop }pc offsets: 971 
ImmutableOopMap{[136]=Oop rax=Oop }pc offsets: 976 
ImmutableOopMap{rsi=Oop [136]=Oop rbx=Oop }pc offsets: 981 
ImmutableOopMap{[136]=Oop }pc offsets: 1009 Compiled method (c1)     173   52       2       java.util.HashMap$Node::<init> (26 bytes)
 total in heap  [0x000000011d14c110,0x000000011d14c5c0] = 1200
 relocation     [0x000000011d14c288,0x000000011d14c2b8] = 48
 main code      [0x000000011d14c2c0,0x000000011d14c4c0] = 512
 stub code      [0x000000011d14c4c0,0x000000011d14c4f0] = 48
 metadata       [0x000000011d14c4f0,0x000000011d14c500] = 16
 scopes data    [0x000000011d14c500,0x000000011d14c538] = 56
 scopes pcs     [0x000000011d14c538,0x000000011d14c5b8] = 128
 dependencies   [0x000000011d14c5b8,0x000000011d14c5c0] = 8
----------------------------------------------------------------------
java/util/HashMap$Node.<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V  [0x000000011d14c2c0, 0x000000011d14c4f0]  560 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f7e4990} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node'
  # this:     rsi:rsi   = 'java/util/HashMap$Node'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/util/HashMap$Node'
  #           [sp+0x40]  (sp of caller)
  0x000000011d14c2c0: mov    0x8(%rsi),%r10d
  0x000000011d14c2c4: movabs $0x800000000,%r12
  0x000000011d14c2ce: add    %r12,%r10
  0x000000011d14c2d1: xor    %r12,%r12
  0x000000011d14c2d4: cmp    %rax,%r10
  0x000000011d14c2d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14c2dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14c2e0: mov    %eax,-0x14000(%rsp)
  0x000000011d14c2e7: push   %rbp
  0x000000011d14c2e8: sub    $0x30,%rsp
  0x000000011d14c2ec: movabs $0x14f7e5108,%rdi
  0x000000011d14c2f6: mov    0x18(%rdi),%ebx
  0x000000011d14c2f9: add    $0x8,%ebx
  0x000000011d14c2fc: mov    %ebx,0x18(%rdi)
  0x000000011d14c2ff: and    $0x3ff8,%ebx
  0x000000011d14c305: cmp    $0x0,%ebx
  0x000000011d14c308: je     0x000000011d14c3a8  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@0 (line 285)

  0x000000011d14c30e: mov    %edx,0xc(%rsi)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@6 (line 286)

  0x000000011d14c311: movsbl 0x30(%r15),%edi
  0x000000011d14c316: cmp    $0x0,%edi
  0x000000011d14c319: jne    0x000000011d14c3c9
  0x000000011d14c31f: mov    %rcx,%r10
  0x000000011d14c322: shr    $0x3,%r10
  0x000000011d14c326: mov    %r10d,0x10(%rsi)
  0x000000011d14c32a: mov    %rsi,%rdi
  0x000000011d14c32d: xor    %rcx,%rdi
  0x000000011d14c330: shr    $0x16,%rdi
  0x000000011d14c334: cmp    $0x0,%rdi
  0x000000011d14c338: jne    0x000000011d14c3e8  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@11 (line 287)

  0x000000011d14c33e: movsbl 0x30(%r15),%edi
  0x000000011d14c343: cmp    $0x0,%edi
  0x000000011d14c346: jne    0x000000011d14c400
  0x000000011d14c34c: mov    %r8,%r10
  0x000000011d14c34f: shr    $0x3,%r10
  0x000000011d14c353: mov    %r10d,0x14(%rsi)
  0x000000011d14c357: mov    %rsi,%rdi
  0x000000011d14c35a: xor    %r8,%rdi
  0x000000011d14c35d: shr    $0x16,%rdi
  0x000000011d14c361: cmp    $0x0,%rdi
  0x000000011d14c365: jne    0x000000011d14c41f  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@16 (line 288)

  0x000000011d14c36b: movsbl 0x30(%r15),%edi
  0x000000011d14c370: cmp    $0x0,%edi
  0x000000011d14c373: jne    0x000000011d14c437
  0x000000011d14c379: mov    %r9,%r10
  0x000000011d14c37c: shr    $0x3,%r10
  0x000000011d14c380: mov    %r10d,0x18(%rsi)
  0x000000011d14c384: mov    %rsi,%rdi
  0x000000011d14c387: xor    %r9,%rdi
  0x000000011d14c38a: shr    $0x16,%rdi
  0x000000011d14c38e: cmp    $0x0,%rdi
  0x000000011d14c392: jne    0x000000011d14c456  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@22 (line 289)

  0x000000011d14c398: add    $0x30,%rsp
  0x000000011d14c39c: pop    %rbp
  0x000000011d14c39d: mov    0x108(%r15),%r10
  0x000000011d14c3a4: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14c3a7: retq   
  0x000000011d14c3a8: movabs $0x14f7e4990,%r10  ;   {metadata({method} {0x000000014f7e4990} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000000011d14c3b2: mov    %r10,0x8(%rsp)
  0x000000011d14c3b7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14c3bf: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::<init>@-1 (line 285)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14c3c4: jmpq   0x000000011d14c30e
  0x000000011d14c3c9: mov    0x10(%rsi),%edi
  0x000000011d14c3cc: shl    $0x3,%rdi
  0x000000011d14c3d0: cmp    $0x0,%rdi
  0x000000011d14c3d4: je     0x000000011d14c31f
  0x000000011d14c3da: mov    %rdi,(%rsp)
  0x000000011d14c3de: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14c3e3: jmpq   0x000000011d14c31f
  0x000000011d14c3e8: cmp    $0x0,%rcx
  0x000000011d14c3ec: je     0x000000011d14c33e
  0x000000011d14c3f2: mov    %rsi,(%rsp)
  0x000000011d14c3f6: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14c3fb: jmpq   0x000000011d14c33e
  0x000000011d14c400: mov    0x14(%rsi),%edi
  0x000000011d14c403: shl    $0x3,%rdi
  0x000000011d14c407: cmp    $0x0,%rdi
  0x000000011d14c40b: je     0x000000011d14c34c
  0x000000011d14c411: mov    %rdi,(%rsp)
  0x000000011d14c415: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14c41a: jmpq   0x000000011d14c34c
  0x000000011d14c41f: cmp    $0x0,%r8
  0x000000011d14c423: je     0x000000011d14c36b
  0x000000011d14c429: mov    %rsi,(%rsp)
  0x000000011d14c42d: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14c432: jmpq   0x000000011d14c36b
  0x000000011d14c437: mov    0x18(%rsi),%edi
  0x000000011d14c43a: shl    $0x3,%rdi
  0x000000011d14c43e: cmp    $0x0,%rdi
  0x000000011d14c442: je     0x000000011d14c379
  0x000000011d14c448: mov    %rdi,(%rsp)
  0x000000011d14c44c: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14c451: jmpq   0x000000011d14c379
  0x000000011d14c456: cmp    $0x0,%r9
  0x000000011d14c45a: je     0x000000011d14c398
  0x000000011d14c460: mov    %rsi,(%rsp)
  0x000000011d14c464: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14c469: jmpq   0x000000011d14c398
  0x000000011d14c46e: nop
  0x000000011d14c46f: nop
  0x000000011d14c470: mov    0x420(%r15),%rax
  0x000000011d14c477: movabs $0x0,%r10
  0x000000011d14c481: mov    %r10,0x420(%r15)
  0x000000011d14c488: movabs $0x0,%r10
  0x000000011d14c492: mov    %r10,0x428(%r15)
  0x000000011d14c499: add    $0x30,%rsp
  0x000000011d14c49d: pop    %rbp
  0x000000011d14c49e: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14c4a3: hlt    
  0x000000011d14c4a4: hlt    
  0x000000011d14c4a5: hlt    
  0x000000011d14c4a6: hlt    
  0x000000011d14c4a7: hlt    
  0x000000011d14c4a8: hlt    
  0x000000011d14c4a9: hlt    
  0x000000011d14c4aa: hlt    
  0x000000011d14c4ab: hlt    
  0x000000011d14c4ac: hlt    
  0x000000011d14c4ad: hlt    
  0x000000011d14c4ae: hlt    
  0x000000011d14c4af: hlt    
  0x000000011d14c4b0: hlt    
  0x000000011d14c4b1: hlt    
  0x000000011d14c4b2: hlt    
  0x000000011d14c4b3: hlt    
  0x000000011d14c4b4: hlt    
  0x000000011d14c4b5: hlt    
  0x000000011d14c4b6: hlt    
  0x000000011d14c4b7: hlt    
  0x000000011d14c4b8: hlt    
  0x000000011d14c4b9: hlt    
  0x000000011d14c4ba: hlt    
  0x000000011d14c4bb: hlt    
  0x000000011d14c4bc: hlt    
  0x000000011d14c4bd: hlt    
  0x000000011d14c4be: hlt    
  0x000000011d14c4bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14c4c0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14c4c5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14c4cf: and    $0xfffffffffffffff0,%rsp
  0x000000011d14c4d3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14c4d8: hlt    
[Deopt Handler Code]
  0x000000011d14c4d9: movabs $0x11d14c4d9,%r10  ;   {section_word}
  0x000000011d14c4e3: push   %r10
  0x000000011d14c4e5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14c4ea: hlt    
  0x000000011d14c4eb: hlt    
  0x000000011d14c4ec: hlt    
  0x000000011d14c4ed: hlt    
  0x000000011d14c4ee: hlt    
  0x000000011d14c4ef: hlt    

ImmutableOopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop }pc offsets: 260 Compiled method (c1)     176   71       2       java.util.HashMap::resize (356 bytes)
 total in heap  [0x000000011d14a910,0x000000011d14c0a0] = 6032
 relocation     [0x000000011d14aa88,0x000000011d14ab40] = 184
 constants      [0x000000011d14ab40,0x000000011d14ab60] = 32
 main code      [0x000000011d14ab60,0x000000011d14b640] = 2784
 stub code      [0x000000011d14b640,0x000000011d14b680] = 64
 metadata       [0x000000011d14b680,0x000000011d14b688] = 8
 scopes data    [0x000000011d14b688,0x000000011d14b988] = 768
 scopes pcs     [0x000000011d14b988,0x000000011d14c008] = 1664
 dependencies   [0x000000011d14c008,0x000000011d14c010] = 8
 nul chk table  [0x000000011d14c010,0x000000011d14c0a0] = 144
----------------------------------------------------------------------
java/util/HashMap.resize()[Ljava/util/HashMap$Node;  [0x000000011d14ab60, 0x000000011d14b680]  2848 bytes
[Constants]
  0x000000011d14ab40 (offset:    0): 0x4e800000   0xf4f4f4f44e800000
  0x000000011d14ab44 (offset:    4): 0xf4f4f4f4
  0x000000011d14ab48 (offset:    8): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000011d14ab4c (offset:   12): 0xf4f4f4f4
  0x000000011d14ab50 (offset:   16): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000011d14ab54 (offset:   20): 0xf4f4f4f4
  0x000000011d14ab58 (offset:   24): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
  0x000000011d14ab5c (offset:   28): 0xf4f4f4f4
[Entry Point]
  # {method} {0x000000014f6cc528} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  #           [sp+0x70]  (sp of caller)
  0x000000011d14ab60: mov    0x8(%rsi),%r10d    ;   {no_reloc}
  0x000000011d14ab64: movabs $0x800000000,%r12
  0x000000011d14ab6e: add    %r12,%r10
  0x000000011d14ab71: xor    %r12,%r12
  0x000000011d14ab74: cmp    %rax,%r10
  0x000000011d14ab77: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14ab7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14ab80: mov    %eax,-0x14000(%rsp)
  0x000000011d14ab87: push   %rbp
  0x000000011d14ab88: sub    $0x60,%rsp
  0x000000011d14ab8c: mov    %rsi,0x40(%rsp)
  0x000000011d14ab91: movabs $0x14f7e4428,%rbx
  0x000000011d14ab9b: mov    0x18(%rbx),%edx
  0x000000011d14ab9e: add    $0x8,%edx
  0x000000011d14aba1: mov    %edx,0x18(%rbx)
  0x000000011d14aba4: and    $0x3ff8,%edx
  0x000000011d14abaa: cmp    $0x0,%edx
  0x000000011d14abad: je     0x000000011d14b2ff  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@0 (line 673)

  0x000000011d14abb3: mov    0x24(%rsi),%r11d
  0x000000011d14abb7: shl    $0x3,%r11          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@1 (line 673)

  0x000000011d14abbb: mov    %r11,0x50(%rsp)
  0x000000011d14abc0: cmp    $0x0,%r11
  0x000000011d14abc4: jne    0x000000011d14abd5  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@6 (line 674)

  0x000000011d14abca: mov    $0x0,%r13d
  0x000000011d14abd0: jmpq   0x000000011d14abdc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@10 (line 674)

  0x000000011d14abd5: mov    0xc(%r11),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@14 (line 674)
                                                ; implicit exception: dispatches to 0x000000011d14b320
  0x000000011d14abd9: mov    %rbx,%r13          ;*istore_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@15 (line 674)

  0x000000011d14abdc: mov    0x1c(%rsi),%ebx    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@17 (line 675)

  0x000000011d14abdf: cmp    $0x0,%r13d
  0x000000011d14abe3: jle    0x000000011d14ac2c  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@25 (line 677)

  0x000000011d14abe9: cmp    $0x40000000,%r13d
  0x000000011d14abf0: jge    0x000000011d14b2e5  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@31 (line 678)

  0x000000011d14abf6: mov    %r13,%rdx
  0x000000011d14abf9: shl    %edx
  0x000000011d14abfb: cmp    $0x40000000,%edx
  0x000000011d14ac01: jl     0x000000011d14ac11  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@50 (line 682)

  0x000000011d14ac07: mov    $0x0,%ebx
  0x000000011d14ac0c: jmpq   0x000000011d14ac4c  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@85 (line 692)

  0x000000011d14ac11: cmp    $0x10,%r13d
  0x000000011d14ac15: jge    0x000000011d14ac25  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@56 (line 682)

  0x000000011d14ac1b: mov    $0x0,%ebx
  0x000000011d14ac20: jmpq   0x000000011d14ac4c  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@85 (line 692)

  0x000000011d14ac25: shl    %ebx
  0x000000011d14ac27: jmpq   0x000000011d14ac4c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@64 (line 684)

  0x000000011d14ac2c: cmp    $0x0,%ebx
  0x000000011d14ac2f: jle    0x000000011d14ac42  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@68 (line 686)

  0x000000011d14ac35: mov    %rbx,%rdx
  0x000000011d14ac38: mov    $0x0,%ebx
  0x000000011d14ac3d: jmpq   0x000000011d14ac4c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@74 (line 687)

  0x000000011d14ac42: mov    $0xc,%ebx
  0x000000011d14ac47: mov    $0x10,%edx         ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@85 (line 692)

  0x000000011d14ac4c: cmp    $0x0,%ebx
  0x000000011d14ac4f: jne    0x000000011d14acbb  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@87 (line 692)

  0x000000011d14ac55: vmovss 0x20(%rsi),%xmm0   ;*getfield loadFactor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@94 (line 693)

  0x000000011d14ac5a: vcvtsi2ss %edx,%xmm1,%xmm1
  0x000000011d14ac5e: vmulss %xmm0,%xmm1,%xmm1
  0x000000011d14ac62: cmp    $0x40000000,%edx
  0x000000011d14ac68: jge    0x000000011d14aca1  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@104 (line 694)

  0x000000011d14ac6e: vmovss -0x136(%rip),%xmm0        # 0x000000011d14ab40
                                                ;   {section_word}
  0x000000011d14ac76: vucomiss %xmm0,%xmm1
  0x000000011d14ac7a: mov    $0x1,%ebx
  0x000000011d14ac7f: jp     0x000000011d14ac98
  0x000000011d14ac85: ja     0x000000011d14ac98
  0x000000011d14ac8b: mov    $0x0,%ebx
  0x000000011d14ac90: je     0x000000011d14ac98
  0x000000011d14ac96: dec    %ebx               ;*fcmpg {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@111 (line 694)

  0x000000011d14ac98: cmp    $0x0,%ebx
  0x000000011d14ac9b: jl     0x000000011d14acab  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@112 (line 694)

  0x000000011d14aca1: mov    $0x7fffffff,%ebx
  0x000000011d14aca6: jmpq   0x000000011d14acbb  ;*istore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@123 (line 695)

  0x000000011d14acab: vcvttss2si %xmm1,%ebx
  0x000000011d14acaf: cmp    $0x80000000,%ebx
  0x000000011d14acb5: je     0x000000011d14b325
  0x000000011d14acbb: mov    %ebx,0x1c(%rsi)    ;*putfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@128 (line 697)

  0x000000011d14acbe: mov    %rdx,%rbx
  0x000000011d14acc1: mov    %rdx,%r14
  0x000000011d14acc4: movabs $0x800032650,%rdx  ;   {metadata('java/util/HashMap$Node'[])}
  0x000000011d14acce: mov    %rsi,%r9
  0x000000011d14acd1: movslq %ebx,%rbx
  0x000000011d14acd4: mov    %rbx,%rdi
  0x000000011d14acd7: cmp    $0xffffff,%rbx
  0x000000011d14acde: ja     0x000000011d14b33e
  0x000000011d14ace4: movabs $0x17,%rsi
  0x000000011d14acee: lea    (%rsi,%rbx,4),%rsi
  0x000000011d14acf2: and    $0xfffffffffffffff8,%rsi
  0x000000011d14acf6: mov    0x118(%r15),%rax
  0x000000011d14acfd: lea    (%rax,%rsi,1),%rsi
  0x000000011d14ad01: cmp    0x128(%r15),%rsi
  0x000000011d14ad08: ja     0x000000011d14b33e
  0x000000011d14ad0e: mov    %rsi,0x118(%r15)
  0x000000011d14ad15: sub    %rax,%rsi
  0x000000011d14ad18: movq   $0x1,(%rax)
  0x000000011d14ad1f: mov    %rdx,%rcx
  0x000000011d14ad22: movabs $0x800000000,%r12
  0x000000011d14ad2c: sub    %r12,%rcx
  0x000000011d14ad2f: xor    %r12,%r12
  0x000000011d14ad32: mov    %ecx,0x8(%rax)
  0x000000011d14ad35: mov    %ebx,0xc(%rax)
  0x000000011d14ad38: sub    $0x10,%rsi
  0x000000011d14ad3c: je     0x000000011d14ad5c
  0x000000011d14ad42: test   %rsi,%rsi
  0x000000011d14ad45: je     0x000000011d14ad5c
  0x000000011d14ad4b: xor    %rbx,%rbx
  0x000000011d14ad4e: shr    $0x3,%rsi
  0x000000011d14ad52: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011d14ad57: dec    %rsi
  0x000000011d14ad5a: jne    0x000000011d14ad52  ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@133 (line 699)

  0x000000011d14ad5c: mov    %rax,0x38(%rsp)
  0x000000011d14ad61: movsbl 0x30(%r15),%edx
  0x000000011d14ad66: cmp    $0x0,%edx
  0x000000011d14ad69: jne    0x000000011d14b348
  0x000000011d14ad6f: mov    %rax,%r10
  0x000000011d14ad72: shr    $0x3,%r10
  0x000000011d14ad76: mov    %r10d,0x24(%r9)
  0x000000011d14ad7a: mov    %r9,%rsi
  0x000000011d14ad7d: xor    %rax,%rsi
  0x000000011d14ad80: shr    $0x16,%rsi
  0x000000011d14ad84: cmp    $0x0,%rsi
  0x000000011d14ad88: jne    0x000000011d14b368  ;*putfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@141 (line 700)

  0x000000011d14ad8e: cmp    $0x0,%r11
  0x000000011d14ad92: je     0x000000011d14b2cf  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@145 (line 701)

  0x000000011d14ad98: mov    $0x0,%edi          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@151 (line 702)

  0x000000011d14ad9d: data16 xchg %ax,%ax
  0x000000011d14ada0: cmp    %r13d,%edi
  0x000000011d14ada3: jge    0x000000011d14b2cf  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@154 (line 702)

  0x000000011d14ada9: cmp    0xc(%r11),%edi     ; implicit exception: dispatches to 0x000000011d14b380
  0x000000011d14adad: jae    0x000000011d14b38a
  0x000000011d14adb3: movslq %edi,%rdx
  0x000000011d14adb6: mov    0x10(%r11,%rdx,4),%esi
  0x000000011d14adbb: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@160 (line 704)

  0x000000011d14adbf: cmp    $0x0,%rsi
  0x000000011d14adc3: jne    0x000000011d14add9  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@164 (line 704)

  0x000000011d14adc9: mov    %rdi,%rcx
  0x000000011d14adcc: mov    %rax,%rbx
  0x000000011d14adcf: mov    %r14d,0x48(%rsp)
  0x000000011d14add4: jmpq   0x000000011d14b281  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@347 (line 702)

  0x000000011d14add9: cmp    0xc(%r11),%edi
  0x000000011d14addd: jae    0x000000011d14b398
  0x000000011d14ade3: movslq %edi,%rdx
  0x000000011d14ade6: lea    0x10(%r11,%rdx,4),%rdx
  0x000000011d14adeb: movsbl 0x30(%r15),%ecx
  0x000000011d14adf0: cmp    $0x0,%ecx
  0x000000011d14adf3: jne    0x000000011d14b3a6
  0x000000011d14adf9: movl   $0x0,(%rdx)        ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@171 (line 705)

  0x000000011d14adff: mov    0x18(%rsi),%edx    ; implicit exception: dispatches to 0x000000011d14b3c4
  0x000000011d14ae02: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@174 (line 706)

  0x000000011d14ae06: cmp    $0x0,%rdx
  0x000000011d14ae0a: jne    0x000000011d14aed3  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@177 (line 706)

  0x000000011d14ae10: mov    0xc(%rsi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@184 (line 707)

  0x000000011d14ae13: mov    %r14,%rcx
  0x000000011d14ae16: dec    %ecx
  0x000000011d14ae18: and    %rcx,%rdx
  0x000000011d14ae1b: cmp    0xc(%rax),%edx
  0x000000011d14ae1e: jae    0x000000011d14b3c9
  0x000000011d14ae24: cmp    $0x0,%rsi
  0x000000011d14ae28: je     0x000000011d14ae8f
  0x000000011d14ae2e: mov    0x8(%rax),%ecx     ; implicit exception: dispatches to 0x000000011d14b3d7
  0x000000011d14ae31: movabs $0x800000000,%r12
  0x000000011d14ae3b: add    %r12,%rcx
  0x000000011d14ae3e: xor    %r12,%r12
  0x000000011d14ae41: mov    0x8(%rsi),%r8d
  0x000000011d14ae45: movabs $0x800000000,%r12
  0x000000011d14ae4f: add    %r12,%r8
  0x000000011d14ae52: xor    %r12,%r12
  0x000000011d14ae55: mov    0xe8(%rcx),%rcx
  0x000000011d14ae5c: cmp    %rcx,%r8
  0x000000011d14ae5f: je     0x000000011d14ae8f
  0x000000011d14ae65: mov    0x10(%rcx),%ebx
  0x000000011d14ae68: cmp    (%r8,%rbx,1),%rcx
  0x000000011d14ae6c: je     0x000000011d14ae8f
  0x000000011d14ae72: cmp    $0x20,%ebx
  0x000000011d14ae75: jne    0x000000011d14b3dc
  0x000000011d14ae7b: push   %r8
  0x000000011d14ae7d: push   %rcx
  0x000000011d14ae7e: callq  0x000000011c68f280  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011d14ae83: pop    %r8
  0x000000011d14ae85: pop    %rcx
  0x000000011d14ae86: cmp    $0x0,%ecx
  0x000000011d14ae89: je     0x000000011d14b3dc
  0x000000011d14ae8f: movslq %edx,%rdx
  0x000000011d14ae92: lea    0x10(%rax,%rdx,4),%rdx
  0x000000011d14ae97: movsbl 0x30(%r15),%ecx
  0x000000011d14ae9c: cmp    $0x0,%ecx
  0x000000011d14ae9f: jne    0x000000011d14b3e5
  0x000000011d14aea5: mov    %rsi,%r10
  0x000000011d14aea8: shr    $0x3,%r10
  0x000000011d14aeac: mov    %r10d,(%rdx)
  0x000000011d14aeaf: mov    %rdx,%rcx
  0x000000011d14aeb2: xor    %rsi,%rcx
  0x000000011d14aeb5: shr    $0x16,%rcx
  0x000000011d14aeb9: cmp    $0x0,%rcx
  0x000000011d14aebd: jne    0x000000011d14b403  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@194 (line 707)

  0x000000011d14aec3: mov    %rdi,%rcx
  0x000000011d14aec6: mov    %rax,%rbx
  0x000000011d14aec9: mov    %r14d,0x48(%rsp)
  0x000000011d14aece: jmpq   0x000000011d14b281  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@195 (line 707)

  0x000000011d14aed3: cmp    $0x0,%rsi
  0x000000011d14aed7: je     0x000000011d14af08
  0x000000011d14aedd: movabs $0x800032a90,%r8   ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000011d14aee7: mov    0x8(%rsi),%ecx
  0x000000011d14aeea: movabs $0x800000000,%r12
  0x000000011d14aef4: add    %r12,%rcx
  0x000000011d14aef7: xor    %r12,%r12
  0x000000011d14aefa: cmp    %rcx,%r8
  0x000000011d14aefd: jne    0x000000011d14af08
  0x000000011d14af03: jmpq   0x000000011d14af0d
  0x000000011d14af08: xor    %rdx,%rdx
  0x000000011d14af0b: jmp    0x000000011d14af17
  0x000000011d14af0d: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@200 (line 708)

  0x000000011d14af17: cmp    $0x0,%edx
  0x000000011d14af1a: je     0x000000011d14af8f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@203 (line 708)

  0x000000011d14af20: mov    %r14d,0x48(%rsp)
  0x000000011d14af25: cmp    $0x0,%rsi
  0x000000011d14af29: je     0x000000011d14af5a
  0x000000011d14af2f: movabs $0x800032a90,%r8   ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000011d14af39: mov    0x8(%rsi),%ecx
  0x000000011d14af3c: movabs $0x800000000,%r12
  0x000000011d14af46: add    %r12,%rcx
  0x000000011d14af49: xor    %r12,%r12
  0x000000011d14af4c: cmp    %rcx,%r8
  0x000000011d14af4f: jne    0x000000011d14b41b
  0x000000011d14af55: jmpq   0x000000011d14af5a  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@208 (line 709)

  0x000000011d14af5a: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011d14b424
  0x000000011d14af5d: mov    %r9,%rdx
  0x000000011d14af60: mov    %rax,%rcx
  0x000000011d14af63: mov    %rdi,%r8
  0x000000011d14af66: mov    %r13,%r9           ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@217 (line 709)

  0x000000011d14af69: mov    %edi,0x34(%rsp)
  0x000000011d14af6d: mov    %r13d,0x30(%rsp)
  0x000000011d14af72: nopl   0x0(%rax,%rax,1)
  0x000000011d14af77: callq  0x000000011c5c8d00  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop }
                                                ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@217 (line 709)
                                                ;   {optimized virtual_call}
  0x000000011d14af7c: mov    0x34(%rsp),%ecx
  0x000000011d14af80: mov    0x38(%rsp),%rbx
  0x000000011d14af85: mov    0x30(%rsp),%r13d
  0x000000011d14af8a: jmpq   0x000000011d14b281  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@220 (line 709)

  0x000000011d14af8f: mov    %edi,0x34(%rsp)
  0x000000011d14af93: mov    %r14d,0x48(%rsp)
  0x000000011d14af98: mov    %r13d,0x30(%rsp)
  0x000000011d14af9d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011d14afa7: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x000000011d14afb1: movabs $0x0,%rbx          ;   {oop(NULL)}
  0x000000011d14afbb: movabs $0x0,%rdx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@235 (line 715)
                                                ;   {oop(NULL)}
  0x000000011d14afc5: mov    0x30(%rsp),%r13d
  0x000000011d14afca: nopw   0x0(%rax,%rax,1)
  0x000000011d14afd0: mov    0x18(%rsi),%ecx    ; implicit exception: dispatches to 0x000000011d14b429
  0x000000011d14afd3: shl    $0x3,%rcx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@237 (line 715)

  0x000000011d14afd7: mov    0xc(%rsi),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@244 (line 716)

  0x000000011d14afdb: and    %r13,%r8
  0x000000011d14afde: cmp    $0x0,%r8d
  0x000000011d14afe2: jne    0x000000011d14b033  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@249 (line 716)

  0x000000011d14afe8: cmp    $0x0,%rbx
  0x000000011d14afec: jne    0x000000011d14affa  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@254 (line 717)

  0x000000011d14aff2: mov    %rsi,%rbx
  0x000000011d14aff5: jmpq   0x000000011d14b02b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@261 (line 718)

  0x000000011d14affa: movsbl 0x30(%r15),%r8d
  0x000000011d14afff: cmp    $0x0,%r8d
  0x000000011d14b003: jne    0x000000011d14b42e
  0x000000011d14b009: mov    %rsi,%r10
  0x000000011d14b00c: shr    $0x3,%r10
  0x000000011d14b010: mov    %r10d,0x18(%rbx)   ; implicit exception: dispatches to 0x000000011d14b44e
  0x000000011d14b014: mov    %rbx,%r8
  0x000000011d14b017: xor    %rsi,%r8
  0x000000011d14b01a: shr    $0x16,%r8
  0x000000011d14b01e: cmp    $0x0,%r8
  0x000000011d14b022: jne    0x000000011d14b453  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@268 (line 720)

  0x000000011d14b028: mov    %rdx,%rbx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@271 (line 721)

  0x000000011d14b02b: mov    %rbx,%rdx
  0x000000011d14b02e: jmpq   0x000000011d14b079  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@275 (line 721)

  0x000000011d14b033: cmp    $0x0,%rax
  0x000000011d14b037: jne    0x000000011d14b045  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@280 (line 724)

  0x000000011d14b03d: mov    %rsi,%rdi
  0x000000011d14b040: jmpq   0x000000011d14b073  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@287 (line 725)

  0x000000011d14b045: movsbl 0x30(%r15),%r8d
  0x000000011d14b04a: cmp    $0x0,%r8d
  0x000000011d14b04e: jne    0x000000011d14b46b
  0x000000011d14b054: mov    %rsi,%r10
  0x000000011d14b057: shr    $0x3,%r10
  0x000000011d14b05b: mov    %r10d,0x18(%rax)   ; implicit exception: dispatches to 0x000000011d14b48b
  0x000000011d14b05f: mov    %rax,%r8
  0x000000011d14b062: xor    %rsi,%r8
  0x000000011d14b065: shr    $0x16,%r8
  0x000000011d14b069: cmp    $0x0,%r8
  0x000000011d14b06d: jne    0x000000011d14b490  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@294 (line 727)

  0x000000011d14b073: mov    %rsi,%rax
  0x000000011d14b076: mov    %rbx,%rsi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@301 (line 730)

  0x000000011d14b079: cmp    $0x0,%rcx
  0x000000011d14b07d: mov    $0x8,%ebx
  0x000000011d14b082: jne    0x000000011d14b08d
  0x000000011d14b088: mov    $0x0,%ebx
  0x000000011d14b08d: movabs $0x14f7e4428,%r8
  0x000000011d14b097: mov    0x1c(%r8),%r9d
  0x000000011d14b09b: add    %ebx,%r9d
  0x000000011d14b09e: mov    %r9d,0x1c(%r8)
  0x000000011d14b0a2: cmp    $0x0,%ebx
  0x000000011d14b0a5: jne    0x000000011d14b0b1
  0x000000011d14b0ab: mov    $0x8,%r9d
  0x000000011d14b0b1: and    $0x1fff8,%r9d
  0x000000011d14b0b8: cmp    $0x0,%r9d
  0x000000011d14b0bc: je     0x000000011d14b4a8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@306 (line 730)

  0x000000011d14b0c2: mov    0x108(%r15),%r10   ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@306 (line 730)

  0x000000011d14b0c9: test   %eax,(%r10)        ;   {poll}
  0x000000011d14b0cc: cmp    $0x0,%rcx
  0x000000011d14b0d0: je     0x000000011d14b0e1  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@306 (line 730)

  0x000000011d14b0d6: mov    %rsi,%rbx
  0x000000011d14b0d9: mov    %rcx,%rsi
  0x000000011d14b0dc: jmpq   0x000000011d14afd0  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@235 (line 715)

  0x000000011d14b0e1: cmp    $0x0,%rsi
  0x000000011d14b0e5: mov    0x34(%rsp),%ecx
  0x000000011d14b0e9: mov    0x38(%rsp),%rbx
  0x000000011d14b0ee: je     0x000000011d14b1b5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@311 (line 731)

  0x000000011d14b0f4: movsbl 0x30(%r15),%r8d
  0x000000011d14b0f9: cmp    $0x0,%r8d
  0x000000011d14b0fd: jne    0x000000011d14b4c9
  0x000000011d14b103: movl   $0x0,0x18(%rsi)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@317 (line 732)
                                                ; implicit exception: dispatches to 0x000000011d14b4e9
  0x000000011d14b10a: cmp    0xc(%rbx),%ecx
  0x000000011d14b10d: jae    0x000000011d14b4ee
  0x000000011d14b113: cmp    $0x0,%rdx
  0x000000011d14b117: je     0x000000011d14b180
  0x000000011d14b11d: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x000000011d14b4fc
  0x000000011d14b120: movabs $0x800000000,%r12
  0x000000011d14b12a: add    %r12,%rsi
  0x000000011d14b12d: xor    %r12,%r12
  0x000000011d14b130: mov    0x8(%rdx),%r8d
  0x000000011d14b134: movabs $0x800000000,%r12
  0x000000011d14b13e: add    %r12,%r8
  0x000000011d14b141: xor    %r12,%r12
  0x000000011d14b144: mov    0xe8(%rsi),%rsi
  0x000000011d14b14b: cmp    %rsi,%r8
  0x000000011d14b14e: je     0x000000011d14b180
  0x000000011d14b154: mov    0x10(%rsi),%r9d
  0x000000011d14b158: cmp    (%r8,%r9,1),%rsi
  0x000000011d14b15c: je     0x000000011d14b180
  0x000000011d14b162: cmp    $0x20,%r9d
  0x000000011d14b166: jne    0x000000011d14b501
  0x000000011d14b16c: push   %r8
  0x000000011d14b16e: push   %rsi
  0x000000011d14b16f: callq  0x000000011c68f280  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011d14b174: pop    %r8
  0x000000011d14b176: pop    %rsi
  0x000000011d14b177: cmp    $0x0,%esi
  0x000000011d14b17a: je     0x000000011d14b501
  0x000000011d14b180: movslq %ecx,%rsi
  0x000000011d14b183: lea    0x10(%rbx,%rsi,4),%rsi
  0x000000011d14b188: movsbl 0x30(%r15),%r8d
  0x000000011d14b18d: cmp    $0x0,%r8d
  0x000000011d14b191: jne    0x000000011d14b50a
  0x000000011d14b197: mov    %rdx,%r10
  0x000000011d14b19a: shr    $0x3,%r10
  0x000000011d14b19e: mov    %r10d,(%rsi)
  0x000000011d14b1a1: mov    %rsi,%r8
  0x000000011d14b1a4: xor    %rdx,%r8
  0x000000011d14b1a7: shr    $0x16,%r8
  0x000000011d14b1ab: cmp    $0x0,%r8
  0x000000011d14b1af: jne    0x000000011d14b529  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@326 (line 733)

  0x000000011d14b1b5: cmp    $0x0,%rax
  0x000000011d14b1b9: je     0x000000011d14b281  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@329 (line 735)

  0x000000011d14b1bf: movsbl 0x30(%r15),%esi
  0x000000011d14b1c4: cmp    $0x0,%esi
  0x000000011d14b1c7: jne    0x000000011d14b541
  0x000000011d14b1cd: movl   $0x0,0x18(%rax)    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@335 (line 736)
                                                ; implicit exception: dispatches to 0x000000011d14b560
  0x000000011d14b1d4: mov    %rcx,%rax
  0x000000011d14b1d7: add    %r13d,%eax
  0x000000011d14b1da: cmp    0xc(%rbx),%eax
  0x000000011d14b1dd: jae    0x000000011d14b565
  0x000000011d14b1e3: cmp    $0x0,%rdi
  0x000000011d14b1e7: je     0x000000011d14b24d
  0x000000011d14b1ed: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x000000011d14b573
  0x000000011d14b1f0: movabs $0x800000000,%r12
  0x000000011d14b1fa: add    %r12,%rsi
  0x000000011d14b1fd: xor    %r12,%r12
  0x000000011d14b200: mov    0x8(%rdi),%edx
  0x000000011d14b203: movabs $0x800000000,%r12
  0x000000011d14b20d: add    %r12,%rdx
  0x000000011d14b210: xor    %r12,%r12
  0x000000011d14b213: mov    0xe8(%rsi),%rsi
  0x000000011d14b21a: cmp    %rsi,%rdx
  0x000000011d14b21d: je     0x000000011d14b24d
  0x000000011d14b223: mov    0x10(%rsi),%r8d
  0x000000011d14b227: cmp    (%rdx,%r8,1),%rsi
  0x000000011d14b22b: je     0x000000011d14b24d
  0x000000011d14b231: cmp    $0x20,%r8d
  0x000000011d14b235: jne    0x000000011d14b578
  0x000000011d14b23b: push   %rdx
  0x000000011d14b23c: push   %rsi
  0x000000011d14b23d: callq  0x000000011c68f280  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000000011d14b242: pop    %rdx
  0x000000011d14b243: pop    %rsi
  0x000000011d14b244: cmp    $0x0,%esi
  0x000000011d14b247: je     0x000000011d14b578
  0x000000011d14b24d: movslq %eax,%rax
  0x000000011d14b250: lea    0x10(%rbx,%rax,4),%rax
  0x000000011d14b255: movsbl 0x30(%r15),%esi
  0x000000011d14b25a: cmp    $0x0,%esi
  0x000000011d14b25d: jne    0x000000011d14b581
  0x000000011d14b263: mov    %rdi,%r10
  0x000000011d14b266: shr    $0x3,%r10
  0x000000011d14b26a: mov    %r10d,(%rax)
  0x000000011d14b26d: mov    %rax,%rsi
  0x000000011d14b270: xor    %rdi,%rsi
  0x000000011d14b273: shr    $0x16,%rsi
  0x000000011d14b277: cmp    $0x0,%rsi
  0x000000011d14b27b: jne    0x000000011d14b59f  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@346 (line 737)

  0x000000011d14b281: mov    %rcx,%rdi
  0x000000011d14b284: inc    %edi
  0x000000011d14b286: movabs $0x14f7e4428,%rax
  0x000000011d14b290: mov    0x1c(%rax),%esi
  0x000000011d14b293: add    $0x8,%esi
  0x000000011d14b296: mov    %esi,0x1c(%rax)
  0x000000011d14b299: and    $0x1fff8,%esi
  0x000000011d14b29f: cmp    $0x0,%esi
  0x000000011d14b2a2: je     0x000000011d14b5b7  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@350 (line 702)

  0x000000011d14b2a8: mov    0x108(%r15),%r10   ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@350 (line 702)

  0x000000011d14b2af: test   %eax,(%r10)        ;   {poll}
  0x000000011d14b2b2: mov    %rdi,%rcx
  0x000000011d14b2b5: mov    %rcx,%rdi
  0x000000011d14b2b8: mov    %rbx,%rax
  0x000000011d14b2bb: mov    0x48(%rsp),%r14d
  0x000000011d14b2c0: mov    0x50(%rsp),%r11
  0x000000011d14b2c5: mov    0x40(%rsp),%r9
  0x000000011d14b2ca: jmpq   0x000000011d14ada0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@350 (line 702)

  0x000000011d14b2cf: mov    %rax,%rbx
  0x000000011d14b2d2: mov    %rbx,%rax
  0x000000011d14b2d5: add    $0x60,%rsp
  0x000000011d14b2d9: pop    %rbp
  0x000000011d14b2da: mov    0x108(%r15),%r10
  0x000000011d14b2e1: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14b2e4: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@355 (line 743)

  0x000000011d14b2e5: movl   $0x7fffffff,0x1c(%rsi)  ;*putfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@37 (line 679)

  0x000000011d14b2ec: mov    %r11,%rax
  0x000000011d14b2ef: add    $0x60,%rsp
  0x000000011d14b2f3: pop    %rbp
  0x000000011d14b2f4: mov    0x108(%r15),%r10
  0x000000011d14b2fb: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14b2fe: retq   
  0x000000011d14b2ff: movabs $0x14f6cc528,%r10  ;   {metadata({method} {0x000000014f6cc528} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011d14b309: mov    %r10,0x8(%rsp)
  0x000000011d14b30e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14b316: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop [64]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::resize@-1 (line 673)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14b31b: jmpq   0x000000011d14abb3
  0x000000011d14b320: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop [64]=Oop r11=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@14 (line 674)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b325: vcomiss -0xdf96c3d(%rip),%xmm1        # 0x000000010f1b46f0
                                                ;   {external_word}
  0x000000011d14b32d: jp     0x000000011d14b336
  0x000000011d14b32f: jb     0x000000011d14b339
  0x000000011d14b331: dec    %rbx
  0x000000011d14b334: jmp    0x000000011d14b339
  0x000000011d14b336: xor    %rbx,%rbx
  0x000000011d14b339: jmpq   0x000000011d14acbb
  0x000000011d14b33e: callq  0x000000011c68e000  ; ImmutableOopMap{r11=Oop [80]=Oop r9=Oop [64]=Oop }
                                                ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@133 (line 699)
                                                ;   {runtime_call new_object_array Runtime1 stub}
  0x000000011d14b343: jmpq   0x000000011d14ad5c
  0x000000011d14b348: mov    0x24(%r9),%edx
  0x000000011d14b34c: shl    $0x3,%rdx
  0x000000011d14b350: cmp    $0x0,%rdx
  0x000000011d14b354: je     0x000000011d14ad6f
  0x000000011d14b35a: mov    %rdx,(%rsp)
  0x000000011d14b35e: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b363: jmpq   0x000000011d14ad6f
  0x000000011d14b368: cmp    $0x0,%rax
  0x000000011d14b36c: je     0x000000011d14ad8e
  0x000000011d14b372: mov    %r9,(%rsp)
  0x000000011d14b376: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14b37b: jmpq   0x000000011d14ad8e
  0x000000011d14b380: callq  0x000000011c68cf20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@160 (line 704)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b385: callq  0x000000011c68cf20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@160 (line 704)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b38a: mov    %rdi,(%rsp)
  0x000000011d14b38e: mov    %r11,0x8(%rsp)
  0x000000011d14b393: callq  0x000000011c68c920  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@160 (line 704)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14b398: mov    %rdi,(%rsp)
  0x000000011d14b39c: mov    %r11,0x8(%rsp)
  0x000000011d14b3a1: callq  0x000000011c68c920  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@171 (line 705)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14b3a6: mov    (%rdx),%ecx
  0x000000011d14b3a8: shl    $0x3,%rcx
  0x000000011d14b3ac: cmp    $0x0,%rcx
  0x000000011d14b3b0: je     0x000000011d14adf9
  0x000000011d14b3b6: mov    %rcx,(%rsp)
  0x000000011d14b3ba: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b3bf: jmpq   0x000000011d14adf9
  0x000000011d14b3c4: callq  0x000000011c68cf20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@174 (line 706)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b3c9: mov    %rdx,(%rsp)
  0x000000011d14b3cd: mov    %rax,0x8(%rsp)
  0x000000011d14b3d2: callq  0x000000011c68c920  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@194 (line 707)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14b3d7: callq  0x000000011c68cf20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@194 (line 707)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b3dc: mov    %rsi,(%rsp)
  0x000000011d14b3e0: callq  0x000000011c68eca0  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@194 (line 707)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011d14b3e5: mov    (%rdx),%ecx
  0x000000011d14b3e7: shl    $0x3,%rcx
  0x000000011d14b3eb: cmp    $0x0,%rcx
  0x000000011d14b3ef: je     0x000000011d14aea5
  0x000000011d14b3f5: mov    %rcx,(%rsp)
  0x000000011d14b3f9: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b3fe: jmpq   0x000000011d14aea5
  0x000000011d14b403: cmp    $0x0,%rsi
  0x000000011d14b407: je     0x000000011d14aec3
  0x000000011d14b40d: mov    %rdx,(%rsp)
  0x000000011d14b411: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14b416: jmpq   0x000000011d14aec3
  0x000000011d14b41b: mov    %rsi,(%rsp)
  0x000000011d14b41f: callq  0x000000011c68eea0  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@208 (line 709)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000000011d14b424: callq  0x000000011c68cf20  ; ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop rsi=Oop }
                                                ;*invokevirtual split {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@217 (line 709)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b429: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rbx=Oop rdx=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@237 (line 715)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b42e: mov    0x18(%rbx),%r8d    ; implicit exception: dispatches to 0x000000011d14b5d8
  0x000000011d14b432: shl    $0x3,%r8
  0x000000011d14b436: cmp    $0x0,%r8
  0x000000011d14b43a: je     0x000000011d14b009
  0x000000011d14b440: mov    %r8,(%rsp)
  0x000000011d14b444: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b449: jmpq   0x000000011d14b009
  0x000000011d14b44e: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@268 (line 720)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b453: cmp    $0x0,%rsi
  0x000000011d14b457: je     0x000000011d14b028
  0x000000011d14b45d: mov    %rbx,(%rsp)
  0x000000011d14b461: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14b466: jmpq   0x000000011d14b028
  0x000000011d14b46b: mov    0x18(%rax),%r8d    ; implicit exception: dispatches to 0x000000011d14b5dd
  0x000000011d14b46f: shl    $0x3,%r8
  0x000000011d14b473: cmp    $0x0,%r8
  0x000000011d14b477: je     0x000000011d14b054
  0x000000011d14b47d: mov    %r8,(%rsp)
  0x000000011d14b481: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b486: jmpq   0x000000011d14b054
  0x000000011d14b48b: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@294 (line 727)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b490: cmp    $0x0,%rsi
  0x000000011d14b494: je     0x000000011d14b073
  0x000000011d14b49a: mov    %rax,(%rsp)
  0x000000011d14b49e: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14b4a3: jmpq   0x000000011d14b073
  0x000000011d14b4a8: movabs $0x14f6cc528,%r10  ;   {metadata({method} {0x000000014f6cc528} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011d14b4b2: mov    %r10,0x8(%rsp)
  0x000000011d14b4b7: movq   $0x132,(%rsp)
  0x000000011d14b4bf: callq  0x000000011c691600  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@306 (line 730)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14b4c4: jmpq   0x000000011d14b0c2
  0x000000011d14b4c9: mov    0x18(%rsi),%r8d    ; implicit exception: dispatches to 0x000000011d14b5e2
  0x000000011d14b4cd: shl    $0x3,%r8
  0x000000011d14b4d1: cmp    $0x0,%r8
  0x000000011d14b4d5: je     0x000000011d14b103
  0x000000011d14b4db: mov    %r8,(%rsp)
  0x000000011d14b4df: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b4e4: jmpq   0x000000011d14b103
  0x000000011d14b4e9: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@317 (line 732)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b4ee: mov    %rcx,(%rsp)
  0x000000011d14b4f2: mov    %rbx,0x8(%rsp)
  0x000000011d14b4f7: callq  0x000000011c68c920  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@326 (line 733)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14b4fc: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@326 (line 733)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b501: mov    %rdx,(%rsp)
  0x000000011d14b505: callq  0x000000011c68eca0  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@326 (line 733)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011d14b50a: mov    (%rsi),%r8d
  0x000000011d14b50d: shl    $0x3,%r8
  0x000000011d14b511: cmp    $0x0,%r8
  0x000000011d14b515: je     0x000000011d14b197
  0x000000011d14b51b: mov    %r8,(%rsp)
  0x000000011d14b51f: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b524: jmpq   0x000000011d14b197
  0x000000011d14b529: cmp    $0x0,%rdx
  0x000000011d14b52d: je     0x000000011d14b1b5
  0x000000011d14b533: mov    %rsi,(%rsp)
  0x000000011d14b537: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14b53c: jmpq   0x000000011d14b1b5
  0x000000011d14b541: mov    0x18(%rax),%esi    ; implicit exception: dispatches to 0x000000011d14b5e7
  0x000000011d14b544: shl    $0x3,%rsi
  0x000000011d14b548: cmp    $0x0,%rsi
  0x000000011d14b54c: je     0x000000011d14b1cd
  0x000000011d14b552: mov    %rsi,(%rsp)
  0x000000011d14b556: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b55b: jmpq   0x000000011d14b1cd
  0x000000011d14b560: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@335 (line 736)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b565: mov    %rax,(%rsp)
  0x000000011d14b569: mov    %rbx,0x8(%rsp)
  0x000000011d14b56e: callq  0x000000011c68c920  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@346 (line 737)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14b573: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@346 (line 737)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b578: mov    %rdi,(%rsp)
  0x000000011d14b57c: callq  0x000000011c68eca0  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@346 (line 737)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000000011d14b581: mov    (%rax),%esi
  0x000000011d14b583: shl    $0x3,%rsi
  0x000000011d14b587: cmp    $0x0,%rsi
  0x000000011d14b58b: je     0x000000011d14b263
  0x000000011d14b591: mov    %rsi,(%rsp)
  0x000000011d14b595: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14b59a: jmpq   0x000000011d14b263
  0x000000011d14b59f: cmp    $0x0,%rdi
  0x000000011d14b5a3: je     0x000000011d14b281
  0x000000011d14b5a9: mov    %rax,(%rsp)
  0x000000011d14b5ad: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14b5b2: jmpq   0x000000011d14b281
  0x000000011d14b5b7: movabs $0x14f6cc528,%r10  ;   {metadata({method} {0x000000014f6cc528} 'resize' '()[Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011d14b5c1: mov    %r10,0x8(%rsp)
  0x000000011d14b5c6: movq   $0x15e,(%rsp)
  0x000000011d14b5ce: callq  0x000000011c691600  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@350 (line 702)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14b5d3: jmpq   0x000000011d14b2a8
  0x000000011d14b5d8: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@268 (line 720)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b5dd: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@294 (line 727)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b5e2: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop rsi=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@317 (line 732)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b5e7: callq  0x000000011c68cf20  ; ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rax=Oop rdi=Oop }
                                                ;*putfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::resize@335 (line 736)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14b5ec: nop
  0x000000011d14b5ed: nop
  0x000000011d14b5ee: mov    0x420(%r15),%rax
  0x000000011d14b5f5: movabs $0x0,%r10
  0x000000011d14b5ff: mov    %r10,0x420(%r15)
  0x000000011d14b606: movabs $0x0,%r10
  0x000000011d14b610: mov    %r10,0x428(%r15)
  0x000000011d14b617: add    $0x60,%rsp
  0x000000011d14b61b: pop    %rbp
  0x000000011d14b61c: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14b621: hlt    
  0x000000011d14b622: hlt    
  0x000000011d14b623: hlt    
  0x000000011d14b624: hlt    
  0x000000011d14b625: hlt    
  0x000000011d14b626: hlt    
  0x000000011d14b627: hlt    
  0x000000011d14b628: hlt    
  0x000000011d14b629: hlt    
  0x000000011d14b62a: hlt    
  0x000000011d14b62b: hlt    
  0x000000011d14b62c: hlt    
  0x000000011d14b62d: hlt    
  0x000000011d14b62e: hlt    
  0x000000011d14b62f: hlt    
  0x000000011d14b630: hlt    
  0x000000011d14b631: hlt    
  0x000000011d14b632: hlt    
  0x000000011d14b633: hlt    
  0x000000011d14b634: hlt    
  0x000000011d14b635: hlt    
  0x000000011d14b636: hlt    
  0x000000011d14b637: hlt    
  0x000000011d14b638: hlt    
  0x000000011d14b639: hlt    
  0x000000011d14b63a: hlt    
  0x000000011d14b63b: hlt    
  0x000000011d14b63c: hlt    
  0x000000011d14b63d: hlt    
  0x000000011d14b63e: hlt    
  0x000000011d14b63f: hlt    
[Stub Code]
  0x000000011d14b640: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d14b645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14b64f: jmpq   0x000000011d14b64f  ;   {runtime_call}
[Exception Handler]
  0x000000011d14b654: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d14b659: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14b663: and    $0xfffffffffffffff0,%rsp
  0x000000011d14b667: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14b66c: hlt    
[Deopt Handler Code]
  0x000000011d14b66d: movabs $0x11d14b66d,%r10  ;   {section_word}
  0x000000011d14b677: push   %r10
  0x000000011d14b679: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14b67e: hlt    
  0x000000011d14b67f: hlt    

ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop }pc offsets: 1052 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }pc offsets: 1385 
ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop }pc offsets: 1871 
ImmutableOopMap{rsi=Oop [64]=Oop }pc offsets: 1979 
ImmutableOopMap{rsi=Oop [64]=Oop r11=Oop [80]=Oop }pc offsets: 1989 
ImmutableOopMap{r11=Oop [80]=Oop r9=Oop [64]=Oop }pc offsets: 2019 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop }pc offsets: 2085 2090 2104 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop r11=Oop [80]=Oop rsi=Oop }pc offsets: 2118 2153 2167 2172 2181 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop }pc offsets: 2244 
ImmutableOopMap{rax=Oop [56]=Oop r9=Oop [64]=Oop [80]=Oop rsi=Oop }pc offsets: 2249 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rbx=Oop rdx=Oop }pc offsets: 2254 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }pc offsets: 2291 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }pc offsets: 2352 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rax=Oop rdi=Oop rsi=Oop rdx=Oop }pc offsets: 2404 
ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop }pc offsets: 2446 2460 2465 2474 
ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rdi=Oop }pc offsets: 2565 2579 2584 2593 
ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop }pc offsets: 2675 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop rbx=Oop rdx=Oop }pc offsets: 2685 
ImmutableOopMap{[64]=Oop [80]=Oop [56]=Oop rcx=Oop rbx=Oop rdx=Oop rsi=Oop rdi=Oop rax=Oop }pc offsets: 2690 
ImmutableOopMap{[64]=Oop [80]=Oop rdi=Oop rax=Oop rbx=Oop [56]=Oop rdx=Oop rsi=Oop }pc offsets: 2695 
ImmutableOopMap{[64]=Oop [80]=Oop rbx=Oop [56]=Oop rax=Oop rdi=Oop }pc offsets: 2700 ----------------------------------------------------------------------
java/lang/Module.addExportsToAllUnnamed0(Ljava/lang/Module;Ljava/lang/String;)V  [0x0000000124372640, 0x0000000124372840]  512 bytes
[Entry Point]
  # {method} {0x000000014f5f8aa0} 'addExportsToAllUnnamed0' '(Ljava/lang/Module;Ljava/lang/String;)V' in 'java/lang/Module'
  # parm0:    rsi:rsi   = 'java/lang/Module'
  # parm1:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x0000000124372640: mov    0x8(%rsi),%r10d
  0x0000000124372644: movabs $0x800000000,%r12
  0x000000012437264e: add    %r12,%r10
  0x0000000124372651: xor    %r12,%r12
  0x0000000124372654: cmp    %r10,%rax
  0x0000000124372657: je     0x0000000124372668
  0x000000012437265d: jmpq   0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x0000000124372662: nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x0000000124372668: mov    %eax,-0x14000(%rsp)
  0x000000012437266f: push   %rbp
  0x0000000124372670: mov    %rsp,%rbp
  0x0000000124372673: sub    $0x40,%rsp
  0x0000000124372677: mov    %rdx,0x8(%rsp)
  0x000000012437267c: cmp    $0x0,%rdx
  0x0000000124372680: lea    0x8(%rsp),%rcx
  0x0000000124372685: cmove  0x8(%rsp),%rcx
  0x000000012437268b: mov    %rsi,(%rsp)
  0x000000012437268f: cmp    $0x0,%rsi
  0x0000000124372693: lea    (%rsp),%rdx
  0x0000000124372697: cmove  (%rsp),%rdx
  0x000000012437269c: movabs $0x43fc020c0,%r14  ;   {oop(a 'java/lang/Class'{0x000000043fc020c0} = 'java/lang/Module')}
  0x00000001243726a6: mov    %r14,0x30(%rsp)
  0x00000001243726ab: lea    0x30(%rsp),%r14
  0x00000001243726b0: mov    %r14,%rsi          ; ImmutableOopMap{[8]=Oop [0]=Oop [48]=Oop }
  0x00000001243726b3: vzeroupper 
  0x00000001243726b6: movabs $0x1243726b3,%r10  ;   {internal_word}
  0x00000001243726c0: mov    %r10,0x328(%r15)
  0x00000001243726c7: mov    %rsp,0x320(%r15)
  0x00000001243726ce: cmpb   $0x0,-0x151b85fb(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x00000001243726d5: je     0x0000000124372711
  0x00000001243726db: push   %rsi
  0x00000001243726dc: push   %rdx
  0x00000001243726dd: push   %rcx
  0x00000001243726de: movabs $0x14f5f8aa0,%rsi  ;   {metadata({method} {0x000000014f5f8aa0} 'addExportsToAllUnnamed0' '(Ljava/lang/Module;Ljava/lang/String;)V' in 'java/lang/Module')}
  0x00000001243726e8: mov    %r15,%rdi
  0x00000001243726eb: test   $0xf,%esp
  0x00000001243726f1: je     0x0000000124372709
  0x00000001243726f7: sub    $0x8,%rsp
  0x00000001243726fb: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000000124372700: add    $0x8,%rsp
  0x0000000124372704: jmpq   0x000000012437270e
  0x0000000124372709: callq  0x000000010ee9793e  ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x000000012437270e: pop    %rcx
  0x000000012437270f: pop    %rdx
  0x0000000124372710: pop    %rsi
  0x0000000124372711: lea    0x340(%r15),%rdi
  0x0000000124372718: movl   $0x4,0x3b8(%r15)
  0x0000000124372723: callq  0x000000010640e0df  ;   {runtime_call Java_java_lang_Module_addExportsToAllUnnamed0}
  0x0000000124372728: vzeroupper 
  0x000000012437272b: movl   $0x5,0x3b8(%r15)
  0x0000000124372736: lock addl $0x0,-0x40(%rsp)
  0x000000012437273c: testb  $0x8,0x108(%r15)
  0x0000000124372744: jne    0x000000012437275b
  0x000000012437274a: cmpl   $0x0,0xd8(%r15)
  0x0000000124372755: je     0x0000000124372777
  0x000000012437275b: vzeroupper 
  0x000000012437275e: mov    %r15,%rdi
  0x0000000124372761: mov    %rsp,%r12
  0x0000000124372764: sub    $0x0,%rsp
  0x0000000124372768: and    $0xfffffffffffffff0,%rsp
  0x000000012437276c: callq  0x000000010ef71148  ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000000124372771: mov    %r12,%rsp
  0x0000000124372774: xor    %r12,%r12
  0x0000000124372777: movl   $0x8,0x3b8(%r15)
  0x0000000124372782: cmpl   $0x2,0x408(%r15)
  0x000000012437278d: je     0x000000012437281b
  0x0000000124372793: cmpb   $0x0,-0x151b86c0(%rip)        # 0x000000010f1ba0da
                                                ;   {external_word}
  0x000000012437279a: je     0x00000001243727d0
  0x00000001243727a0: movabs $0x14f5f8aa0,%rsi  ;   {metadata({method} {0x000000014f5f8aa0} 'addExportsToAllUnnamed0' '(Ljava/lang/Module;Ljava/lang/String;)V' in 'java/lang/Module')}
  0x00000001243727aa: mov    %r15,%rdi
  0x00000001243727ad: test   $0xf,%esp
  0x00000001243727b3: je     0x00000001243727cb
  0x00000001243727b9: sub    $0x8,%rsp
  0x00000001243727bd: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00000001243727c2: add    $0x8,%rsp
  0x00000001243727c6: jmpq   0x00000001243727d0
  0x00000001243727cb: callq  0x000000010ee979b8  ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00000001243727d0: movabs $0x0,%r10
  0x00000001243727da: mov    %r10,0x320(%r15)
  0x00000001243727e1: movabs $0x0,%r10
  0x00000001243727eb: mov    %r10,0x328(%r15)
  0x00000001243727f2: vzeroupper 
  0x00000001243727f5: mov    0xe0(%r15),%rcx
  0x00000001243727fc: movl   $0x0,0x100(%rcx)
  0x0000000124372806: leaveq 
  0x0000000124372807: cmpq   $0x0,0x8(%r15)
  0x000000012437280f: jne    0x0000000124372816
  0x0000000124372815: retq   
  0x0000000124372816: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000000012437281b: vzeroupper 
  0x000000012437281e: mov    %rsp,%r12
  0x0000000124372821: sub    $0x0,%rsp
  0x0000000124372825: and    $0xfffffffffffffff0,%rsp
  0x0000000124372829: callq  0x000000010ee99586  ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x000000012437282e: mov    %r12,%rsp
  0x0000000124372831: xor    %r12,%r12
  0x0000000124372834: jmpq   0x0000000124372793
  0x0000000124372839: hlt    
  0x000000012437283a: hlt    
  0x000000012437283b: hlt    
  0x000000012437283c: hlt    
  0x000000012437283d: hlt    
  0x000000012437283e: hlt    
  0x000000012437283f: hlt    
Compiled method (c1)     200   56       2       java.util.ImmutableCollections$Set12::size (13 bytes)
 total in heap  [0x000000011d14a590,0x000000011d14a8c8] = 824
 relocation     [0x000000011d14a708,0x000000011d14a730] = 40
 main code      [0x000000011d14a740,0x000000011d14a820] = 224
 stub code      [0x000000011d14a820,0x000000011d14a850] = 48
 metadata       [0x000000011d14a850,0x000000011d14a858] = 8
 scopes data    [0x000000011d14a858,0x000000011d14a870] = 24
 scopes pcs     [0x000000011d14a870,0x000000011d14a8c0] = 80
 dependencies   [0x000000011d14a8c0,0x000000011d14a8c8] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$Set12.size()I  [0x000000011d14a740, 0x000000011d14a850]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6beeb0} 'size' '()I' in 'java/util/ImmutableCollections$Set12'
  #           [sp+0x40]  (sp of caller)
  0x000000011d14a740: mov    0x8(%rsi),%r10d
  0x000000011d14a744: movabs $0x800000000,%r12
  0x000000011d14a74e: add    %r12,%r10
  0x000000011d14a751: xor    %r12,%r12
  0x000000011d14a754: cmp    %rax,%r10
  0x000000011d14a757: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14a75d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14a760: mov    %eax,-0x14000(%rsp)
  0x000000011d14a767: push   %rbp
  0x000000011d14a768: sub    $0x30,%rsp
  0x000000011d14a76c: movabs $0x14f83a050,%rax
  0x000000011d14a776: mov    0x18(%rax),%edi
  0x000000011d14a779: add    $0x8,%edi
  0x000000011d14a77c: mov    %edi,0x18(%rax)
  0x000000011d14a77f: and    $0x3ff8,%edi
  0x000000011d14a785: cmp    $0x0,%edi
  0x000000011d14a788: je     0x000000011d14a7b9  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::size@0 (line 519)

  0x000000011d14a78e: mov    0x10(%rsi),%eax
  0x000000011d14a791: shl    $0x3,%rax          ;*getfield e1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12::size@1 (line 519)

  0x000000011d14a795: cmp    $0x0,%rax
  0x000000011d14a799: mov    $0x2,%eax
  0x000000011d14a79e: jne    0x000000011d14a7a9
  0x000000011d14a7a4: mov    $0x1,%eax
  0x000000011d14a7a9: add    $0x30,%rsp
  0x000000011d14a7ad: pop    %rbp
  0x000000011d14a7ae: mov    0x108(%r15),%r10
  0x000000011d14a7b5: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14a7b8: retq   
  0x000000011d14a7b9: movabs $0x14f6beeb0,%r10  ;   {metadata({method} {0x000000014f6beeb0} 'size' '()I' in 'java/util/ImmutableCollections$Set12')}
  0x000000011d14a7c3: mov    %r10,0x8(%rsp)
  0x000000011d14a7c8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14a7d0: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$Set12::size@-1 (line 519)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14a7d5: jmp    0x000000011d14a78e
  0x000000011d14a7d7: nop
  0x000000011d14a7d8: nop
  0x000000011d14a7d9: mov    0x420(%r15),%rax
  0x000000011d14a7e0: movabs $0x0,%r10
  0x000000011d14a7ea: mov    %r10,0x420(%r15)
  0x000000011d14a7f1: movabs $0x0,%r10
  0x000000011d14a7fb: mov    %r10,0x428(%r15)
  0x000000011d14a802: add    $0x30,%rsp
  0x000000011d14a806: pop    %rbp
  0x000000011d14a807: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14a80c: hlt    
  0x000000011d14a80d: hlt    
  0x000000011d14a80e: hlt    
  0x000000011d14a80f: hlt    
  0x000000011d14a810: hlt    
  0x000000011d14a811: hlt    
  0x000000011d14a812: hlt    
  0x000000011d14a813: hlt    
  0x000000011d14a814: hlt    
  0x000000011d14a815: hlt    
  0x000000011d14a816: hlt    
  0x000000011d14a817: hlt    
  0x000000011d14a818: hlt    
  0x000000011d14a819: hlt    
  0x000000011d14a81a: hlt    
  0x000000011d14a81b: hlt    
  0x000000011d14a81c: hlt    
  0x000000011d14a81d: hlt    
  0x000000011d14a81e: hlt    
  0x000000011d14a81f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14a820: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14a825: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14a82f: and    $0xfffffffffffffff0,%rsp
  0x000000011d14a833: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14a838: hlt    
[Deopt Handler Code]
  0x000000011d14a839: movabs $0x11d14a839,%r10  ;   {section_word}
  0x000000011d14a843: push   %r10
  0x000000011d14a845: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14a84a: hlt    
  0x000000011d14a84b: hlt    
  0x000000011d14a84c: hlt    
  0x000000011d14a84d: hlt    
  0x000000011d14a84e: hlt    
  0x000000011d14a84f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 149 Compiled method (c1)     201   43       2       java.util.HashMap::hash (20 bytes)
 total in heap  [0x000000011d14a190,0x000000011d14a510] = 896
 relocation     [0x000000011d14a308,0x000000011d14a338] = 48
 main code      [0x000000011d14a340,0x000000011d14a420] = 224
 stub code      [0x000000011d14a420,0x000000011d14a460] = 64
 metadata       [0x000000011d14a460,0x000000011d14a468] = 8
 scopes data    [0x000000011d14a468,0x000000011d14a498] = 48
 scopes pcs     [0x000000011d14a498,0x000000011d14a508] = 112
 dependencies   [0x000000011d14a508,0x000000011d14a510] = 8
----------------------------------------------------------------------
java/util/HashMap.hash(Ljava/lang/Object;)I  [0x000000011d14a340, 0x000000011d14a460]  288 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6cb1d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011d14a340: mov    %eax,-0x14000(%rsp)
  0x000000011d14a347: push   %rbp
  0x000000011d14a348: sub    $0x30,%rsp
  0x000000011d14a34c: movabs $0x14f7e4388,%rdi
  0x000000011d14a356: mov    0x18(%rdi),%ebx
  0x000000011d14a359: add    $0x8,%ebx
  0x000000011d14a35c: mov    %ebx,0x18(%rdi)
  0x000000011d14a35f: and    $0x3ff8,%ebx
  0x000000011d14a365: cmp    $0x0,%ebx
  0x000000011d14a368: je     0x000000011d14a3b0  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x000000011d14a36e: cmp    $0x0,%rsi
  0x000000011d14a372: jne    0x000000011d14a382  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x000000011d14a378: mov    $0x0,%esi
  0x000000011d14a37d: jmpq   0x000000011d14a39d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x000000011d14a382: data16 xchg %ax,%ax
  0x000000011d14a385: movabs $0x800008020,%rax
  0x000000011d14a38f: callq  0x000000011c5cac60  ; ImmutableOopMap{}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x000000011d14a394: mov    %rax,%rsi
  0x000000011d14a397: shr    $0x10,%esi
  0x000000011d14a39a: xor    %rax,%rsi
  0x000000011d14a39d: mov    %rsi,%rax
  0x000000011d14a3a0: add    $0x30,%rsp
  0x000000011d14a3a4: pop    %rbp
  0x000000011d14a3a5: mov    0x108(%r15),%r10
  0x000000011d14a3ac: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14a3af: retq   
  0x000000011d14a3b0: movabs $0x14f6cb1d0,%r10  ;   {metadata({method} {0x000000014f6cb1d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000011d14a3ba: mov    %r10,0x8(%rsp)
  0x000000011d14a3bf: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14a3c7: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14a3cc: jmp    0x000000011d14a36e
  0x000000011d14a3ce: nop
  0x000000011d14a3cf: nop
  0x000000011d14a3d0: mov    0x420(%r15),%rax
  0x000000011d14a3d7: movabs $0x0,%r10
  0x000000011d14a3e1: mov    %r10,0x420(%r15)
  0x000000011d14a3e8: movabs $0x0,%r10
  0x000000011d14a3f2: mov    %r10,0x428(%r15)
  0x000000011d14a3f9: add    $0x30,%rsp
  0x000000011d14a3fd: pop    %rbp
  0x000000011d14a3fe: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14a403: hlt    
  0x000000011d14a404: hlt    
  0x000000011d14a405: hlt    
  0x000000011d14a406: hlt    
  0x000000011d14a407: hlt    
  0x000000011d14a408: hlt    
  0x000000011d14a409: hlt    
  0x000000011d14a40a: hlt    
  0x000000011d14a40b: hlt    
  0x000000011d14a40c: hlt    
  0x000000011d14a40d: hlt    
  0x000000011d14a40e: hlt    
  0x000000011d14a40f: hlt    
  0x000000011d14a410: hlt    
  0x000000011d14a411: hlt    
  0x000000011d14a412: hlt    
  0x000000011d14a413: hlt    
  0x000000011d14a414: hlt    
  0x000000011d14a415: hlt    
  0x000000011d14a416: hlt    
  0x000000011d14a417: hlt    
  0x000000011d14a418: hlt    
  0x000000011d14a419: hlt    
  0x000000011d14a41a: hlt    
  0x000000011d14a41b: hlt    
  0x000000011d14a41c: hlt    
  0x000000011d14a41d: hlt    
  0x000000011d14a41e: hlt    
  0x000000011d14a41f: hlt    
[Stub Code]
  0x000000011d14a420: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d14a425: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14a42f: jmpq   0x000000011d14a42f  ;   {runtime_call}
[Exception Handler]
  0x000000011d14a434: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d14a439: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14a443: and    $0xfffffffffffffff0,%rsp
  0x000000011d14a447: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14a44c: hlt    
[Deopt Handler Code]
  0x000000011d14a44d: movabs $0x11d14a44d,%r10  ;   {section_word}
  0x000000011d14a457: push   %r10
  0x000000011d14a459: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14a45e: hlt    
  0x000000011d14a45f: hlt    

ImmutableOopMap{}pc offsets: 84 
ImmutableOopMap{rsi=Oop }pc offsets: 140 Compiled method (c1)     203   46       2       java.util.HashMap::get (23 bytes)
 total in heap  [0x000000011d149c10,0x000000011d14a108] = 1272
 relocation     [0x000000011d149d88,0x000000011d149dd0] = 72
 main code      [0x000000011d149de0,0x000000011d149f20] = 320
 stub code      [0x000000011d149f20,0x000000011d149f70] = 80
 metadata       [0x000000011d149f70,0x000000011d149f80] = 16
 scopes data    [0x000000011d149f80,0x000000011d14a000] = 128
 scopes pcs     [0x000000011d14a000,0x000000011d14a0f0] = 240
 dependencies   [0x000000011d14a0f0,0x000000011d14a0f8] = 8
 nul chk table  [0x000000011d14a0f8,0x000000011d14a108] = 16
----------------------------------------------------------------------
java/util/HashMap.get(Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011d149de0, 0x000000011d149f70]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6cbc28} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x70]  (sp of caller)
  0x000000011d149de0: mov    0x8(%rsi),%r10d
  0x000000011d149de4: movabs $0x800000000,%r12
  0x000000011d149dee: add    %r12,%r10
  0x000000011d149df1: xor    %r12,%r12
  0x000000011d149df4: cmp    %rax,%r10
  0x000000011d149df7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d149dfd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d149e00: mov    %eax,-0x14000(%rsp)
  0x000000011d149e07: push   %rbp
  0x000000011d149e08: sub    $0x60,%rsp
  0x000000011d149e0c: movabs $0x14f7eb958,%rdi
  0x000000011d149e16: mov    0x18(%rdi),%ebx
  0x000000011d149e19: add    $0x8,%ebx
  0x000000011d149e1c: mov    %ebx,0x18(%rdi)
  0x000000011d149e1f: and    $0x3ff8,%ebx
  0x000000011d149e25: cmp    $0x0,%ebx
  0x000000011d149e28: je     0x000000011d149ebf  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@0 (line 552)

  0x000000011d149e2e: cmp    $0x0,%rdx
  0x000000011d149e32: jne    0x000000011d149e45  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)

  0x000000011d149e38: mov    $0x0,%edi
  0x000000011d149e3d: mov    %rdx,%rcx
  0x000000011d149e40: jmpq   0x000000011d149e7a  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)

  0x000000011d149e45: mov    %rsi,0x48(%rsp)
  0x000000011d149e4a: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)

  0x000000011d149e4d: mov    %rdx,0x40(%rsp)
  0x000000011d149e52: data16 xchg %ax,%ax
  0x000000011d149e55: movabs $0x800001808,%rax
  0x000000011d149e5f: callq  0x000000011d13ea60  ; ImmutableOopMap{[72]=Oop [64]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)
                                                ;   {virtual_call}
  0x000000011d149e64: mov    %rax,%rdx
  0x000000011d149e67: shr    $0x10,%edx
  0x000000011d149e6a: xor    %rax,%rdx
  0x000000011d149e6d: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::get@2 (line 552)

  0x000000011d149e70: mov    0x40(%rsp),%rcx
  0x000000011d149e75: mov    0x48(%rsp),%rsi
  0x000000011d149e7a: mov    %rdi,%rdx          ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 552)

  0x000000011d149e7d: xchg   %ax,%ax
  0x000000011d149e7f: callq  0x000000011d148ea0  ; ImmutableOopMap{}
                                                ;*invokevirtual getNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@6 (line 552)
                                                ;   {optimized virtual_call}
  0x000000011d149e84: cmp    $0x0,%rax
  0x000000011d149e88: jne    0x000000011d149ea8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@11 (line 552)

  0x000000011d149e8e: movabs $0x0,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@15 (line 552)
                                                ;   {oop(NULL)}
  0x000000011d149e98: add    $0x60,%rsp
  0x000000011d149e9c: pop    %rbp
  0x000000011d149e9d: mov    0x108(%r15),%r10
  0x000000011d149ea4: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d149ea7: retq   
  0x000000011d149ea8: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x000000011d149ee0
  0x000000011d149eab: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 552)

  0x000000011d149eaf: add    $0x60,%rsp
  0x000000011d149eb3: pop    %rbp
  0x000000011d149eb4: mov    0x108(%r15),%r10
  0x000000011d149ebb: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d149ebe: retq   
  0x000000011d149ebf: movabs $0x14f6cbc28,%r10  ;   {metadata({method} {0x000000014f6cbc28} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011d149ec9: mov    %r10,0x8(%rsp)
  0x000000011d149ece: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d149ed6: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::get@-1 (line 552)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d149edb: jmpq   0x000000011d149e2e
  0x000000011d149ee0: callq  0x000000011c68cf20  ; ImmutableOopMap{}
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::get@19 (line 552)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d149ee5: nop
  0x000000011d149ee6: nop
  0x000000011d149ee7: mov    0x420(%r15),%rax
  0x000000011d149eee: movabs $0x0,%r10
  0x000000011d149ef8: mov    %r10,0x420(%r15)
  0x000000011d149eff: movabs $0x0,%r10
  0x000000011d149f09: mov    %r10,0x428(%r15)
  0x000000011d149f10: add    $0x60,%rsp
  0x000000011d149f14: pop    %rbp
  0x000000011d149f15: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d149f1a: hlt    
  0x000000011d149f1b: hlt    
  0x000000011d149f1c: hlt    
  0x000000011d149f1d: hlt    
  0x000000011d149f1e: hlt    
  0x000000011d149f1f: hlt    
[Stub Code]
  0x000000011d149f20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d149f25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d149f2f: jmpq   0x000000011d149f2f  ;   {runtime_call}
  0x000000011d149f34: nop
  0x000000011d149f35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d149f3f: jmpq   0x000000011d149f3f  ;   {runtime_call}
[Exception Handler]
  0x000000011d149f44: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d149f49: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d149f53: and    $0xfffffffffffffff0,%rsp
  0x000000011d149f57: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d149f5c: hlt    
[Deopt Handler Code]
  0x000000011d149f5d: movabs $0x11d149f5d,%r10  ;   {section_word}
  0x000000011d149f67: push   %r10
  0x000000011d149f69: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d149f6e: hlt    
  0x000000011d149f6f: hlt    

ImmutableOopMap{[72]=Oop [64]=Oop }pc offsets: 132 
ImmutableOopMap{}pc offsets: 164 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 251 
ImmutableOopMap{}pc offsets: 261 Compiled method (c1)     206   50       2       java.util.HashMap::put (13 bytes)
 total in heap  [0x000000011d149710,0x000000011d149ba0] = 1168
 relocation     [0x000000011d149888,0x000000011d1498c8] = 64
 main code      [0x000000011d1498e0,0x000000011d149a20] = 320
 stub code      [0x000000011d149a20,0x000000011d149a70] = 80
 metadata       [0x000000011d149a70,0x000000011d149a80] = 16
 scopes data    [0x000000011d149a80,0x000000011d149ae8] = 104
 scopes pcs     [0x000000011d149ae8,0x000000011d149b98] = 176
 dependencies   [0x000000011d149b98,0x000000011d149ba0] = 8
----------------------------------------------------------------------
java/util/HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011d1498e0, 0x000000011d149a70]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6cbf68} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x90]  (sp of caller)
  0x000000011d1498e0: mov    0x8(%rsi),%r10d
  0x000000011d1498e4: movabs $0x800000000,%r12
  0x000000011d1498ee: add    %r12,%r10
  0x000000011d1498f1: xor    %r12,%r12
  0x000000011d1498f4: cmp    %rax,%r10
  0x000000011d1498f7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1498fd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d149900: mov    %eax,-0x14000(%rsp)
  0x000000011d149907: push   %rbp
  0x000000011d149908: sub    $0x80,%rsp
  0x000000011d14990f: movabs $0x14f7e4338,%rdi
  0x000000011d149919: mov    0x18(%rdi),%ebx
  0x000000011d14991c: add    $0x8,%ebx
  0x000000011d14991f: mov    %ebx,0x18(%rdi)
  0x000000011d149922: and    $0x3ff8,%ebx
  0x000000011d149928: cmp    $0x0,%ebx
  0x000000011d14992b: je     0x000000011d1499af  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@0 (line 607)

  0x000000011d149931: cmp    $0x0,%rdx
  0x000000011d149935: jne    0x000000011d14994b  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)

  0x000000011d14993b: mov    $0x0,%edi
  0x000000011d149940: mov    %rcx,%r8
  0x000000011d149943: mov    %rdx,%rcx
  0x000000011d149946: jmpq   0x000000011d149987  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)

  0x000000011d14994b: mov    %rcx,0x60(%rsp)
  0x000000011d149950: mov    %rsi,0x68(%rsp)
  0x000000011d149955: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)

  0x000000011d149958: mov    %rdx,0x58(%rsp)
  0x000000011d14995d: movabs $0x800001808,%rax
  0x000000011d149967: callq  0x000000011c5cab60  ; ImmutableOopMap{[104]=Oop [88]=Oop [96]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ;   {virtual_call}
  0x000000011d14996c: mov    %rax,%rdx
  0x000000011d14996f: shr    $0x10,%edx
  0x000000011d149972: xor    %rax,%rdx
  0x000000011d149975: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)

  0x000000011d149978: mov    0x60(%rsp),%r8
  0x000000011d14997d: mov    0x58(%rsp),%rcx
  0x000000011d149982: mov    0x68(%rsp),%rsi
  0x000000011d149987: mov    %rdi,%rdx
  0x000000011d14998a: mov    $0x0,%r9d
  0x000000011d149990: mov    $0x1,%edi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 607)

  0x000000011d149995: xchg   %ax,%ax
  0x000000011d149997: callq  0x000000011d147aa0  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 607)
                                                ;   {optimized virtual_call}
  0x000000011d14999c: add    $0x80,%rsp
  0x000000011d1499a3: pop    %rbp
  0x000000011d1499a4: mov    0x108(%r15),%r10
  0x000000011d1499ab: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1499ae: retq   
  0x000000011d1499af: movabs $0x14f6cbf68,%r10  ;   {metadata({method} {0x000000014f6cbf68} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011d1499b9: mov    %r10,0x8(%rsp)
  0x000000011d1499be: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d1499c6: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 607)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1499cb: jmpq   0x000000011d149931
  0x000000011d1499d0: nop
  0x000000011d1499d1: nop
  0x000000011d1499d2: mov    0x420(%r15),%rax
  0x000000011d1499d9: movabs $0x0,%r10
  0x000000011d1499e3: mov    %r10,0x420(%r15)
  0x000000011d1499ea: movabs $0x0,%r10
  0x000000011d1499f4: mov    %r10,0x428(%r15)
  0x000000011d1499fb: add    $0x80,%rsp
  0x000000011d149a02: pop    %rbp
  0x000000011d149a03: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d149a08: hlt    
  0x000000011d149a09: hlt    
  0x000000011d149a0a: hlt    
  0x000000011d149a0b: hlt    
  0x000000011d149a0c: hlt    
  0x000000011d149a0d: hlt    
  0x000000011d149a0e: hlt    
  0x000000011d149a0f: hlt    
  0x000000011d149a10: hlt    
  0x000000011d149a11: hlt    
  0x000000011d149a12: hlt    
  0x000000011d149a13: hlt    
  0x000000011d149a14: hlt    
  0x000000011d149a15: hlt    
  0x000000011d149a16: hlt    
  0x000000011d149a17: hlt    
  0x000000011d149a18: hlt    
  0x000000011d149a19: hlt    
  0x000000011d149a1a: hlt    
  0x000000011d149a1b: hlt    
  0x000000011d149a1c: hlt    
  0x000000011d149a1d: hlt    
  0x000000011d149a1e: hlt    
  0x000000011d149a1f: hlt    
[Stub Code]
  0x000000011d149a20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d149a25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d149a2f: jmpq   0x000000011d149a2f  ;   {runtime_call}
  0x000000011d149a34: nop
  0x000000011d149a35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d149a3f: jmpq   0x000000011d149a3f  ;   {runtime_call}
[Exception Handler]
  0x000000011d149a44: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d149a49: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d149a53: and    $0xfffffffffffffff0,%rsp
  0x000000011d149a57: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d149a5c: hlt    
[Deopt Handler Code]
  0x000000011d149a5d: movabs $0x11d149a5d,%r10  ;   {section_word}
  0x000000011d149a67: push   %r10
  0x000000011d149a69: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d149a6e: hlt    
  0x000000011d149a6f: hlt    

ImmutableOopMap{[104]=Oop [88]=Oop [96]=Oop }pc offsets: 140 
ImmutableOopMap{}pc offsets: 188 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 235 Compiled method (c1)     209   24       1       java.lang.module.ModuleReference::descriptor (5 bytes)
 total in heap  [0x0000000124372890,0x0000000124372b50] = 704
 relocation     [0x0000000124372a08,0x0000000124372a28] = 32
 main code      [0x0000000124372a40,0x0000000124372ac0] = 128
 stub code      [0x0000000124372ac0,0x0000000124372af0] = 48
 metadata       [0x0000000124372af0,0x0000000124372af8] = 8
 scopes data    [0x0000000124372af8,0x0000000124372b08] = 16
 scopes pcs     [0x0000000124372b08,0x0000000124372b48] = 64
 dependencies   [0x0000000124372b48,0x0000000124372b50] = 8
----------------------------------------------------------------------
java/lang/module/ModuleReference.descriptor()Ljava/lang/module/ModuleDescriptor;  [0x0000000124372a40, 0x0000000124372af0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f7eb628} 'descriptor' '()Ljava/lang/module/ModuleDescriptor;' in 'java/lang/module/ModuleReference'
  #           [sp+0x40]  (sp of caller)
  0x0000000124372a40: mov    0x8(%rsi),%r10d
  0x0000000124372a44: movabs $0x800000000,%r12
  0x0000000124372a4e: add    %r12,%r10
  0x0000000124372a51: xor    %r12,%r12
  0x0000000124372a54: cmp    %rax,%r10
  0x0000000124372a57: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x0000000124372a5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000124372a60: mov    %eax,-0x14000(%rsp)
  0x0000000124372a67: push   %rbp
  0x0000000124372a68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleReference::descriptor@0 (line 74)

  0x0000000124372a6c: mov    0xc(%rsi),%eax
  0x0000000124372a6f: shl    $0x3,%rax          ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleReference::descriptor@1 (line 74)

  0x0000000124372a73: add    $0x30,%rsp
  0x0000000124372a77: pop    %rbp
  0x0000000124372a78: mov    0x108(%r15),%r10
  0x0000000124372a7f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000124372a82: retq   
  0x0000000124372a83: nop
  0x0000000124372a84: nop
  0x0000000124372a85: mov    0x420(%r15),%rax
  0x0000000124372a8c: movabs $0x0,%r10
  0x0000000124372a96: mov    %r10,0x420(%r15)
  0x0000000124372a9d: movabs $0x0,%r10
  0x0000000124372aa7: mov    %r10,0x428(%r15)
  0x0000000124372aae: add    $0x30,%rsp
  0x0000000124372ab2: pop    %rbp
  0x0000000124372ab3: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000124372ab8: hlt    
  0x0000000124372ab9: hlt    
  0x0000000124372aba: hlt    
  0x0000000124372abb: hlt    
  0x0000000124372abc: hlt    
  0x0000000124372abd: hlt    
  0x0000000124372abe: hlt    
  0x0000000124372abf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000124372ac0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x0000000124372ac5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x0000000124372acf: and    $0xfffffffffffffff0,%rsp
  0x0000000124372ad3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000124372ad8: hlt    
[Deopt Handler Code]
  0x0000000124372ad9: movabs $0x124372ad9,%r10  ;   {section_word}
  0x0000000124372ae3: push   %r10
  0x0000000124372ae5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x0000000124372aea: hlt    
  0x0000000124372aeb: hlt    
  0x0000000124372aec: hlt    
  0x0000000124372aed: hlt    
  0x0000000124372aee: hlt    
  0x0000000124372aef: hlt    
Compiled method (c1)     210   54       2       java.util.HashMap::afterNodeInsertion (1 bytes)
 total in heap  [0x000000011d14cb90,0x000000011d14ce98] = 776
 relocation     [0x000000011d14cd08,0x000000011d14cd30] = 40
 main code      [0x000000011d14cd40,0x000000011d14ce00] = 192
 stub code      [0x000000011d14ce00,0x000000011d14ce30] = 48
 metadata       [0x000000011d14ce30,0x000000011d14ce38] = 8
 scopes data    [0x000000011d14ce38,0x000000011d14ce50] = 24
 scopes pcs     [0x000000011d14ce50,0x000000011d14ce90] = 64
 dependencies   [0x000000011d14ce90,0x000000011d14ce98] = 8
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion(Z)V  [0x000000011d14cd40, 0x000000011d14ce30]  240 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6cec90} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x000000011d14cd40: mov    0x8(%rsi),%r10d
  0x000000011d14cd44: movabs $0x800000000,%r12
  0x000000011d14cd4e: add    %r12,%r10
  0x000000011d14cd51: xor    %r12,%r12
  0x000000011d14cd54: cmp    %rax,%r10
  0x000000011d14cd57: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14cd5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14cd60: mov    %eax,-0x14000(%rsp)
  0x000000011d14cd67: push   %rbp
  0x000000011d14cd68: sub    $0x30,%rsp
  0x000000011d14cd6c: movabs $0x14f7e5158,%rdi
  0x000000011d14cd76: mov    0x18(%rdi),%ebx
  0x000000011d14cd79: add    $0x8,%ebx
  0x000000011d14cd7c: mov    %ebx,0x18(%rdi)
  0x000000011d14cd7f: and    $0x3ff8,%ebx
  0x000000011d14cd85: cmp    $0x0,%ebx
  0x000000011d14cd88: je     0x000000011d14cd9e  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1830)

  0x000000011d14cd8e: add    $0x30,%rsp
  0x000000011d14cd92: pop    %rbp
  0x000000011d14cd93: mov    0x108(%r15),%r10
  0x000000011d14cd9a: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14cd9d: retq   
  0x000000011d14cd9e: movabs $0x14f6cec90,%r10  ;   {metadata({method} {0x000000014f6cec90} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x000000011d14cda8: mov    %r10,0x8(%rsp)
  0x000000011d14cdad: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14cdb5: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1830)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14cdba: jmp    0x000000011d14cd8e
  0x000000011d14cdbc: nop
  0x000000011d14cdbd: nop
  0x000000011d14cdbe: mov    0x420(%r15),%rax
  0x000000011d14cdc5: movabs $0x0,%r10
  0x000000011d14cdcf: mov    %r10,0x420(%r15)
  0x000000011d14cdd6: movabs $0x0,%r10
  0x000000011d14cde0: mov    %r10,0x428(%r15)
  0x000000011d14cde7: add    $0x30,%rsp
  0x000000011d14cdeb: pop    %rbp
  0x000000011d14cdec: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14cdf1: hlt    
  0x000000011d14cdf2: hlt    
  0x000000011d14cdf3: hlt    
  0x000000011d14cdf4: hlt    
  0x000000011d14cdf5: hlt    
  0x000000011d14cdf6: hlt    
  0x000000011d14cdf7: hlt    
  0x000000011d14cdf8: hlt    
  0x000000011d14cdf9: hlt    
  0x000000011d14cdfa: hlt    
  0x000000011d14cdfb: hlt    
  0x000000011d14cdfc: hlt    
  0x000000011d14cdfd: hlt    
  0x000000011d14cdfe: hlt    
  0x000000011d14cdff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14ce00: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14ce05: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14ce0f: and    $0xfffffffffffffff0,%rsp
  0x000000011d14ce13: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14ce18: hlt    
[Deopt Handler Code]
  0x000000011d14ce19: movabs $0x11d14ce19,%r10  ;   {section_word}
  0x000000011d14ce23: push   %r10
  0x000000011d14ce25: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14ce2a: hlt    
  0x000000011d14ce2b: hlt    
  0x000000011d14ce2c: hlt    
  0x000000011d14ce2d: hlt    
  0x000000011d14ce2e: hlt    
  0x000000011d14ce2f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 122 Compiled method (c1)     212   53       2       java.util.HashMap::newNode (13 bytes)
 total in heap  [0x000000011d14c610,0x000000011d14cb48] = 1336
 relocation     [0x000000011d14c788,0x000000011d14c7c0] = 56
 main code      [0x000000011d14c7c0,0x000000011d14ca20] = 608
 stub code      [0x000000011d14ca20,0x000000011d14ca50] = 48
 metadata       [0x000000011d14ca50,0x000000011d14ca60] = 16
 scopes data    [0x000000011d14ca60,0x000000011d14cab0] = 80
 scopes pcs     [0x000000011d14cab0,0x000000011d14cb40] = 144
 dependencies   [0x000000011d14cb40,0x000000011d14cb48] = 8
----------------------------------------------------------------------
java/util/HashMap.newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;  [0x000000011d14c7c0, 0x000000011d14ca50]  656 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6ce7c0} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/util/HashMap$Node'
  #           [sp+0x70]  (sp of caller)
  0x000000011d14c7c0: mov    0x8(%rsi),%r10d
  0x000000011d14c7c4: movabs $0x800000000,%r12
  0x000000011d14c7ce: add    %r12,%r10
  0x000000011d14c7d1: xor    %r12,%r12
  0x000000011d14c7d4: cmp    %rax,%r10
  0x000000011d14c7d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14c7dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14c7e0: mov    %eax,-0x14000(%rsp)
  0x000000011d14c7e7: push   %rbp
  0x000000011d14c7e8: sub    $0x60,%rsp
  0x000000011d14c7ec: mov    %rdx,%rbx
  0x000000011d14c7ef: mov    %rcx,%r11
  0x000000011d14c7f2: movabs $0x14f7e4ed8,%rdx
  0x000000011d14c7fc: mov    0x18(%rdx),%edi
  0x000000011d14c7ff: add    $0x8,%edi
  0x000000011d14c802: mov    %edi,0x18(%rdx)
  0x000000011d14c805: and    $0x3ff8,%edi
  0x000000011d14c80b: cmp    $0x0,%edi
  0x000000011d14c80e: je     0x000000011d14c908
  0x000000011d14c814: movabs $0x800032408,%rdx  ;   {metadata('java/util/HashMap$Node')}
  0x000000011d14c81e: mov    0x118(%r15),%rax
  0x000000011d14c825: lea    0x20(%rax),%rdi
  0x000000011d14c829: cmp    0x128(%r15),%rdi
  0x000000011d14c830: ja     0x000000011d14c929
  0x000000011d14c836: mov    %rdi,0x118(%r15)
  0x000000011d14c83d: mov    0xb8(%rdx),%rcx
  0x000000011d14c844: mov    %rcx,(%rax)
  0x000000011d14c847: mov    %rdx,%rcx
  0x000000011d14c84a: movabs $0x800000000,%r12
  0x000000011d14c854: sub    %r12,%rcx
  0x000000011d14c857: xor    %r12,%r12
  0x000000011d14c85a: mov    %ecx,0x8(%rax)
  0x000000011d14c85d: xor    %rcx,%rcx
  0x000000011d14c860: mov    %ecx,0xc(%rax)
  0x000000011d14c863: xor    %rcx,%rcx
  0x000000011d14c866: mov    %rcx,0x10(%rax)
  0x000000011d14c86a: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)

  0x000000011d14c86e: mov    %ebx,0xc(%rax)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@6 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x000000011d14c871: movsbl 0x30(%r15),%esi
  0x000000011d14c876: cmp    $0x0,%esi
  0x000000011d14c879: jne    0x000000011d14c936
  0x000000011d14c87f: mov    %r11,%r10
  0x000000011d14c882: shr    $0x3,%r10
  0x000000011d14c886: mov    %r10d,0x10(%rax)
  0x000000011d14c88a: mov    %rax,%rsi
  0x000000011d14c88d: xor    %r11,%rsi
  0x000000011d14c890: shr    $0x16,%rsi
  0x000000011d14c894: cmp    $0x0,%rsi
  0x000000011d14c898: jne    0x000000011d14c955  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x000000011d14c89e: movsbl 0x30(%r15),%esi
  0x000000011d14c8a3: cmp    $0x0,%esi
  0x000000011d14c8a6: jne    0x000000011d14c96d
  0x000000011d14c8ac: mov    %r8,%r10
  0x000000011d14c8af: shr    $0x3,%r10
  0x000000011d14c8b3: mov    %r10d,0x14(%rax)
  0x000000011d14c8b7: mov    %rax,%rsi
  0x000000011d14c8ba: xor    %r8,%rsi
  0x000000011d14c8bd: shr    $0x16,%rsi
  0x000000011d14c8c1: cmp    $0x0,%rsi
  0x000000011d14c8c5: jne    0x000000011d14c98c  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x000000011d14c8cb: movsbl 0x30(%r15),%esi
  0x000000011d14c8d0: cmp    $0x0,%esi
  0x000000011d14c8d3: jne    0x000000011d14c9a4
  0x000000011d14c8d9: mov    %r9,%r10
  0x000000011d14c8dc: shr    $0x3,%r10
  0x000000011d14c8e0: mov    %r10d,0x18(%rax)
  0x000000011d14c8e4: mov    %rax,%rsi
  0x000000011d14c8e7: xor    %r9,%rsi
  0x000000011d14c8ea: shr    $0x16,%rsi
  0x000000011d14c8ee: cmp    $0x0,%rsi
  0x000000011d14c8f2: jne    0x000000011d14c9c3  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1797)

  0x000000011d14c8f8: add    $0x60,%rsp
  0x000000011d14c8fc: pop    %rbp
  0x000000011d14c8fd: mov    0x108(%r15),%r10
  0x000000011d14c904: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14c907: retq   
  0x000000011d14c908: movabs $0x14f6ce7c0,%r10  ;   {metadata({method} {0x000000014f6ce7c0} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011d14c912: mov    %r10,0x8(%rsp)
  0x000000011d14c917: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14c91f: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop r11=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1797)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14c924: jmpq   0x000000011d14c814
  0x000000011d14c929: mov    %rdx,%rdx
  0x000000011d14c92c: callq  0x000000011c68d700  ; ImmutableOopMap{r11=Oop r8=Oop r9=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0 (line 1797)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011d14c931: jmpq   0x000000011d14c86e
  0x000000011d14c936: mov    0x10(%rax),%esi
  0x000000011d14c939: shl    $0x3,%rsi
  0x000000011d14c93d: cmp    $0x0,%rsi
  0x000000011d14c941: je     0x000000011d14c87f
  0x000000011d14c947: mov    %rsi,(%rsp)
  0x000000011d14c94b: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14c950: jmpq   0x000000011d14c87f
  0x000000011d14c955: cmp    $0x0,%r11
  0x000000011d14c959: je     0x000000011d14c89e
  0x000000011d14c95f: mov    %rax,(%rsp)
  0x000000011d14c963: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14c968: jmpq   0x000000011d14c89e
  0x000000011d14c96d: mov    0x14(%rax),%esi
  0x000000011d14c970: shl    $0x3,%rsi
  0x000000011d14c974: cmp    $0x0,%rsi
  0x000000011d14c978: je     0x000000011d14c8ac
  0x000000011d14c97e: mov    %rsi,(%rsp)
  0x000000011d14c982: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14c987: jmpq   0x000000011d14c8ac
  0x000000011d14c98c: cmp    $0x0,%r8
  0x000000011d14c990: je     0x000000011d14c8cb
  0x000000011d14c996: mov    %rax,(%rsp)
  0x000000011d14c99a: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14c99f: jmpq   0x000000011d14c8cb
  0x000000011d14c9a4: mov    0x18(%rax),%esi
  0x000000011d14c9a7: shl    $0x3,%rsi
  0x000000011d14c9ab: cmp    $0x0,%rsi
  0x000000011d14c9af: je     0x000000011d14c8d9
  0x000000011d14c9b5: mov    %rsi,(%rsp)
  0x000000011d14c9b9: callq  0x000000011c691b00  ;   {runtime_call g1_pre_barrier_slow}
  0x000000011d14c9be: jmpq   0x000000011d14c8d9
  0x000000011d14c9c3: cmp    $0x0,%r9
  0x000000011d14c9c7: je     0x000000011d14c8f8
  0x000000011d14c9cd: mov    %rax,(%rsp)
  0x000000011d14c9d1: callq  0x000000011c691d80  ;   {runtime_call g1_post_barrier_slow}
  0x000000011d14c9d6: jmpq   0x000000011d14c8f8
  0x000000011d14c9db: nop
  0x000000011d14c9dc: nop
  0x000000011d14c9dd: mov    0x420(%r15),%rax
  0x000000011d14c9e4: movabs $0x0,%r10
  0x000000011d14c9ee: mov    %r10,0x420(%r15)
  0x000000011d14c9f5: movabs $0x0,%r10
  0x000000011d14c9ff: mov    %r10,0x428(%r15)
  0x000000011d14ca06: add    $0x60,%rsp
  0x000000011d14ca0a: pop    %rbp
  0x000000011d14ca0b: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14ca10: hlt    
  0x000000011d14ca11: hlt    
  0x000000011d14ca12: hlt    
  0x000000011d14ca13: hlt    
  0x000000011d14ca14: hlt    
  0x000000011d14ca15: hlt    
  0x000000011d14ca16: hlt    
  0x000000011d14ca17: hlt    
  0x000000011d14ca18: hlt    
  0x000000011d14ca19: hlt    
  0x000000011d14ca1a: hlt    
  0x000000011d14ca1b: hlt    
  0x000000011d14ca1c: hlt    
  0x000000011d14ca1d: hlt    
  0x000000011d14ca1e: hlt    
  0x000000011d14ca1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14ca20: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14ca25: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14ca2f: and    $0xfffffffffffffff0,%rsp
  0x000000011d14ca33: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14ca38: hlt    
[Deopt Handler Code]
  0x000000011d14ca39: movabs $0x11d14ca39,%r10  ;   {section_word}
  0x000000011d14ca43: push   %r10
  0x000000011d14ca45: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14ca4a: hlt    
  0x000000011d14ca4b: hlt    
  0x000000011d14ca4c: hlt    
  0x000000011d14ca4d: hlt    
  0x000000011d14ca4e: hlt    
  0x000000011d14ca4f: hlt    

ImmutableOopMap{rsi=Oop r11=Oop r8=Oop r9=Oop }pc offsets: 356 
ImmutableOopMap{r11=Oop r8=Oop r9=Oop }pc offsets: 369 Compiled method (c1)     217   70       2       java.util.Set::of (4 bytes)
 total in heap  [0x000000011d14cf10,0x000000011d14d1f0] = 736
 relocation     [0x000000011d14d088,0x000000011d14d0b0] = 40
 main code      [0x000000011d14d0c0,0x000000011d14d160] = 160
 stub code      [0x000000011d14d160,0x000000011d14d190] = 48
 metadata       [0x000000011d14d190,0x000000011d14d198] = 8
 scopes data    [0x000000011d14d198,0x000000011d14d1a8] = 16
 scopes pcs     [0x000000011d14d1a8,0x000000011d14d1e8] = 64
 dependencies   [0x000000011d14d1e8,0x000000011d14d1f0] = 8
----------------------------------------------------------------------
java/util/Set.of()Ljava/util/Set;  [0x000000011d14d0c0, 0x000000011d14d190]  208 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6bd658} 'of' '()Ljava/util/Set;' in 'java/util/Set'
  #           [sp+0x40]  (sp of caller)
  0x000000011d14d0c0: mov    %eax,-0x14000(%rsp)
  0x000000011d14d0c7: push   %rbp
  0x000000011d14d0c8: sub    $0x30,%rsp
  0x000000011d14d0cc: movabs $0x14f7adba0,%rax
  0x000000011d14d0d6: mov    0x18(%rax),%esi
  0x000000011d14d0d9: add    $0x8,%esi
  0x000000011d14d0dc: mov    %esi,0x18(%rax)
  0x000000011d14d0df: and    $0x3ff8,%esi
  0x000000011d14d0e5: cmp    $0x0,%esi
  0x000000011d14d0e8: je     0x000000011d14d108  ;*invokestatic emptySet {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Set::of@0 (line 452)

  0x000000011d14d0ee: movabs $0x43fc23fd0,%rax  ;   {oop(a 'java/util/ImmutableCollections$SetN'{0x000000043fc23fd0})}
  0x000000011d14d0f8: add    $0x30,%rsp
  0x000000011d14d0fc: pop    %rbp
  0x000000011d14d0fd: mov    0x108(%r15),%r10
  0x000000011d14d104: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14d107: retq   
  0x000000011d14d108: movabs $0x14f6bd658,%r10  ;   {metadata({method} {0x000000014f6bd658} 'of' '()Ljava/util/Set;' in 'java/util/Set')}
  0x000000011d14d112: mov    %r10,0x8(%rsp)
  0x000000011d14d117: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14d11f: callq  0x000000011c691600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.Set::of@-1 (line 452)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14d124: jmp    0x000000011d14d0ee
  0x000000011d14d126: nop
  0x000000011d14d127: nop
  0x000000011d14d128: mov    0x420(%r15),%rax
  0x000000011d14d12f: movabs $0x0,%r10
  0x000000011d14d139: mov    %r10,0x420(%r15)
  0x000000011d14d140: movabs $0x0,%r10
  0x000000011d14d14a: mov    %r10,0x428(%r15)
  0x000000011d14d151: add    $0x30,%rsp
  0x000000011d14d155: pop    %rbp
  0x000000011d14d156: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14d15b: hlt    
  0x000000011d14d15c: hlt    
  0x000000011d14d15d: hlt    
  0x000000011d14d15e: hlt    
  0x000000011d14d15f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14d160: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14d165: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14d16f: and    $0xfffffffffffffff0,%rsp
  0x000000011d14d173: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14d178: hlt    
[Deopt Handler Code]
  0x000000011d14d179: movabs $0x11d14d179,%r10  ;   {section_word}
  0x000000011d14d183: push   %r10
  0x000000011d14d185: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14d18a: hlt    
  0x000000011d14d18b: hlt    
  0x000000011d14d18c: hlt    
  0x000000011d14d18d: hlt    
  0x000000011d14d18e: hlt    
  0x000000011d14d18f: hlt    

ImmutableOopMap{}pc offsets: 100 Compiled method (c1)     218   74       2       jdk.internal.module.ModuleBootstrap$2::next (52 bytes)
 total in heap  [0x000000011d14e210,0x000000011d14e828] = 1560
 relocation     [0x000000011d14e388,0x000000011d14e3f8] = 112
 main code      [0x000000011d14e400,0x000000011d14e5a0] = 416
 stub code      [0x000000011d14e5a0,0x000000011d14e620] = 128
 metadata       [0x000000011d14e620,0x000000011d14e628] = 8
 scopes data    [0x000000011d14e628,0x000000011d14e6b0] = 136
 scopes pcs     [0x000000011d14e6b0,0x000000011d14e820] = 368
 dependencies   [0x000000011d14e820,0x000000011d14e828] = 8
----------------------------------------------------------------------
jdk/internal/module/ModuleBootstrap$2.next()Ljava/lang/Object;  [0x000000011d14e400, 0x000000011d14e620]  544 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f85a5d8} 'next' '()Ljava/lang/Object;' in 'jdk/internal/module/ModuleBootstrap$2'
  #           [sp+0x50]  (sp of caller)
  0x000000011d14e400: mov    0x8(%rsi),%r10d
  0x000000011d14e404: movabs $0x800000000,%r12
  0x000000011d14e40e: add    %r12,%r10
  0x000000011d14e411: xor    %r12,%r12
  0x000000011d14e414: cmp    %rax,%r10
  0x000000011d14e417: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14e41d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14e420: mov    %eax,-0x14000(%rsp)
  0x000000011d14e427: push   %rbp
  0x000000011d14e428: sub    $0x40,%rsp
  0x000000011d14e42c: mov    %rsi,0x20(%rsp)
  0x000000011d14e431: movabs $0x14f85a8a0,%rdi
  0x000000011d14e43b: mov    0x18(%rdi),%ebx
  0x000000011d14e43e: add    $0x8,%ebx
  0x000000011d14e441: mov    %ebx,0x18(%rdi)
  0x000000011d14e444: and    $0x3ff8,%ebx
  0x000000011d14e44a: cmp    $0x0,%ebx
  0x000000011d14e44d: je     0x000000011d14e51e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@0 (line 985)

  0x000000011d14e453: mov    0xc(%rsi),%edi
  0x000000011d14e456: shl    $0x3,%rdi          ;*getfield val$iterator1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@1 (line 985)

  0x000000011d14e45a: mov    %rdi,%rsi          ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@4 (line 985)

  0x000000011d14e45d: movabs $0xffffffffffffffff,%rax
  0x000000011d14e467: callq  0x000000011c5c8f80  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@4 (line 985)
                                                ;   {virtual_call}
  0x000000011d14e46c: cmp    $0x0,%eax
  0x000000011d14e46f: mov    0x20(%rsp),%rsi
  0x000000011d14e474: jne    0x000000011d14e4cc  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@9 (line 985)

  0x000000011d14e47a: mov    0x10(%rsi),%edi
  0x000000011d14e47d: shl    $0x3,%rdi          ;*getfield val$iterator2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@23 (line 986)

  0x000000011d14e481: mov    %rdi,%rsi          ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@26 (line 986)

  0x000000011d14e484: nop
  0x000000011d14e485: movabs $0xffffffffffffffff,%rax
  0x000000011d14e48f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@26 (line 986)
                                                ;   {virtual_call}
  0x000000011d14e494: cmp    $0x0,%eax
  0x000000011d14e497: je     0x000000011d14e4f4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@31 (line 986)

  0x000000011d14e49d: mov    0x20(%rsp),%rsi
  0x000000011d14e4a2: mov    0x10(%rsi),%esi
  0x000000011d14e4a5: shl    $0x3,%rsi          ;*getfield val$iterator2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@35 (line 986)

  0x000000011d14e4a9: nopl   0x0(%rax)
  0x000000011d14e4ad: movabs $0xffffffffffffffff,%rax
  0x000000011d14e4b7: callq  0x000000011c5c8f80  ; ImmutableOopMap{}
                                                ;*invokeinterface next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@38 (line 986)
                                                ;   {virtual_call}
  0x000000011d14e4bc: add    $0x40,%rsp
  0x000000011d14e4c0: pop    %rbp
  0x000000011d14e4c1: mov    0x108(%r15),%r10
  0x000000011d14e4c8: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14e4cb: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@43 (line 986)

  0x000000011d14e4cc: mov    0xc(%rsi),%esi
  0x000000011d14e4cf: shl    $0x3,%rsi          ;*getfield val$iterator1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@13 (line 985)

  0x000000011d14e4d3: xchg   %ax,%ax
  0x000000011d14e4d5: movabs $0xffffffffffffffff,%rax
  0x000000011d14e4df: callq  0x000000011c5c8f80  ; ImmutableOopMap{}
                                                ;*invokeinterface next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@16 (line 985)
                                                ;   {virtual_call}
  0x000000011d14e4e4: add    $0x40,%rsp
  0x000000011d14e4e8: pop    %rbp
  0x000000011d14e4e9: mov    0x108(%r15),%r10
  0x000000011d14e4f0: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14e4f3: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@21 (line 985)

  0x000000011d14e4f4: nopl   0x0(%rax)
  0x000000011d14e4f8: jmpq   0x000000011d14e54e  ;   {no_reloc}
  0x000000011d14e4fd: add    %al,(%rax)
  0x000000011d14e4ff: add    %al,(%rax)
  0x000000011d14e501: add    %ch,%cl
  0x000000011d14e503: push   %rcx
  0x000000011d14e504: add    %al,(%rax)
  0x000000011d14e506: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@44 (line 987)

  0x000000011d14e509: lock mov %rax,0x28(%rsp)  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@48 (line 987)

  0x000000011d14e50f: callq  0x000000011c5c8d00  ; ImmutableOopMap{[40]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@48 (line 987)
                                                ;   {optimized virtual_call}
  0x000000011d14e514: mov    0x28(%rsp),%rax
  0x000000011d14e519: jmpq   0x000000011d14e58d
  0x000000011d14e51e: movabs $0x14f85a5d8,%r10  ;   {metadata({method} {0x000000014f85a5d8} 'next' '()Ljava/lang/Object;' in 'jdk/internal/module/ModuleBootstrap$2')}
  0x000000011d14e528: mov    %r10,0x8(%rsp)
  0x000000011d14e52d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14e535: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop [32]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@-1 (line 985)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14e53a: jmpq   0x000000011d14e453
  0x000000011d14e53f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d14e549: mov    $0xa050f00,%eax
  0x000000011d14e54e: callq  0x000000011c690680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@44 (line 987)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d14e553: jmp    0x000000011d14e4f8
  0x000000011d14e555: nop
  0x000000011d14e556: nop
  0x000000011d14e557: nop
  0x000000011d14e558: mov    %rdx,%rdx
  0x000000011d14e55b: callq  0x000000011c68d400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::next@44 (line 987)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011d14e560: jmp    0x000000011d14e507
  0x000000011d14e562: nop
  0x000000011d14e563: nop
  0x000000011d14e564: mov    0x420(%r15),%rax
  0x000000011d14e56b: movabs $0x0,%r10
  0x000000011d14e575: mov    %r10,0x420(%r15)
  0x000000011d14e57c: movabs $0x0,%r10
  0x000000011d14e586: mov    %r10,0x428(%r15)
  0x000000011d14e58d: add    $0x40,%rsp
  0x000000011d14e591: pop    %rbp
  0x000000011d14e592: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14e597: hlt    
  0x000000011d14e598: hlt    
  0x000000011d14e599: hlt    
  0x000000011d14e59a: hlt    
  0x000000011d14e59b: hlt    
  0x000000011d14e59c: hlt    
  0x000000011d14e59d: hlt    
  0x000000011d14e59e: hlt    
  0x000000011d14e59f: hlt    
[Stub Code]
  0x000000011d14e5a0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d14e5a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14e5af: jmpq   0x000000011d14e5af  ;   {runtime_call}
  0x000000011d14e5b4: nop
  0x000000011d14e5b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14e5bf: jmpq   0x000000011d14e5bf  ;   {runtime_call}
  0x000000011d14e5c4: nop
  0x000000011d14e5c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14e5cf: jmpq   0x000000011d14e5cf  ;   {runtime_call}
  0x000000011d14e5d4: nop
  0x000000011d14e5d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14e5df: jmpq   0x000000011d14e5df  ;   {runtime_call}
  0x000000011d14e5e4: nop
  0x000000011d14e5e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14e5ef: jmpq   0x000000011d14e5ef  ;   {runtime_call}
[Exception Handler]
  0x000000011d14e5f4: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d14e5f9: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14e603: and    $0xfffffffffffffff0,%rsp
  0x000000011d14e607: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14e60c: hlt    
[Deopt Handler Code]
  0x000000011d14e60d: movabs $0x11d14e60d,%r10  ;   {section_word}
  0x000000011d14e617: push   %r10
  0x000000011d14e619: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14e61e: hlt    
  0x000000011d14e61f: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 108 148 
ImmutableOopMap{}pc offsets: 188 228 
ImmutableOopMap{[40]=Oop }pc offsets: 276 
ImmutableOopMap{rsi=Oop [32]=Oop }pc offsets: 314 
ImmutableOopMap{}pc offsets: 339 352 Compiled method (c1)     223   72       2       jdk.internal.module.ModuleBootstrap$2::hasNext (30 bytes)
 total in heap  [0x000000011d14dd90,0x000000011d14e1e8] = 1112
 relocation     [0x000000011d14df08,0x000000011d14df48] = 64
 main code      [0x000000011d14df60,0x000000011d14e080] = 288
 stub code      [0x000000011d14e080,0x000000011d14e0d0] = 80
 metadata       [0x000000011d14e0d0,0x000000011d14e0d8] = 8
 scopes data    [0x000000011d14e0d8,0x000000011d14e120] = 72
 scopes pcs     [0x000000011d14e120,0x000000011d14e1e0] = 192
 dependencies   [0x000000011d14e1e0,0x000000011d14e1e8] = 8
----------------------------------------------------------------------
jdk/internal/module/ModuleBootstrap$2.hasNext()Z  [0x000000011d14df60, 0x000000011d14e0d0]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f85a4f8} 'hasNext' '()Z' in 'jdk/internal/module/ModuleBootstrap$2'
  #           [sp+0x40]  (sp of caller)
  0x000000011d14df60: mov    0x8(%rsi),%r10d
  0x000000011d14df64: movabs $0x800000000,%r12
  0x000000011d14df6e: add    %r12,%r10
  0x000000011d14df71: xor    %r12,%r12
  0x000000011d14df74: cmp    %rax,%r10
  0x000000011d14df77: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14df7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14df80: mov    %eax,-0x14000(%rsp)
  0x000000011d14df87: push   %rbp
  0x000000011d14df88: sub    $0x30,%rsp
  0x000000011d14df8c: movabs $0x14f85a850,%rdi
  0x000000011d14df96: mov    0x18(%rdi),%ebx
  0x000000011d14df99: add    $0x8,%ebx
  0x000000011d14df9c: mov    %ebx,0x18(%rdi)
  0x000000011d14df9f: and    $0x3ff8,%ebx
  0x000000011d14dfa5: cmp    $0x0,%ebx
  0x000000011d14dfa8: je     0x000000011d14e024  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@0 (line 981)

  0x000000011d14dfae: mov    0xc(%rsi),%edi
  0x000000011d14dfb1: shl    $0x3,%rdi          ;*getfield val$iterator1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@1 (line 981)

  0x000000011d14dfb5: mov    %rsi,0x20(%rsp)
  0x000000011d14dfba: mov    %rdi,%rsi          ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@4 (line 981)

  0x000000011d14dfbd: movabs $0xffffffffffffffff,%rax
  0x000000011d14dfc7: callq  0x000000011c5c8f80  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@4 (line 981)
                                                ;   {virtual_call}
  0x000000011d14dfcc: cmp    $0x0,%eax
  0x000000011d14dfcf: jne    0x000000011d14e00c  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@9 (line 981)

  0x000000011d14dfd5: mov    0x20(%rsp),%rsi
  0x000000011d14dfda: mov    0x10(%rsi),%esi
  0x000000011d14dfdd: shl    $0x3,%rsi          ;*getfield val$iterator2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@13 (line 981)

  0x000000011d14dfe1: nopl   0x0(%rax)
  0x000000011d14dfe5: movabs $0xffffffffffffffff,%rax
  0x000000011d14dfef: callq  0x000000011c5c8f80  ; ImmutableOopMap{}
                                                ;*invokeinterface hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@16 (line 981)
                                                ;   {virtual_call}
  0x000000011d14dff4: cmp    $0x0,%eax
  0x000000011d14dff7: mov    $0x0,%eax
  0x000000011d14dffc: je     0x000000011d14e007
  0x000000011d14e002: mov    $0x1,%eax
  0x000000011d14e007: jmpq   0x000000011d14e011  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@21 (line 981)

  0x000000011d14e00c: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@25 (line 981)

  0x000000011d14e011: and    $0x1,%eax
  0x000000011d14e014: add    $0x30,%rsp
  0x000000011d14e018: pop    %rbp
  0x000000011d14e019: mov    0x108(%r15),%r10
  0x000000011d14e020: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14e023: retq   
  0x000000011d14e024: movabs $0x14f85a4f8,%r10  ;   {metadata({method} {0x000000014f85a4f8} 'hasNext' '()Z' in 'jdk/internal/module/ModuleBootstrap$2')}
  0x000000011d14e02e: mov    %r10,0x8(%rsp)
  0x000000011d14e033: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14e03b: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.module.ModuleBootstrap$2::hasNext@-1 (line 981)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14e040: jmpq   0x000000011d14dfae
  0x000000011d14e045: nop
  0x000000011d14e046: nop
  0x000000011d14e047: mov    0x420(%r15),%rax
  0x000000011d14e04e: movabs $0x0,%r10
  0x000000011d14e058: mov    %r10,0x420(%r15)
  0x000000011d14e05f: movabs $0x0,%r10
  0x000000011d14e069: mov    %r10,0x428(%r15)
  0x000000011d14e070: add    $0x30,%rsp
  0x000000011d14e074: pop    %rbp
  0x000000011d14e075: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14e07a: hlt    
  0x000000011d14e07b: hlt    
  0x000000011d14e07c: hlt    
  0x000000011d14e07d: hlt    
  0x000000011d14e07e: hlt    
  0x000000011d14e07f: hlt    
[Stub Code]
  0x000000011d14e080: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d14e085: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14e08f: jmpq   0x000000011d14e08f  ;   {runtime_call}
  0x000000011d14e094: nop
  0x000000011d14e095: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14e09f: jmpq   0x000000011d14e09f  ;   {runtime_call}
[Exception Handler]
  0x000000011d14e0a4: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d14e0a9: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14e0b3: and    $0xfffffffffffffff0,%rsp
  0x000000011d14e0b7: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14e0bc: hlt    
[Deopt Handler Code]
  0x000000011d14e0bd: movabs $0x11d14e0bd,%r10  ;   {section_word}
  0x000000011d14e0c7: push   %r10
  0x000000011d14e0c9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14e0ce: hlt    
  0x000000011d14e0cf: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 108 
ImmutableOopMap{}pc offsets: 148 
ImmutableOopMap{rsi=Oop }pc offsets: 224 Compiled method (c1)     226   75       2       java.util.HashMap::putIfAbsent (13 bytes)
 total in heap  [0x000000011d14d890,0x000000011d14dd20] = 1168
 relocation     [0x000000011d14da08,0x000000011d14da48] = 64
 main code      [0x000000011d14da60,0x000000011d14dba0] = 320
 stub code      [0x000000011d14dba0,0x000000011d14dbf0] = 80
 metadata       [0x000000011d14dbf0,0x000000011d14dc00] = 16
 scopes data    [0x000000011d14dc00,0x000000011d14dc68] = 104
 scopes pcs     [0x000000011d14dc68,0x000000011d14dd18] = 176
 dependencies   [0x000000011d14dd18,0x000000011d14dd20] = 8
----------------------------------------------------------------------
java/util/HashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011d14da60, 0x000000011d14dbf0]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6cd140} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x90]  (sp of caller)
  0x000000011d14da60: mov    0x8(%rsi),%r10d
  0x000000011d14da64: movabs $0x800000000,%r12
  0x000000011d14da6e: add    %r12,%r10
  0x000000011d14da71: xor    %r12,%r12
  0x000000011d14da74: cmp    %rax,%r10
  0x000000011d14da77: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14da7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14da80: mov    %eax,-0x14000(%rsp)
  0x000000011d14da87: push   %rbp
  0x000000011d14da88: sub    $0x80,%rsp
  0x000000011d14da8f: movabs $0x14f85a8f0,%rdi
  0x000000011d14da99: mov    0x18(%rdi),%ebx
  0x000000011d14da9c: add    $0x8,%ebx
  0x000000011d14da9f: mov    %ebx,0x18(%rdi)
  0x000000011d14daa2: and    $0x3ff8,%ebx
  0x000000011d14daa8: cmp    $0x0,%ebx
  0x000000011d14daab: je     0x000000011d14db2f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putIfAbsent@0 (line 1057)

  0x000000011d14dab1: cmp    $0x0,%rdx
  0x000000011d14dab5: jne    0x000000011d14dacb  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)

  0x000000011d14dabb: mov    $0x0,%edi
  0x000000011d14dac0: mov    %rcx,%r8
  0x000000011d14dac3: mov    %rdx,%rcx
  0x000000011d14dac6: jmpq   0x000000011d14db07  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)

  0x000000011d14dacb: mov    %rcx,0x60(%rsp)
  0x000000011d14dad0: mov    %rsi,0x68(%rsp)
  0x000000011d14dad5: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)

  0x000000011d14dad8: mov    %rdx,0x58(%rsp)
  0x000000011d14dadd: movabs $0xffffffffffffffff,%rax
  0x000000011d14dae7: callq  0x000000011c5c8f80  ; ImmutableOopMap{[104]=Oop [88]=Oop [96]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)
                                                ;   {virtual_call}
  0x000000011d14daec: mov    %rax,%rdx
  0x000000011d14daef: shr    $0x10,%edx
  0x000000011d14daf2: xor    %rax,%rdx
  0x000000011d14daf5: mov    %rdx,%rdi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::putIfAbsent@2 (line 1057)

  0x000000011d14daf8: mov    0x60(%rsp),%r8
  0x000000011d14dafd: mov    0x58(%rsp),%rcx
  0x000000011d14db02: mov    0x68(%rsp),%rsi
  0x000000011d14db07: mov    %rdi,%rdx
  0x000000011d14db0a: mov    $0x1,%r9d
  0x000000011d14db10: mov    $0x1,%edi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putIfAbsent@9 (line 1057)

  0x000000011d14db15: xchg   %ax,%ax
  0x000000011d14db17: callq  0x000000011c5c8d00  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putIfAbsent@9 (line 1057)
                                                ;   {optimized virtual_call}
  0x000000011d14db1c: add    $0x80,%rsp
  0x000000011d14db23: pop    %rbp
  0x000000011d14db24: mov    0x108(%r15),%r10
  0x000000011d14db2b: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14db2e: retq   
  0x000000011d14db2f: movabs $0x14f6cd140,%r10  ;   {metadata({method} {0x000000014f6cd140} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011d14db39: mov    %r10,0x8(%rsp)
  0x000000011d14db3e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14db46: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putIfAbsent@-1 (line 1057)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14db4b: jmpq   0x000000011d14dab1
  0x000000011d14db50: nop
  0x000000011d14db51: nop
  0x000000011d14db52: mov    0x420(%r15),%rax
  0x000000011d14db59: movabs $0x0,%r10
  0x000000011d14db63: mov    %r10,0x420(%r15)
  0x000000011d14db6a: movabs $0x0,%r10
  0x000000011d14db74: mov    %r10,0x428(%r15)
  0x000000011d14db7b: add    $0x80,%rsp
  0x000000011d14db82: pop    %rbp
  0x000000011d14db83: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14db88: hlt    
  0x000000011d14db89: hlt    
  0x000000011d14db8a: hlt    
  0x000000011d14db8b: hlt    
  0x000000011d14db8c: hlt    
  0x000000011d14db8d: hlt    
  0x000000011d14db8e: hlt    
  0x000000011d14db8f: hlt    
  0x000000011d14db90: hlt    
  0x000000011d14db91: hlt    
  0x000000011d14db92: hlt    
  0x000000011d14db93: hlt    
  0x000000011d14db94: hlt    
  0x000000011d14db95: hlt    
  0x000000011d14db96: hlt    
  0x000000011d14db97: hlt    
  0x000000011d14db98: hlt    
  0x000000011d14db99: hlt    
  0x000000011d14db9a: hlt    
  0x000000011d14db9b: hlt    
  0x000000011d14db9c: hlt    
  0x000000011d14db9d: hlt    
  0x000000011d14db9e: hlt    
  0x000000011d14db9f: hlt    
[Stub Code]
  0x000000011d14dba0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d14dba5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14dbaf: jmpq   0x000000011d14dbaf  ;   {runtime_call}
  0x000000011d14dbb4: nop
  0x000000011d14dbb5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14dbbf: jmpq   0x000000011d14dbbf  ;   {runtime_call}
[Exception Handler]
  0x000000011d14dbc4: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d14dbc9: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14dbd3: and    $0xfffffffffffffff0,%rsp
  0x000000011d14dbd7: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14dbdc: hlt    
[Deopt Handler Code]
  0x000000011d14dbdd: movabs $0x11d14dbdd,%r10  ;   {section_word}
  0x000000011d14dbe7: push   %r10
  0x000000011d14dbe9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14dbee: hlt    
  0x000000011d14dbef: hlt    

ImmutableOopMap{[104]=Oop [88]=Oop [96]=Oop }pc offsets: 140 
ImmutableOopMap{}pc offsets: 188 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 235 Compiled method (c1)     228   48       2       java.util.ImmutableCollections$Set12$1::hasNext (13 bytes)
 total in heap  [0x000000011d14d510,0x000000011d14d848] = 824
 relocation     [0x000000011d14d688,0x000000011d14d6b0] = 40
 main code      [0x000000011d14d6c0,0x000000011d14d7a0] = 224
 stub code      [0x000000011d14d7a0,0x000000011d14d7d0] = 48
 metadata       [0x000000011d14d7d0,0x000000011d14d7d8] = 8
 scopes data    [0x000000011d14d7d8,0x000000011d14d7f0] = 24
 scopes pcs     [0x000000011d14d7f0,0x000000011d14d840] = 80
 dependencies   [0x000000011d14d840,0x000000011d14d848] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$Set12$1.hasNext()Z  [0x000000011d14d6c0, 0x000000011d14d7d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f83a528} 'hasNext' '()Z' in 'java/util/ImmutableCollections$Set12$1'
  #           [sp+0x40]  (sp of caller)
  0x000000011d14d6c0: mov    0x8(%rsi),%r10d
  0x000000011d14d6c4: movabs $0x800000000,%r12
  0x000000011d14d6ce: add    %r12,%r10
  0x000000011d14d6d1: xor    %r12,%r12
  0x000000011d14d6d4: cmp    %rax,%r10
  0x000000011d14d6d7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14d6dd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14d6e0: mov    %eax,-0x14000(%rsp)
  0x000000011d14d6e7: push   %rbp
  0x000000011d14d6e8: sub    $0x30,%rsp
  0x000000011d14d6ec: movabs $0x14f83a858,%rax
  0x000000011d14d6f6: mov    0x18(%rax),%edi
  0x000000011d14d6f9: add    $0x8,%edi
  0x000000011d14d6fc: mov    %edi,0x18(%rax)
  0x000000011d14d6ff: and    $0x3ff8,%edi
  0x000000011d14d705: cmp    $0x0,%edi
  0x000000011d14d708: je     0x000000011d14d737  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@0 (line 539)

  0x000000011d14d70e: mov    0xc(%rsi),%eax     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@1 (line 539)

  0x000000011d14d711: cmp    $0x0,%eax
  0x000000011d14d714: mov    $0x0,%eax
  0x000000011d14d719: jle    0x000000011d14d724
  0x000000011d14d71f: mov    $0x1,%eax
  0x000000011d14d724: and    $0x1,%eax
  0x000000011d14d727: add    $0x30,%rsp
  0x000000011d14d72b: pop    %rbp
  0x000000011d14d72c: mov    0x108(%r15),%r10
  0x000000011d14d733: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14d736: retq   
  0x000000011d14d737: movabs $0x14f83a528,%r10  ;   {metadata({method} {0x000000014f83a528} 'hasNext' '()Z' in 'java/util/ImmutableCollections$Set12$1')}
  0x000000011d14d741: mov    %r10,0x8(%rsp)
  0x000000011d14d746: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14d74e: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$Set12$1::hasNext@-1 (line 539)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14d753: jmp    0x000000011d14d70e
  0x000000011d14d755: nop
  0x000000011d14d756: nop
  0x000000011d14d757: mov    0x420(%r15),%rax
  0x000000011d14d75e: movabs $0x0,%r10
  0x000000011d14d768: mov    %r10,0x420(%r15)
  0x000000011d14d76f: movabs $0x0,%r10
  0x000000011d14d779: mov    %r10,0x428(%r15)
  0x000000011d14d780: add    $0x30,%rsp
  0x000000011d14d784: pop    %rbp
  0x000000011d14d785: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14d78a: hlt    
  0x000000011d14d78b: hlt    
  0x000000011d14d78c: hlt    
  0x000000011d14d78d: hlt    
  0x000000011d14d78e: hlt    
  0x000000011d14d78f: hlt    
  0x000000011d14d790: hlt    
  0x000000011d14d791: hlt    
  0x000000011d14d792: hlt    
  0x000000011d14d793: hlt    
  0x000000011d14d794: hlt    
  0x000000011d14d795: hlt    
  0x000000011d14d796: hlt    
  0x000000011d14d797: hlt    
  0x000000011d14d798: hlt    
  0x000000011d14d799: hlt    
  0x000000011d14d79a: hlt    
  0x000000011d14d79b: hlt    
  0x000000011d14d79c: hlt    
  0x000000011d14d79d: hlt    
  0x000000011d14d79e: hlt    
  0x000000011d14d79f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14d7a0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14d7a5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14d7af: and    $0xfffffffffffffff0,%rsp
  0x000000011d14d7b3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14d7b8: hlt    
[Deopt Handler Code]
  0x000000011d14d7b9: movabs $0x11d14d7b9,%r10  ;   {section_word}
  0x000000011d14d7c3: push   %r10
  0x000000011d14d7c5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14d7ca: hlt    
  0x000000011d14d7cb: hlt    
  0x000000011d14d7cc: hlt    
  0x000000011d14d7cd: hlt    
  0x000000011d14d7ce: hlt    
  0x000000011d14d7cf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 147 Compiled method (c1)     230   77       1       java.lang.Module::getDescriptor (5 bytes)
 total in heap  [0x0000000124372b90,0x0000000124372e50] = 704
 relocation     [0x0000000124372d08,0x0000000124372d28] = 32
 main code      [0x0000000124372d40,0x0000000124372dc0] = 128
 stub code      [0x0000000124372dc0,0x0000000124372df0] = 48
 metadata       [0x0000000124372df0,0x0000000124372df8] = 8
 scopes data    [0x0000000124372df8,0x0000000124372e08] = 16
 scopes pcs     [0x0000000124372e08,0x0000000124372e48] = 64
 dependencies   [0x0000000124372e48,0x0000000124372e50] = 8
----------------------------------------------------------------------
java/lang/Module.getDescriptor()Ljava/lang/module/ModuleDescriptor;  [0x0000000124372d40, 0x0000000124372df0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f5f5020} 'getDescriptor' '()Ljava/lang/module/ModuleDescriptor;' in 'java/lang/Module'
  #           [sp+0x40]  (sp of caller)
  0x0000000124372d40: mov    0x8(%rsi),%r10d
  0x0000000124372d44: movabs $0x800000000,%r12
  0x0000000124372d4e: add    %r12,%r10
  0x0000000124372d51: xor    %r12,%r12
  0x0000000124372d54: cmp    %rax,%r10
  0x0000000124372d57: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x0000000124372d5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000124372d60: mov    %eax,-0x14000(%rsp)
  0x0000000124372d67: push   %rbp
  0x0000000124372d68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Module::getDescriptor@0 (line 215)

  0x0000000124372d6c: mov    0x20(%rsi),%eax
  0x0000000124372d6f: shl    $0x3,%rax          ;*getfield descriptor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Module::getDescriptor@1 (line 215)

  0x0000000124372d73: add    $0x30,%rsp
  0x0000000124372d77: pop    %rbp
  0x0000000124372d78: mov    0x108(%r15),%r10
  0x0000000124372d7f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000124372d82: retq   
  0x0000000124372d83: nop
  0x0000000124372d84: nop
  0x0000000124372d85: mov    0x420(%r15),%rax
  0x0000000124372d8c: movabs $0x0,%r10
  0x0000000124372d96: mov    %r10,0x420(%r15)
  0x0000000124372d9d: movabs $0x0,%r10
  0x0000000124372da7: mov    %r10,0x428(%r15)
  0x0000000124372dae: add    $0x30,%rsp
  0x0000000124372db2: pop    %rbp
  0x0000000124372db3: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000000124372db8: hlt    
  0x0000000124372db9: hlt    
  0x0000000124372dba: hlt    
  0x0000000124372dbb: hlt    
  0x0000000124372dbc: hlt    
  0x0000000124372dbd: hlt    
  0x0000000124372dbe: hlt    
  0x0000000124372dbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000124372dc0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x0000000124372dc5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x0000000124372dcf: and    $0xfffffffffffffff0,%rsp
  0x0000000124372dd3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x0000000124372dd8: hlt    
[Deopt Handler Code]
  0x0000000124372dd9: movabs $0x124372dd9,%r10  ;   {section_word}
  0x0000000124372de3: push   %r10
  0x0000000124372de5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x0000000124372dea: hlt    
  0x0000000124372deb: hlt    
  0x0000000124372dec: hlt    
  0x0000000124372ded: hlt    
  0x0000000124372dee: hlt    
  0x0000000124372def: hlt    
Compiled method (c1)     231   73       2       java.util.ImmutableCollections::emptySet (4 bytes)
 total in heap  [0x000000011d14d210,0x000000011d14d4f0] = 736
 relocation     [0x000000011d14d388,0x000000011d14d3b0] = 40
 main code      [0x000000011d14d3c0,0x000000011d14d460] = 160
 stub code      [0x000000011d14d460,0x000000011d14d490] = 48
 metadata       [0x000000011d14d490,0x000000011d14d498] = 8
 scopes data    [0x000000011d14d498,0x000000011d14d4a8] = 16
 scopes pcs     [0x000000011d14d4a8,0x000000011d14d4e8] = 64
 dependencies   [0x000000011d14d4e8,0x000000011d14d4f0] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections.emptySet()Ljava/util/Set;  [0x000000011d14d3c0, 0x000000011d14d490]  208 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f7a9658} 'emptySet' '()Ljava/util/Set;' in 'java/util/ImmutableCollections'
  #           [sp+0x40]  (sp of caller)
  0x000000011d14d3c0: mov    %eax,-0x14000(%rsp)
  0x000000011d14d3c7: push   %rbp
  0x000000011d14d3c8: sub    $0x30,%rsp
  0x000000011d14d3cc: movabs $0x14f7adbf0,%rax
  0x000000011d14d3d6: mov    0x18(%rax),%esi
  0x000000011d14d3d9: add    $0x8,%esi
  0x000000011d14d3dc: mov    %esi,0x18(%rax)
  0x000000011d14d3df: and    $0x3ff8,%esi
  0x000000011d14d3e5: cmp    $0x0,%esi
  0x000000011d14d3e8: je     0x000000011d14d408  ;*getstatic EMPTY_SET {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections::emptySet@0 (line 492)

  0x000000011d14d3ee: movabs $0x43fc23fd0,%rax  ;   {oop(a 'java/util/ImmutableCollections$SetN'{0x000000043fc23fd0})}
  0x000000011d14d3f8: add    $0x30,%rsp
  0x000000011d14d3fc: pop    %rbp
  0x000000011d14d3fd: mov    0x108(%r15),%r10
  0x000000011d14d404: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14d407: retq   
  0x000000011d14d408: movabs $0x14f7a9658,%r10  ;   {metadata({method} {0x000000014f7a9658} 'emptySet' '()Ljava/util/Set;' in 'java/util/ImmutableCollections')}
  0x000000011d14d412: mov    %r10,0x8(%rsp)
  0x000000011d14d417: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14d41f: callq  0x000000011c691600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections::emptySet@-1 (line 492)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14d424: jmp    0x000000011d14d3ee
  0x000000011d14d426: nop
  0x000000011d14d427: nop
  0x000000011d14d428: mov    0x420(%r15),%rax
  0x000000011d14d42f: movabs $0x0,%r10
  0x000000011d14d439: mov    %r10,0x420(%r15)
  0x000000011d14d440: movabs $0x0,%r10
  0x000000011d14d44a: mov    %r10,0x428(%r15)
  0x000000011d14d451: add    $0x30,%rsp
  0x000000011d14d455: pop    %rbp
  0x000000011d14d456: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14d45b: hlt    
  0x000000011d14d45c: hlt    
  0x000000011d14d45d: hlt    
  0x000000011d14d45e: hlt    
  0x000000011d14d45f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14d460: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14d465: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14d46f: and    $0xfffffffffffffff0,%rsp
  0x000000011d14d473: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14d478: hlt    
[Deopt Handler Code]
  0x000000011d14d479: movabs $0x11d14d479,%r10  ;   {section_word}
  0x000000011d14d483: push   %r10
  0x000000011d14d485: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14d48a: hlt    
  0x000000011d14d48b: hlt    
  0x000000011d14d48c: hlt    
  0x000000011d14d48d: hlt    
  0x000000011d14d48e: hlt    
  0x000000011d14d48f: hlt    

ImmutableOopMap{}pc offsets: 100 Compiled method (c1)     232   44       1       java.util.ImmutableCollections$SetN::size (5 bytes)
 total in heap  [0x0000000124372e90,0x0000000124373150] = 704
 relocation     [0x0000000124373008,0x0000000124373028] = 32
 main code      [0x0000000124373040,0x00000001243730c0] = 128
 stub code      [0x00000001243730c0,0x00000001243730f0] = 48
 metadata       [0x00000001243730f0,0x00000001243730f8] = 8
 scopes data    [0x00000001243730f8,0x0000000124373108] = 16
 scopes pcs     [0x0000000124373108,0x0000000124373148] = 64
 dependencies   [0x0000000124373148,0x0000000124373150] = 8
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.size()I  [0x0000000124373040, 0x00000001243730f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f7ae4f8} 'size' '()I' in 'java/util/ImmutableCollections$SetN'
  #           [sp+0x40]  (sp of caller)
  0x0000000124373040: mov    0x8(%rsi),%r10d
  0x0000000124373044: movabs $0x800000000,%r12
  0x000000012437304e: add    %r12,%r10
  0x0000000124373051: xor    %r12,%r12
  0x0000000124373054: cmp    %rax,%r10
  0x0000000124373057: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000012437305d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000124373060: mov    %eax,-0x14000(%rsp)
  0x0000000124373067: push   %rbp
  0x0000000124373068: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::size@0 (line 613)

  0x000000012437306c: mov    0xc(%rsi),%eax     ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::size@1 (line 613)

  0x000000012437306f: add    $0x30,%rsp
  0x0000000124373073: pop    %rbp
  0x0000000124373074: mov    0x108(%r15),%r10
  0x000000012437307b: test   %eax,(%r10)        ;   {poll_return}
  0x000000012437307e: retq   
  0x000000012437307f: nop
  0x0000000124373080: nop
  0x0000000124373081: mov    0x420(%r15),%rax
  0x0000000124373088: movabs $0x0,%r10
  0x0000000124373092: mov    %r10,0x420(%r15)
  0x0000000124373099: movabs $0x0,%r10
  0x00000001243730a3: mov    %r10,0x428(%r15)
  0x00000001243730aa: add    $0x30,%rsp
  0x00000001243730ae: pop    %rbp
  0x00000001243730af: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000001243730b4: hlt    
  0x00000001243730b5: hlt    
  0x00000001243730b6: hlt    
  0x00000001243730b7: hlt    
  0x00000001243730b8: hlt    
  0x00000001243730b9: hlt    
  0x00000001243730ba: hlt    
  0x00000001243730bb: hlt    
  0x00000001243730bc: hlt    
  0x00000001243730bd: hlt    
  0x00000001243730be: hlt    
  0x00000001243730bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001243730c0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x00000001243730c5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x00000001243730cf: and    $0xfffffffffffffff0,%rsp
  0x00000001243730d3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001243730d8: hlt    
[Deopt Handler Code]
  0x00000001243730d9: movabs $0x1243730d9,%r10  ;   {section_word}
  0x00000001243730e3: push   %r10
  0x00000001243730e5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x00000001243730ea: hlt    
  0x00000001243730eb: hlt    
  0x00000001243730ec: hlt    
  0x00000001243730ed: hlt    
  0x00000001243730ee: hlt    
  0x00000001243730ef: hlt    
Compiled method (c1)     234   21       2       java.util.AbstractCollection::<init> (5 bytes)
 total in heap  [0x000000011d14e890,0x000000011d14eba0] = 784
 relocation     [0x000000011d14ea08,0x000000011d14ea30] = 40
 main code      [0x000000011d14ea40,0x000000011d14eb00] = 192
 stub code      [0x000000011d14eb00,0x000000011d14eb30] = 48
 metadata       [0x000000011d14eb30,0x000000011d14eb40] = 16
 scopes data    [0x000000011d14eb40,0x000000011d14eb58] = 24
 scopes pcs     [0x000000011d14eb58,0x000000011d14eb98] = 64
 dependencies   [0x000000011d14eb98,0x000000011d14eba0] = 8
----------------------------------------------------------------------
java/util/AbstractCollection.<init>()V  [0x000000011d14ea40, 0x000000011d14eb30]  240 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6c0918} '<init>' '()V' in 'java/util/AbstractCollection'
  #           [sp+0x40]  (sp of caller)
  0x000000011d14ea40: mov    0x8(%rsi),%r10d
  0x000000011d14ea44: movabs $0x800000000,%r12
  0x000000011d14ea4e: add    %r12,%r10
  0x000000011d14ea51: xor    %r12,%r12
  0x000000011d14ea54: cmp    %rax,%r10
  0x000000011d14ea57: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14ea5d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14ea60: mov    %eax,-0x14000(%rsp)
  0x000000011d14ea67: push   %rbp
  0x000000011d14ea68: sub    $0x30,%rsp
  0x000000011d14ea6c: movabs $0x14f6c2208,%rdi
  0x000000011d14ea76: mov    0x18(%rdi),%ebx
  0x000000011d14ea79: add    $0x8,%ebx
  0x000000011d14ea7c: mov    %ebx,0x18(%rdi)
  0x000000011d14ea7f: and    $0x3ff8,%ebx
  0x000000011d14ea85: cmp    $0x0,%ebx
  0x000000011d14ea88: je     0x000000011d14ea9e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.AbstractCollection::<init>@0 (line 66)

  0x000000011d14ea8e: add    $0x30,%rsp
  0x000000011d14ea92: pop    %rbp
  0x000000011d14ea93: mov    0x108(%r15),%r10
  0x000000011d14ea9a: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14ea9d: retq   
  0x000000011d14ea9e: movabs $0x14f6c0918,%r10  ;   {metadata({method} {0x000000014f6c0918} '<init>' '()V' in 'java/util/AbstractCollection')}
  0x000000011d14eaa8: mov    %r10,0x8(%rsp)
  0x000000011d14eaad: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14eab5: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.AbstractCollection::<init>@-1 (line 66)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14eaba: jmp    0x000000011d14ea8e
  0x000000011d14eabc: nop
  0x000000011d14eabd: nop
  0x000000011d14eabe: mov    0x420(%r15),%rax
  0x000000011d14eac5: movabs $0x0,%r10
  0x000000011d14eacf: mov    %r10,0x420(%r15)
  0x000000011d14ead6: movabs $0x0,%r10
  0x000000011d14eae0: mov    %r10,0x428(%r15)
  0x000000011d14eae7: add    $0x30,%rsp
  0x000000011d14eaeb: pop    %rbp
  0x000000011d14eaec: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14eaf1: hlt    
  0x000000011d14eaf2: hlt    
  0x000000011d14eaf3: hlt    
  0x000000011d14eaf4: hlt    
  0x000000011d14eaf5: hlt    
  0x000000011d14eaf6: hlt    
  0x000000011d14eaf7: hlt    
  0x000000011d14eaf8: hlt    
  0x000000011d14eaf9: hlt    
  0x000000011d14eafa: hlt    
  0x000000011d14eafb: hlt    
  0x000000011d14eafc: hlt    
  0x000000011d14eafd: hlt    
  0x000000011d14eafe: hlt    
  0x000000011d14eaff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14eb00: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14eb05: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14eb0f: and    $0xfffffffffffffff0,%rsp
  0x000000011d14eb13: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14eb18: hlt    
[Deopt Handler Code]
  0x000000011d14eb19: movabs $0x11d14eb19,%r10  ;   {section_word}
  0x000000011d14eb23: push   %r10
  0x000000011d14eb25: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14eb2a: hlt    
  0x000000011d14eb2b: hlt    
  0x000000011d14eb2c: hlt    
  0x000000011d14eb2d: hlt    
  0x000000011d14eb2e: hlt    
  0x000000011d14eb2f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 122 Compiled method (c1)     236   78       2       java.lang.String::charAt (25 bytes)
 total in heap  [0x000000011d150490,0x000000011d150a80] = 1520
 relocation     [0x000000011d150608,0x000000011d150650] = 72
 main code      [0x000000011d150660,0x000000011d150800] = 416
 stub code      [0x000000011d150800,0x000000011d150850] = 80
 metadata       [0x000000011d150850,0x000000011d150868] = 24
 scopes data    [0x000000011d150868,0x000000011d150908] = 160
 scopes pcs     [0x000000011d150908,0x000000011d150a68] = 352
 dependencies   [0x000000011d150a68,0x000000011d150a70] = 8
 nul chk table  [0x000000011d150a70,0x000000011d150a80] = 16
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x000000011d150660, 0x000000011d150850]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f5a94b8} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000011d150660: mov    0x8(%rsi),%r10d
  0x000000011d150664: movabs $0x800000000,%r12
  0x000000011d15066e: add    %r12,%r10
  0x000000011d150671: xor    %r12,%r12
  0x000000011d150674: cmp    %rax,%r10
  0x000000011d150677: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d15067d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d150680: mov    %eax,-0x14000(%rsp)
  0x000000011d150687: push   %rbp
  0x000000011d150688: sub    $0x50,%rsp
  0x000000011d15068c: mov    %rdx,%rdi
  0x000000011d15068f: movabs $0x14f78e408,%rax
  0x000000011d150699: mov    0x18(%rax),%edx
  0x000000011d15069c: add    $0x8,%edx
  0x000000011d15069f: mov    %edx,0x18(%rax)
  0x000000011d1506a2: and    $0x3ff8,%edx
  0x000000011d1506a8: cmp    $0x0,%edx
  0x000000011d1506ab: je     0x000000011d150776  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@0 (line 692)

  0x000000011d1506b1: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x000000011d1506b5: cmp    $0x0,%eax
  0x000000011d1506b8: mov    $0x0,%eax
  0x000000011d1506bd: jne    0x000000011d1506c8
  0x000000011d1506c3: mov    $0x1,%eax
  0x000000011d1506c8: and    $0x1,%eax
  0x000000011d1506cb: cmp    $0x0,%eax
  0x000000011d1506ce: je     0x000000011d150719  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4 (line 692)

  0x000000011d1506d4: mov    0xc(%rsi),%eax
  0x000000011d1506d7: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)

  0x000000011d1506db: cmp    $0x0,%edi
  0x000000011d1506de: jl     0x000000011d150742  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011d1506e4: mov    0xc(%rax),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; implicit exception: dispatches to 0x000000011d150797
  0x000000011d1506e7: cmp    %esi,%edi
  0x000000011d1506e9: jge    0x000000011d150742  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011d1506ef: movslq %edi,%rdi
  0x000000011d1506f2: movsbl 0x10(%rax,%rdi,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011d1506f7: and    $0xff,%eax
  0x000000011d1506fd: and    $0xffff,%eax
  0x000000011d150703: and    $0xffff,%eax
  0x000000011d150709: add    $0x50,%rsp
  0x000000011d15070d: pop    %rbp
  0x000000011d15070e: mov    0x108(%r15),%r10
  0x000000011d150715: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d150718: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@15 (line 693)

  0x000000011d150719: mov    0xc(%rsi),%esi
  0x000000011d15071c: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@17 (line 695)

  0x000000011d150720: mov    %rdi,%rdx          ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@21 (line 695)

  0x000000011d150723: nopl   0x0(%rax)
  0x000000011d150727: callq  0x000000011c5c9200  ; ImmutableOopMap{}
                                                ;*invokestatic charAt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ;   {static_call}
  0x000000011d15072c: and    $0xffff,%eax
  0x000000011d150732: add    $0x50,%rsp
  0x000000011d150736: pop    %rbp
  0x000000011d150737: mov    0x108(%r15),%r10
  0x000000011d15073e: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d150741: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@24 (line 695)

  0x000000011d150742: nopw   0x0(%rax,%rax,1)
  0x000000011d150748: jmpq   0x000000011d1507ab  ;   {no_reloc}
  0x000000011d15074d: add    %al,(%rax)
  0x000000011d15074f: add    %al,(%rax)
  0x000000011d150751: add    %ch,%cl
  0x000000011d150753: pop    %rsi
  0x000000011d150754: add    %al,(%rax)
  0x000000011d150756: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011d150759: xlat   %ds:(%rbx)
  0x000000011d15075a: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x000000011d15075d: mov    %rax,0x38(%rsp)
  0x000000011d150762: nopl   0x0(%rax,%rax,1)
  0x000000011d150767: callq  0x000000011c5c8d00  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {optimized virtual_call}
  0x000000011d15076c: mov    0x38(%rsp),%rax
  0x000000011d150771: jmpq   0x000000011d1507ea
  0x000000011d150776: movabs $0x14f5a94b8,%r10  ;   {metadata({method} {0x000000014f5a94b8} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000011d150780: mov    %r10,0x8(%rsp)
  0x000000011d150785: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d15078d: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 692)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d150792: jmpq   0x000000011d1506b1
  0x000000011d150797: callq  0x000000011c68cf20  ; ImmutableOopMap{rax=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d15079c: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d1507a6: mov    $0xa050f00,%eax
  0x000000011d1507ab: callq  0x000000011c690680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d1507b0: jmp    0x000000011d150748
  0x000000011d1507b2: nop
  0x000000011d1507b3: nop
  0x000000011d1507b4: nop
  0x000000011d1507b5: mov    %rdx,%rdx
  0x000000011d1507b8: callq  0x000000011c68d400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011d1507bd: jmp    0x000000011d150757
  0x000000011d1507bf: nop
  0x000000011d1507c0: nop
  0x000000011d1507c1: mov    0x420(%r15),%rax
  0x000000011d1507c8: movabs $0x0,%r10
  0x000000011d1507d2: mov    %r10,0x420(%r15)
  0x000000011d1507d9: movabs $0x0,%r10
  0x000000011d1507e3: mov    %r10,0x428(%r15)
  0x000000011d1507ea: add    $0x50,%rsp
  0x000000011d1507ee: pop    %rbp
  0x000000011d1507ef: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d1507f4: hlt    
  0x000000011d1507f5: hlt    
  0x000000011d1507f6: hlt    
  0x000000011d1507f7: hlt    
  0x000000011d1507f8: hlt    
  0x000000011d1507f9: hlt    
  0x000000011d1507fa: hlt    
  0x000000011d1507fb: hlt    
  0x000000011d1507fc: hlt    
  0x000000011d1507fd: hlt    
  0x000000011d1507fe: hlt    
  0x000000011d1507ff: hlt    
[Stub Code]
  0x000000011d150800: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d150805: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d15080f: jmpq   0x000000011d15080f  ;   {runtime_call}
  0x000000011d150814: nop
  0x000000011d150815: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d15081f: jmpq   0x000000011d15081f  ;   {runtime_call}
[Exception Handler]
  0x000000011d150824: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d150829: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d150833: and    $0xfffffffffffffff0,%rsp
  0x000000011d150837: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d15083c: hlt    
[Deopt Handler Code]
  0x000000011d15083d: movabs $0x11d15083d,%r10  ;   {section_word}
  0x000000011d150847: push   %r10
  0x000000011d150849: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d15084e: hlt    
  0x000000011d15084f: hlt    

ImmutableOopMap{}pc offsets: 204 
ImmutableOopMap{[56]=Oop }pc offsets: 268 
ImmutableOopMap{rsi=Oop }pc offsets: 306 
ImmutableOopMap{rax=Oop }pc offsets: 316 
ImmutableOopMap{}pc offsets: 336 349 Compiled method (c1)     240   58       2       java.util.HashSet::add (20 bytes)
 total in heap  [0x000000011d14ff10,0x000000011d150420] = 1296
 relocation     [0x000000011d150088,0x000000011d1500c8] = 64
 main code      [0x000000011d1500e0,0x000000011d150240] = 352
 stub code      [0x000000011d150240,0x000000011d150290] = 80
 oops           [0x000000011d150290,0x000000011d150298] = 8
 metadata       [0x000000011d150298,0x000000011d1502b0] = 24
 scopes data    [0x000000011d1502b0,0x000000011d150328] = 120
 scopes pcs     [0x000000011d150328,0x000000011d150408] = 224
 dependencies   [0x000000011d150408,0x000000011d150410] = 8
 nul chk table  [0x000000011d150410,0x000000011d150420] = 16
----------------------------------------------------------------------
java/util/HashSet.add(Ljava/lang/Object;)Z  [0x000000011d1500e0, 0x000000011d150290]  432 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f6c7fa0} 'add' '(Ljava/lang/Object;)Z' in 'java/util/HashSet'
  # this:     rsi:rsi   = 'java/util/HashSet'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0xa0]  (sp of caller)
  0x000000011d1500e0: mov    0x8(%rsi),%r10d
  0x000000011d1500e4: movabs $0x800000000,%r12
  0x000000011d1500ee: add    %r12,%r10
  0x000000011d1500f1: xor    %r12,%r12
  0x000000011d1500f4: cmp    %rax,%r10
  0x000000011d1500f7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1500fd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d150100: mov    %eax,-0x14000(%rsp)
  0x000000011d150107: push   %rbp
  0x000000011d150108: sub    $0x90,%rsp
  0x000000011d15010f: movabs $0x14f83c068,%rdi
  0x000000011d150119: mov    0x18(%rdi),%ebx
  0x000000011d15011c: add    $0x8,%ebx
  0x000000011d15011f: mov    %ebx,0x18(%rdi)
  0x000000011d150122: and    $0x3ff8,%ebx
  0x000000011d150128: cmp    $0x0,%ebx
  0x000000011d15012b: je     0x000000011d1501de  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@0 (line 220)

  0x000000011d150131: mov    0xc(%rsi),%edi
  0x000000011d150134: shl    $0x3,%rdi          ;*getfield map {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@1 (line 220)

  0x000000011d150138: cmp    (%rdi),%rax        ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ; implicit exception: dispatches to 0x000000011d1501ff
  0x000000011d15013b: cmp    $0x0,%rdx
  0x000000011d15013f: jne    0x000000011d150155  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011d150145: mov    $0x0,%esi
  0x000000011d15014a: mov    %rdi,%rbx
  0x000000011d15014d: mov    %rdx,%rcx
  0x000000011d150150: jmpq   0x000000011d15018d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011d150155: mov    %rdi,0x80(%rsp)
  0x000000011d15015d: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011d150160: mov    %rdx,0x78(%rsp)
  0x000000011d150165: movabs $0xffffffffffffffff,%rax
  0x000000011d15016f: callq  0x000000011c5c8f80  ; ImmutableOopMap{[128]=Oop [120]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {virtual_call}
  0x000000011d150174: mov    %rax,%rdx
  0x000000011d150177: shr    $0x10,%edx
  0x000000011d15017a: xor    %rax,%rdx
  0x000000011d15017d: mov    %rdx,%rsi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::put@2 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011d150180: mov    0x80(%rsp),%rbx
  0x000000011d150188: mov    0x78(%rsp),%rcx
  0x000000011d15018d: movabs $0x43fc07638,%r8   ;   {oop(a 'java/lang/Object'{0x000000043fc07638})}
  0x000000011d150197: mov    %rsi,%rdx
  0x000000011d15019a: mov    $0x0,%r9d
  0x000000011d1501a0: mov    $0x1,%edi
  0x000000011d1501a5: mov    %rbx,%rsi          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)

  0x000000011d1501a8: nopl   0x0(%rax)
  0x000000011d1501af: callq  0x000000011c5c8d00  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9 (line 607)
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {optimized virtual_call}
  0x000000011d1501b4: cmp    $0x0,%rax
  0x000000011d1501b8: mov    $0x0,%eax
  0x000000011d1501bd: jne    0x000000011d1501c8
  0x000000011d1501c3: mov    $0x1,%eax
  0x000000011d1501c8: and    $0x1,%eax
  0x000000011d1501cb: add    $0x90,%rsp
  0x000000011d1501d2: pop    %rbp
  0x000000011d1501d3: mov    0x108(%r15),%r10
  0x000000011d1501da: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1501dd: retq   
  0x000000011d1501de: movabs $0x14f6c7fa0,%r10  ;   {metadata({method} {0x000000014f6c7fa0} 'add' '(Ljava/lang/Object;)Z' in 'java/util/HashSet')}
  0x000000011d1501e8: mov    %r10,0x8(%rsp)
  0x000000011d1501ed: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d1501f5: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashSet::add@-1 (line 220)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1501fa: jmpq   0x000000011d150131
  0x000000011d1501ff: callq  0x000000011c68cf20  ; ImmutableOopMap{rdx=Oop rdi=Oop }
                                                ;*invokevirtual put {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashSet::add@8 (line 220)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d150204: nop
  0x000000011d150205: nop
  0x000000011d150206: mov    0x420(%r15),%rax
  0x000000011d15020d: movabs $0x0,%r10
  0x000000011d150217: mov    %r10,0x420(%r15)
  0x000000011d15021e: movabs $0x0,%r10
  0x000000011d150228: mov    %r10,0x428(%r15)
  0x000000011d15022f: add    $0x90,%rsp
  0x000000011d150236: pop    %rbp
  0x000000011d150237: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d15023c: hlt    
  0x000000011d15023d: hlt    
  0x000000011d15023e: hlt    
  0x000000011d15023f: hlt    
[Stub Code]
  0x000000011d150240: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d150245: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d15024f: jmpq   0x000000011d15024f  ;   {runtime_call}
  0x000000011d150254: nop
  0x000000011d150255: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d15025f: jmpq   0x000000011d15025f  ;   {runtime_call}
[Exception Handler]
  0x000000011d150264: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d150269: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d150273: and    $0xfffffffffffffff0,%rsp
  0x000000011d150277: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d15027c: hlt    
[Deopt Handler Code]
  0x000000011d15027d: movabs $0x11d15027d,%r10  ;   {section_word}
  0x000000011d150287: push   %r10
  0x000000011d150289: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d15028e: hlt    
  0x000000011d15028f: hlt    

ImmutableOopMap{[128]=Oop [120]=Oop }pc offsets: 148 
ImmutableOopMap{}pc offsets: 212 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 282 
ImmutableOopMap{rdx=Oop rdi=Oop }pc offsets: 292 Compiled method (c1)     243   64       2       java.util.ImmutableCollections$MapN::get (35 bytes)
 total in heap  [0x000000011d14f890,0x000000011d14fed0] = 1600
 relocation     [0x000000011d14fa08,0x000000011d14fa58] = 80
 main code      [0x000000011d14fa60,0x000000011d14fc60] = 512
 stub code      [0x000000011d14fc60,0x000000011d14fcb0] = 80
 metadata       [0x000000011d14fcb0,0x000000011d14fcc0] = 16
 scopes data    [0x000000011d14fcc0,0x000000011d14fd58] = 152
 scopes pcs     [0x000000011d14fd58,0x000000011d14feb8] = 352
 dependencies   [0x000000011d14feb8,0x000000011d14fec0] = 8
 nul chk table  [0x000000011d14fec0,0x000000011d14fed0] = 16
----------------------------------------------------------------------
java/util/ImmutableCollections$MapN.get(Ljava/lang/Object;)Ljava/lang/Object;  [0x000000011d14fa60, 0x000000011d14fcb0]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f71e070} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN'
  # this:     rsi:rsi   = 'java/util/ImmutableCollections$MapN'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x000000011d14fa60: mov    0x8(%rsi),%r10d
  0x000000011d14fa64: movabs $0x800000000,%r12
  0x000000011d14fa6e: add    %r12,%r10
  0x000000011d14fa71: xor    %r12,%r12
  0x000000011d14fa74: cmp    %rax,%r10
  0x000000011d14fa77: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14fa7d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14fa80: mov    %eax,-0x14000(%rsp)
  0x000000011d14fa87: push   %rbp
  0x000000011d14fa88: sub    $0x50,%rsp
  0x000000011d14fa8c: movabs $0x14f779138,%rdi
  0x000000011d14fa96: mov    0x18(%rdi),%ebx
  0x000000011d14fa99: add    $0x8,%ebx
  0x000000011d14fa9c: mov    %ebx,0x18(%rdi)
  0x000000011d14fa9f: and    $0x3ff8,%ebx
  0x000000011d14faa5: cmp    $0x0,%ebx
  0x000000011d14faa8: je     0x000000011d14fbc6  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@0 (line 872)

  0x000000011d14faae: mov    0x14(%rsi),%edi    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@1 (line 872)

  0x000000011d14fab1: cmp    $0x0,%edi
  0x000000011d14fab4: jne    0x000000011d14fac9  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@4 (line 872)

  0x000000011d14faba: cmp    $0x0,%rdx
  0x000000011d14fabe: jne    0x000000011d14fb33
  0x000000011d14fac4: jmpq   0x000000011d14fb4d  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)
                                                ; - java.util.ImmutableCollections$MapN::get@8 (line 873)

  0x000000011d14fac9: mov    %rsi,%rdi
  0x000000011d14facc: mov    %rdi,%rsi          ;*invokevirtual probe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@16 (line 876)

  0x000000011d14facf: mov    %rdi,0x38(%rsp)
  0x000000011d14fad4: data16 xchg %ax,%ax
  0x000000011d14fad7: callq  0x000000011c5c8d00  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokevirtual probe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@16 (line 876)
                                                ;   {optimized virtual_call}
  0x000000011d14fadc: cmp    $0x0,%eax
  0x000000011d14fadf: jl     0x000000011d14fb19  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@21 (line 877)

  0x000000011d14fae5: mov    0x38(%rsp),%rsi
  0x000000011d14faea: mov    0x18(%rsi),%edx
  0x000000011d14faed: shl    $0x3,%rdx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@25 (line 878)

  0x000000011d14faf1: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x000000011d14fbe7
  0x000000011d14faf4: inc    %eax
  0x000000011d14faf6: cmp    %eax,%esi
  0x000000011d14faf8: jbe    0x000000011d14fbec
  0x000000011d14fafe: movslq %eax,%rax
  0x000000011d14fb01: mov    0x10(%rdx,%rax,4),%eax
  0x000000011d14fb05: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@31 (line 878)

  0x000000011d14fb09: add    $0x50,%rsp
  0x000000011d14fb0d: pop    %rbp
  0x000000011d14fb0e: mov    0x108(%r15),%r10
  0x000000011d14fb15: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14fb18: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@32 (line 878)

  0x000000011d14fb19: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011d14fb23: add    $0x50,%rsp
  0x000000011d14fb27: pop    %rbp
  0x000000011d14fb28: mov    0x108(%r15),%r10
  0x000000011d14fb2f: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14fb32: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@34 (line 880)

  0x000000011d14fb33: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011d14fb3d: add    $0x50,%rsp
  0x000000011d14fb41: pop    %rbp
  0x000000011d14fb42: mov    0x108(%r15),%r10
  0x000000011d14fb49: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14fb4c: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@13 (line 874)

  0x000000011d14fb4d: data16 xchg %ax,%ax
  0x000000011d14fb50: jmpq   0x000000011d14fc09  ;   {no_reloc}
  0x000000011d14fb55: add    %al,(%rax)
  0x000000011d14fb57: add    %al,(%rax)
  0x000000011d14fb59: add    %cl,-0x75(%rcx)
  0x000000011d14fb5c: xchg   %ebx,(%rax)
  0x000000011d14fb5e: add    %eax,(%rax)
  0x000000011d14fb60: add    %cl,-0x73(%rax)
  0x000000011d14fb63: js     0x000000011d14fb8d
  0x000000011d14fb65: cmp    0x128(%r15),%rdi
  0x000000011d14fb6c: ja     0x000000011d14fc13
  0x000000011d14fb72: mov    %rdi,0x118(%r15)
  0x000000011d14fb79: mov    0xb8(%rdx),%rcx
  0x000000011d14fb80: mov    %rcx,(%rax)
  0x000000011d14fb83: mov    %rdx,%rcx
  0x000000011d14fb86: movabs $0x800000000,%r12
  0x000000011d14fb90: sub    %r12,%rcx
  0x000000011d14fb93: xor    %r12,%r12
  0x000000011d14fb96: mov    %ecx,0x8(%rax)
  0x000000011d14fb99: xor    %rcx,%rcx
  0x000000011d14fb9c: mov    %ecx,0xc(%rax)
  0x000000011d14fb9f: xor    %rcx,%rcx
  0x000000011d14fba2: mov    %rcx,0x10(%rax)
  0x000000011d14fba6: mov    %rcx,0x18(%rax)
  0x000000011d14fbaa: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - java.util.ImmutableCollections$MapN::get@8 (line 873)

  0x000000011d14fbae: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - java.util.ImmutableCollections$MapN::get@8 (line 873)

  0x000000011d14fbb1: mov    %rax,0x40(%rsp)
  0x000000011d14fbb6: nop
  0x000000011d14fbb7: callq  0x000000011c5c8d00  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ; - java.util.ImmutableCollections$MapN::get@8 (line 873)
                                                ;   {optimized virtual_call}
  0x000000011d14fbbc: mov    0x40(%rsp),%rax
  0x000000011d14fbc1: jmpq   0x000000011d14fc48
  0x000000011d14fbc6: movabs $0x14f71e070,%r10  ;   {metadata({method} {0x000000014f71e070} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/ImmutableCollections$MapN')}
  0x000000011d14fbd0: mov    %r10,0x8(%rsp)
  0x000000011d14fbd5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14fbdd: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$MapN::get@-1 (line 872)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14fbe2: jmpq   0x000000011d14faae
  0x000000011d14fbe7: callq  0x000000011c68cf20  ; ImmutableOopMap{rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@31 (line 878)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14fbec: mov    %rax,(%rsp)
  0x000000011d14fbf0: mov    %rdx,0x8(%rsp)
  0x000000011d14fbf5: callq  0x000000011c68c920  ; ImmutableOopMap{rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$MapN::get@31 (line 878)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14fbfa: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d14fc04: mov    $0xa050f00,%eax
  0x000000011d14fc09: callq  0x000000011c690680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - java.util.ImmutableCollections$MapN::get@8 (line 873)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d14fc0e: jmpq   0x000000011d14fb50
  0x000000011d14fc13: mov    %rdx,%rdx
  0x000000011d14fc16: callq  0x000000011c68d700  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ; - java.util.ImmutableCollections$MapN::get@8 (line 873)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011d14fc1b: jmp    0x000000011d14fbae
  0x000000011d14fc1d: nop
  0x000000011d14fc1e: nop
  0x000000011d14fc1f: mov    0x420(%r15),%rax
  0x000000011d14fc26: movabs $0x0,%r10
  0x000000011d14fc30: mov    %r10,0x420(%r15)
  0x000000011d14fc37: movabs $0x0,%r10
  0x000000011d14fc41: mov    %r10,0x428(%r15)
  0x000000011d14fc48: add    $0x50,%rsp
  0x000000011d14fc4c: pop    %rbp
  0x000000011d14fc4d: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14fc52: hlt    
  0x000000011d14fc53: hlt    
  0x000000011d14fc54: hlt    
  0x000000011d14fc55: hlt    
  0x000000011d14fc56: hlt    
  0x000000011d14fc57: hlt    
  0x000000011d14fc58: hlt    
  0x000000011d14fc59: hlt    
  0x000000011d14fc5a: hlt    
  0x000000011d14fc5b: hlt    
  0x000000011d14fc5c: hlt    
  0x000000011d14fc5d: hlt    
  0x000000011d14fc5e: hlt    
  0x000000011d14fc5f: hlt    
[Stub Code]
  0x000000011d14fc60: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d14fc65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14fc6f: jmpq   0x000000011d14fc6f  ;   {runtime_call}
  0x000000011d14fc74: nop
  0x000000011d14fc75: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14fc7f: jmpq   0x000000011d14fc7f  ;   {runtime_call}
[Exception Handler]
  0x000000011d14fc84: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d14fc89: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14fc93: and    $0xfffffffffffffff0,%rsp
  0x000000011d14fc97: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14fc9c: hlt    
[Deopt Handler Code]
  0x000000011d14fc9d: movabs $0x11d14fc9d,%r10  ;   {section_word}
  0x000000011d14fca7: push   %r10
  0x000000011d14fca9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14fcae: hlt    
  0x000000011d14fcaf: hlt    

ImmutableOopMap{[56]=Oop }pc offsets: 124 
ImmutableOopMap{[64]=Oop }pc offsets: 348 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 386 
ImmutableOopMap{rdx=Oop }pc offsets: 396 410 
ImmutableOopMap{}pc offsets: 430 443 Compiled method (c1)     247   79       2       java.lang.StringLatin1::charAt (28 bytes)
 total in heap  [0x000000011d14f390,0x000000011d14f810] = 1152
 relocation     [0x000000011d14f508,0x000000011d14f540] = 56
 main code      [0x000000011d14f540,0x000000011d14f660] = 288
 stub code      [0x000000011d14f660,0x000000011d14f6a0] = 64
 metadata       [0x000000011d14f6a0,0x000000011d14f6a8] = 8
 scopes data    [0x000000011d14f6a8,0x000000011d14f708] = 96
 scopes pcs     [0x000000011d14f708,0x000000011d14f7f8] = 240
 dependencies   [0x000000011d14f7f8,0x000000011d14f800] = 8
 nul chk table  [0x000000011d14f800,0x000000011d14f810] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.charAt([BI)C  [0x000000011d14f540, 0x000000011d14f6a0]  352 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6fc3f8} 'charAt' '([BI)C' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011d14f540: mov    %eax,-0x14000(%rsp)
  0x000000011d14f547: push   %rbp
  0x000000011d14f548: sub    $0x30,%rsp
  0x000000011d14f54c: mov    %rdx,%rdi
  0x000000011d14f54f: movabs $0x14f78e458,%rax
  0x000000011d14f559: mov    0x18(%rax),%edx
  0x000000011d14f55c: add    $0x8,%edx
  0x000000011d14f55f: mov    %edx,0x18(%rax)
  0x000000011d14f562: and    $0x3ff8,%edx
  0x000000011d14f568: cmp    $0x0,%edx
  0x000000011d14f56b: je     0x000000011d14f5de  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@0 (line 46)

  0x000000011d14f571: cmp    $0x0,%edi
  0x000000011d14f574: jl     0x000000011d14f5a9  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)

  0x000000011d14f57a: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; implicit exception: dispatches to 0x000000011d14f5ff
  0x000000011d14f57d: cmp    %eax,%edi
  0x000000011d14f57f: jge    0x000000011d14f5a9  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7 (line 46)

  0x000000011d14f585: movslq %edi,%rdi
  0x000000011d14f588: movsbl 0x10(%rsi,%rdi,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)

  0x000000011d14f58d: and    $0xff,%eax
  0x000000011d14f593: and    $0xffff,%eax
  0x000000011d14f599: add    $0x30,%rsp
  0x000000011d14f59d: pop    %rbp
  0x000000011d14f59e: mov    0x108(%r15),%r10
  0x000000011d14f5a5: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14f5a8: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@27 (line 49)

  0x000000011d14f5a9: nopl   0x0(%rax)
  0x000000011d14f5b0: jmpq   0x000000011d14f613  ;   {no_reloc}
  0x000000011d14f5b5: add    %al,(%rax)
  0x000000011d14f5b7: add    %al,(%rax)
  0x000000011d14f5b9: add    %ch,%cl
  0x000000011d14f5bb: pop    %rsi
  0x000000011d14f5bc: add    %al,(%rax)
  0x000000011d14f5be: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)

  0x000000011d14f5c1: xlat   %ds:(%rbx)
  0x000000011d14f5c2: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)

  0x000000011d14f5c5: mov    %rax,0x20(%rsp)
  0x000000011d14f5ca: nopl   0x0(%rax,%rax,1)
  0x000000011d14f5cf: callq  0x000000011c5c8d00  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ;   {optimized virtual_call}
  0x000000011d14f5d4: mov    0x20(%rsp),%rax
  0x000000011d14f5d9: jmpq   0x000000011d14f652
  0x000000011d14f5de: movabs $0x14f6fc3f8,%r10  ;   {metadata({method} {0x000000014f6fc3f8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000000011d14f5e8: mov    %r10,0x8(%rsp)
  0x000000011d14f5ed: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14f5f5: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14f5fa: jmpq   0x000000011d14f571
  0x000000011d14f5ff: callq  0x000000011c68cf20  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14f604: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d14f60e: mov    $0xa050f00,%eax
  0x000000011d14f613: callq  0x000000011c690680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d14f618: jmp    0x000000011d14f5b0
  0x000000011d14f61a: nop
  0x000000011d14f61b: nop
  0x000000011d14f61c: nop
  0x000000011d14f61d: mov    %rdx,%rdx
  0x000000011d14f620: callq  0x000000011c68d400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011d14f625: jmp    0x000000011d14f5bf
  0x000000011d14f627: nop
  0x000000011d14f628: nop
  0x000000011d14f629: mov    0x420(%r15),%rax
  0x000000011d14f630: movabs $0x0,%r10
  0x000000011d14f63a: mov    %r10,0x420(%r15)
  0x000000011d14f641: movabs $0x0,%r10
  0x000000011d14f64b: mov    %r10,0x428(%r15)
  0x000000011d14f652: add    $0x30,%rsp
  0x000000011d14f656: pop    %rbp
  0x000000011d14f657: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14f65c: hlt    
  0x000000011d14f65d: hlt    
  0x000000011d14f65e: hlt    
  0x000000011d14f65f: hlt    
[Stub Code]
  0x000000011d14f660: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d14f665: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d14f66f: jmpq   0x000000011d14f66f  ;   {runtime_call}
[Exception Handler]
  0x000000011d14f674: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d14f679: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14f683: and    $0xfffffffffffffff0,%rsp
  0x000000011d14f687: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14f68c: hlt    
[Deopt Handler Code]
  0x000000011d14f68d: movabs $0x11d14f68d,%r10  ;   {section_word}
  0x000000011d14f697: push   %r10
  0x000000011d14f699: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14f69e: hlt    
  0x000000011d14f69f: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 148 
ImmutableOopMap{rsi=Oop }pc offsets: 186 196 
ImmutableOopMap{}pc offsets: 216 229 Compiled method (c1)     250   81       2       java.lang.CharacterDataLatin1::getProperties (11 bytes)
 total in heap  [0x000000011d14ef90,0x000000011d14f348] = 952
 relocation     [0x000000011d14f108,0x000000011d14f138] = 48
 main code      [0x000000011d14f140,0x000000011d14f240] = 256
 stub code      [0x000000011d14f240,0x000000011d14f270] = 48
 metadata       [0x000000011d14f270,0x000000011d14f278] = 8
 scopes data    [0x000000011d14f278,0x000000011d14f2a8] = 48
 scopes pcs     [0x000000011d14f2a8,0x000000011d14f328] = 128
 dependencies   [0x000000011d14f328,0x000000011d14f330] = 8
 nul chk table  [0x000000011d14f330,0x000000011d14f348] = 24
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.getProperties(I)I  [0x000000011d14f140, 0x000000011d14f270]  304 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f796620} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011d14f140: mov    0x8(%rsi),%r10d
  0x000000011d14f144: movabs $0x800000000,%r12
  0x000000011d14f14e: add    %r12,%r10
  0x000000011d14f151: xor    %r12,%r12
  0x000000011d14f154: cmp    %rax,%r10
  0x000000011d14f157: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d14f15d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d14f160: mov    %eax,-0x14000(%rsp)
  0x000000011d14f167: push   %rbp
  0x000000011d14f168: sub    $0x30,%rsp
  0x000000011d14f16c: movabs $0x14f818028,%rax
  0x000000011d14f176: mov    0x18(%rax),%edi
  0x000000011d14f179: add    $0x8,%edi
  0x000000011d14f17c: mov    %edi,0x18(%rax)
  0x000000011d14f17f: and    $0x3ff8,%edi
  0x000000011d14f185: cmp    $0x0,%edi
  0x000000011d14f188: je     0x000000011d14f1be  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 73)

  0x000000011d14f18e: and    $0xffff,%edx
  0x000000011d14f194: movabs $0x43fc22898,%rax  ;   {oop([I{0x000000043fc22898})}
  0x000000011d14f19e: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000011d14f1dc
  0x000000011d14f1a1: jae    0x000000011d14f1e6
  0x000000011d14f1a7: movslq %edx,%rdx
  0x000000011d14f1aa: mov    0x10(%rax,%rdx,4),%eax  ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)

  0x000000011d14f1ae: add    $0x30,%rsp
  0x000000011d14f1b2: pop    %rbp
  0x000000011d14f1b3: mov    0x108(%r15),%r10
  0x000000011d14f1ba: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14f1bd: retq   
  0x000000011d14f1be: movabs $0x14f796620,%r10  ;   {metadata({method} {0x000000014f796620} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000011d14f1c8: mov    %r10,0x8(%rsp)
  0x000000011d14f1cd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14f1d5: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 73)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14f1da: jmp    0x000000011d14f18e
  0x000000011d14f1dc: callq  0x000000011c68cf20  ; ImmutableOopMap{rax=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14f1e1: callq  0x000000011c68cf20  ; ImmutableOopMap{rax=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d14f1e6: mov    %rdx,(%rsp)
  0x000000011d14f1ea: mov    %rax,0x8(%rsp)
  0x000000011d14f1ef: callq  0x000000011c68c920  ; ImmutableOopMap{rax=Oop }
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011d14f1f4: nop
  0x000000011d14f1f5: nop
  0x000000011d14f1f6: mov    0x420(%r15),%rax
  0x000000011d14f1fd: movabs $0x0,%r10
  0x000000011d14f207: mov    %r10,0x420(%r15)
  0x000000011d14f20e: movabs $0x0,%r10
  0x000000011d14f218: mov    %r10,0x428(%r15)
  0x000000011d14f21f: add    $0x30,%rsp
  0x000000011d14f223: pop    %rbp
  0x000000011d14f224: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14f229: hlt    
  0x000000011d14f22a: hlt    
  0x000000011d14f22b: hlt    
  0x000000011d14f22c: hlt    
  0x000000011d14f22d: hlt    
  0x000000011d14f22e: hlt    
  0x000000011d14f22f: hlt    
  0x000000011d14f230: hlt    
  0x000000011d14f231: hlt    
  0x000000011d14f232: hlt    
  0x000000011d14f233: hlt    
  0x000000011d14f234: hlt    
  0x000000011d14f235: hlt    
  0x000000011d14f236: hlt    
  0x000000011d14f237: hlt    
  0x000000011d14f238: hlt    
  0x000000011d14f239: hlt    
  0x000000011d14f23a: hlt    
  0x000000011d14f23b: hlt    
  0x000000011d14f23c: hlt    
  0x000000011d14f23d: hlt    
  0x000000011d14f23e: hlt    
  0x000000011d14f23f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14f240: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14f245: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14f24f: and    $0xfffffffffffffff0,%rsp
  0x000000011d14f253: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14f258: hlt    
[Deopt Handler Code]
  0x000000011d14f259: movabs $0x11d14f259,%r10  ;   {section_word}
  0x000000011d14f263: push   %r10
  0x000000011d14f265: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14f26a: hlt    
  0x000000011d14f26b: hlt    
  0x000000011d14f26c: hlt    
  0x000000011d14f26d: hlt    
  0x000000011d14f26e: hlt    
  0x000000011d14f26f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 154 
ImmutableOopMap{rax=Oop }pc offsets: 161 166 180 Compiled method (c1)     252   80       2       java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x000000011d14ec10,0x000000011d14ef18] = 776
 relocation     [0x000000011d14ed88,0x000000011d14eda8] = 32
 main code      [0x000000011d14edc0,0x000000011d14ee80] = 192
 stub code      [0x000000011d14ee80,0x000000011d14eeb0] = 48
 metadata       [0x000000011d14eeb0,0x000000011d14eeb8] = 8
 scopes data    [0x000000011d14eeb8,0x000000011d14eed0] = 24
 scopes pcs     [0x000000011d14eed0,0x000000011d14ef10] = 64
 dependencies   [0x000000011d14ef10,0x000000011d14ef18] = 8
----------------------------------------------------------------------
java/lang/StringLatin1.canEncode(I)Z  [0x000000011d14edc0, 0x000000011d14eeb0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f6fc4a8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011d14edc0: mov    %eax,-0x14000(%rsp)
  0x000000011d14edc7: push   %rbp
  0x000000011d14edc8: sub    $0x30,%rsp
  0x000000011d14edcc: movabs $0x14f790350,%rax
  0x000000011d14edd6: mov    0x18(%rax),%edi
  0x000000011d14edd9: add    $0x8,%edi
  0x000000011d14eddc: mov    %edi,0x18(%rax)
  0x000000011d14eddf: and    $0x3ff8,%edi
  0x000000011d14ede5: cmp    $0x0,%edi
  0x000000011d14ede8: je     0x000000011d14ee17  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@0 (line 53)

  0x000000011d14edee: shr    $0x8,%esi
  0x000000011d14edf1: cmp    $0x0,%esi
  0x000000011d14edf4: mov    $0x0,%eax
  0x000000011d14edf9: jne    0x000000011d14ee04
  0x000000011d14edff: mov    $0x1,%eax
  0x000000011d14ee04: and    $0x1,%eax
  0x000000011d14ee07: add    $0x30,%rsp
  0x000000011d14ee0b: pop    %rbp
  0x000000011d14ee0c: mov    0x108(%r15),%r10
  0x000000011d14ee13: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d14ee16: retq   
  0x000000011d14ee17: movabs $0x14f6fc4a8,%r10  ;   {metadata({method} {0x000000014f6fc4a8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000000011d14ee21: mov    %r10,0x8(%rsp)
  0x000000011d14ee26: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d14ee2e: callq  0x000000011c691600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d14ee33: jmp    0x000000011d14edee
  0x000000011d14ee35: nop
  0x000000011d14ee36: nop
  0x000000011d14ee37: mov    0x420(%r15),%rax
  0x000000011d14ee3e: movabs $0x0,%r10
  0x000000011d14ee48: mov    %r10,0x420(%r15)
  0x000000011d14ee4f: movabs $0x0,%r10
  0x000000011d14ee59: mov    %r10,0x428(%r15)
  0x000000011d14ee60: add    $0x30,%rsp
  0x000000011d14ee64: pop    %rbp
  0x000000011d14ee65: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d14ee6a: hlt    
  0x000000011d14ee6b: hlt    
  0x000000011d14ee6c: hlt    
  0x000000011d14ee6d: hlt    
  0x000000011d14ee6e: hlt    
  0x000000011d14ee6f: hlt    
  0x000000011d14ee70: hlt    
  0x000000011d14ee71: hlt    
  0x000000011d14ee72: hlt    
  0x000000011d14ee73: hlt    
  0x000000011d14ee74: hlt    
  0x000000011d14ee75: hlt    
  0x000000011d14ee76: hlt    
  0x000000011d14ee77: hlt    
  0x000000011d14ee78: hlt    
  0x000000011d14ee79: hlt    
  0x000000011d14ee7a: hlt    
  0x000000011d14ee7b: hlt    
  0x000000011d14ee7c: hlt    
  0x000000011d14ee7d: hlt    
  0x000000011d14ee7e: hlt    
  0x000000011d14ee7f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011d14ee80: callq  0x000000011c68ea80  ;   {no_reloc}
  0x000000011d14ee85: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d14ee8f: and    $0xfffffffffffffff0,%rsp
  0x000000011d14ee93: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d14ee98: hlt    
[Deopt Handler Code]
  0x000000011d14ee99: movabs $0x11d14ee99,%r10  ;   {section_word}
  0x000000011d14eea3: push   %r10
  0x000000011d14eea5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d14eeaa: hlt    
  0x000000011d14eeab: hlt    
  0x000000011d14eeac: hlt    
  0x000000011d14eead: hlt    
  0x000000011d14eeae: hlt    
  0x000000011d14eeaf: hlt    

ImmutableOopMap{}pc offsets: 115 Compiled method (c1)     253   69       1       java.lang.module.ModuleDescriptor::isOpen (5 bytes)
 total in heap  [0x0000000124373190,0x0000000124373450] = 704
 relocation     [0x0000000124373308,0x0000000124373328] = 32
 main code      [0x0000000124373340,0x00000001243733c0] = 128
 stub code      [0x00000001243733c0,0x00000001243733f0] = 48
 metadata       [0x00000001243733f0,0x00000001243733f8] = 8
 scopes data    [0x00000001243733f8,0x0000000124373408] = 16
 scopes pcs     [0x0000000124373408,0x0000000124373448] = 64
 dependencies   [0x0000000124373448,0x0000000124373450] = 8
----------------------------------------------------------------------
java/lang/module/ModuleDescriptor.isOpen()Z  [0x0000000124373340, 0x00000001243733f0]  176 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f7a42f0} 'isOpen' '()Z' in 'java/lang/module/ModuleDescriptor'
  #           [sp+0x40]  (sp of caller)
  0x0000000124373340: mov    0x8(%rsi),%r10d
  0x0000000124373344: movabs $0x800000000,%r12
  0x000000012437334e: add    %r12,%r10
  0x0000000124373351: xor    %r12,%r12
  0x0000000124373354: cmp    %rax,%r10
  0x0000000124373357: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000012437335d: data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000124373360: mov    %eax,-0x14000(%rsp)
  0x0000000124373367: push   %rbp
  0x0000000124373368: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isOpen@0 (line 1326)

  0x000000012437336c: movsbl 0x10(%rsi),%eax    ;*getfield open {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.module.ModuleDescriptor::isOpen@1 (line 1326)

  0x0000000124373370: and    $0x1,%eax
  0x0000000124373373: add    $0x30,%rsp
  0x0000000124373377: pop    %rbp
  0x0000000124373378: mov    0x108(%r15),%r10
  0x000000012437337f: test   %eax,(%r10)        ;   {poll_return}
  0x0000000124373382: retq   
  0x0000000124373383: nop
  0x0000000124373384: nop
  0x0000000124373385: mov    0x420(%r15),%rax
  0x000000012437338c: movabs $0x0,%r10
  0x0000000124373396: mov    %r10,0x420(%r15)
  0x000000012437339d: movabs $0x0,%r10
  0x00000001243733a7: mov    %r10,0x428(%r15)
  0x00000001243733ae: add    $0x30,%rsp
  0x00000001243733b2: pop    %rbp
  0x00000001243733b3: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000001243733b8: hlt    
  0x00000001243733b9: hlt    
  0x00000001243733ba: hlt    
  0x00000001243733bb: hlt    
  0x00000001243733bc: hlt    
  0x00000001243733bd: hlt    
  0x00000001243733be: hlt    
  0x00000001243733bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001243733c0: callq  0x000000011c68ea80  ;   {no_reloc}
  0x00000001243733c5: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x00000001243733cf: and    $0xfffffffffffffff0,%rsp
  0x00000001243733d3: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x00000001243733d8: hlt    
[Deopt Handler Code]
  0x00000001243733d9: movabs $0x1243733d9,%r10  ;   {section_word}
  0x00000001243733e3: push   %r10
  0x00000001243733e5: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x00000001243733ea: hlt    
  0x00000001243733eb: hlt    
  0x00000001243733ec: hlt    
  0x00000001243733ed: hlt    
  0x00000001243733ee: hlt    
  0x00000001243733ef: hlt    
Compiled method (c1)     254   59       2       java.util.ImmutableCollections$Set12$1::next (92 bytes)
 total in heap  [0x000000011d151110,0x000000011d1516f8] = 1512
 relocation     [0x000000011d151288,0x000000011d1512c8] = 64
 main code      [0x000000011d1512e0,0x000000011d151480] = 416
 stub code      [0x000000011d151480,0x000000011d1514c0] = 64
 metadata       [0x000000011d1514c0,0x000000011d1514c8] = 8
 scopes data    [0x000000011d1514c8,0x000000011d151558] = 144
 scopes pcs     [0x000000011d151558,0x000000011d1516d8] = 384
 dependencies   [0x000000011d1516d8,0x000000011d1516e0] = 8
 nul chk table  [0x000000011d1516e0,0x000000011d1516f8] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$Set12$1.next()Ljava/lang/Object;  [0x000000011d1512e0, 0x000000011d1514c0]  480 bytes
[Entry Point]
[Constants]
  # {method} {0x000000014f83a638} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1'
  #           [sp+0x40]  (sp of caller)
  0x000000011d1512e0: mov    0x8(%rsi),%r10d
  0x000000011d1512e4: movabs $0x800000000,%r12
  0x000000011d1512ee: add    %r12,%r10
  0x000000011d1512f1: xor    %r12,%r12
  0x000000011d1512f4: cmp    %rax,%r10
  0x000000011d1512f7: jne    0x000000011c5c8a80  ;   {runtime_call ic_miss_stub}
  0x000000011d1512fd: data16 xchg %ax,%ax
[Verified Entry Point]
  0x000000011d151300: mov    %eax,-0x14000(%rsp)
  0x000000011d151307: push   %rbp
  0x000000011d151308: sub    $0x30,%rsp
  0x000000011d15130c: movabs $0x14f83a8a8,%rax
  0x000000011d151316: mov    0x18(%rax),%edx
  0x000000011d151319: add    $0x8,%edx
  0x000000011d15131c: mov    %edx,0x18(%rax)
  0x000000011d15131f: and    $0x3ff8,%edx
  0x000000011d151325: cmp    $0x0,%edx
  0x000000011d151328: je     0x000000011d1513de  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@0 (line 544)

  0x000000011d15132e: mov    0xc(%rsi),%eax     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@1 (line 544)

  0x000000011d151331: cmp    $0x1,%eax
  0x000000011d151334: jne    0x000000011d15135e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@5 (line 544)

  0x000000011d15133a: movl   $0x0,0xc(%rsi)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@10 (line 545)

  0x000000011d151341: mov    0x10(%rsi),%edx
  0x000000011d151344: shl    $0x3,%rdx          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@20 (line 546)

  0x000000011d151348: mov    0x10(%rdx),%esi    ; implicit exception: dispatches to 0x000000011d1513ff
  0x000000011d15134b: shl    $0x3,%rsi          ;*getfield e1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@23 (line 546)

  0x000000011d15134f: cmp    $0x0,%rsi
  0x000000011d151353: jne    0x000000011d1513a3
  0x000000011d151359: jmpq   0x000000011d15138c  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@26 (line 546)

  0x000000011d15135e: cmp    $0x2,%eax
  0x000000011d151361: jne    0x000000011d1513b6  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@52 (line 547)

  0x000000011d151367: movl   $0x1,0xc(%rsi)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@57 (line 548)

  0x000000011d15136e: mov    0x10(%rsi),%eax
  0x000000011d151371: shl    $0x3,%rax          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@77 (line 549)

  0x000000011d151375: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000011d151404
  0x000000011d151378: shl    $0x3,%rax          ;*getfield e0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@80 (line 549)

  0x000000011d15137c: add    $0x30,%rsp
  0x000000011d151380: pop    %rbp
  0x000000011d151381: mov    0x108(%r15),%r10
  0x000000011d151388: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d15138b: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@83 (line 549)

  0x000000011d15138c: mov    0xc(%rdx),%eax
  0x000000011d15138f: shl    $0x3,%rax          ;*getfield e0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@33 (line 546)

  0x000000011d151393: add    $0x30,%rsp
  0x000000011d151397: pop    %rbp
  0x000000011d151398: mov    0x108(%r15),%r10
  0x000000011d15139f: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1513a2: retq   
  0x000000011d1513a3: mov    %rsi,%rax
  0x000000011d1513a6: add    $0x30,%rsp
  0x000000011d1513aa: pop    %rbp
  0x000000011d1513ab: mov    0x108(%r15),%r10
  0x000000011d1513b2: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d1513b5: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@46 (line 546)

  0x000000011d1513b6: xchg   %ax,%ax
  0x000000011d1513b8: jmpq   0x000000011d151418  ;   {no_reloc}
  0x000000011d1513bd: add    %al,(%rax)
  0x000000011d1513bf: add    %al,(%rax)
  0x000000011d1513c1: add    %ch,%cl
  0x000000011d1513c3: pop    %rbx
  0x000000011d1513c4: add    %al,(%rax)
  0x000000011d1513c6: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@84 (line 551)

  0x000000011d1513c9: lock mov %rax,0x20(%rsp)  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@88 (line 551)

  0x000000011d1513cf: callq  0x000000011c5c8d00  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@88 (line 551)
                                                ;   {optimized virtual_call}
  0x000000011d1513d4: mov    0x20(%rsp),%rax
  0x000000011d1513d9: jmpq   0x000000011d151457
  0x000000011d1513de: movabs $0x14f83a638,%r10  ;   {metadata({method} {0x000000014f83a638} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$Set12$1')}
  0x000000011d1513e8: mov    %r10,0x8(%rsp)
  0x000000011d1513ed: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d1513f5: callq  0x000000011c691600  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$Set12$1::next@-1 (line 544)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d1513fa: jmpq   0x000000011d15132e
  0x000000011d1513ff: callq  0x000000011c68cf20  ; ImmutableOopMap{rdx=Oop }
                                                ;*getfield e1 {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@23 (line 546)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d151404: callq  0x000000011c68cf20  ; ImmutableOopMap{}
                                                ;*getfield e0 {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@80 (line 549)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011d151409: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011d151413: mov    $0xa050f00,%eax
  0x000000011d151418: callq  0x000000011c690680  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@84 (line 551)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011d15141d: jmp    0x000000011d1513b8
  0x000000011d15141f: nop
  0x000000011d151420: nop
  0x000000011d151421: nop
  0x000000011d151422: mov    %rdx,%rdx
  0x000000011d151425: callq  0x000000011c68d400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$Set12$1::next@84 (line 551)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000000011d15142a: jmp    0x000000011d1513c7
  0x000000011d15142c: nop
  0x000000011d15142d: nop
  0x000000011d15142e: mov    0x420(%r15),%rax
  0x000000011d151435: movabs $0x0,%r10
  0x000000011d15143f: mov    %r10,0x420(%r15)
  0x000000011d151446: movabs $0x0,%r10
  0x000000011d151450: mov    %r10,0x428(%r15)
  0x000000011d151457: add    $0x30,%rsp
  0x000000011d15145b: pop    %rbp
  0x000000011d15145c: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d151461: hlt    
  0x000000011d151462: hlt    
  0x000000011d151463: hlt    
  0x000000011d151464: hlt    
  0x000000011d151465: hlt    
  0x000000011d151466: hlt    
  0x000000011d151467: hlt    
  0x000000011d151468: hlt    
  0x000000011d151469: hlt    
  0x000000011d15146a: hlt    
  0x000000011d15146b: hlt    
  0x000000011d15146c: hlt    
  0x000000011d15146d: hlt    
  0x000000011d15146e: hlt    
  0x000000011d15146f: hlt    
  0x000000011d151470: hlt    
  0x000000011d151471: hlt    
  0x000000011d151472: hlt    
  0x000000011d151473: hlt    
  0x000000011d151474: hlt    
  0x000000011d151475: hlt    
  0x000000011d151476: hlt    
  0x000000011d151477: hlt    
  0x000000011d151478: hlt    
  0x000000011d151479: hlt    
  0x000000011d15147a: hlt    
  0x000000011d15147b: hlt    
  0x000000011d15147c: hlt    
  0x000000011d15147d: hlt    
  0x000000011d15147e: hlt    
  0x000000011d15147f: hlt    
[Stub Code]
  0x000000011d151480: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d151485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d15148f: jmpq   0x000000011d15148f  ;   {runtime_call}
[Exception Handler]
  0x000000011d151494: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d151499: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d1514a3: and    $0xfffffffffffffff0,%rsp
  0x000000011d1514a7: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d1514ac: hlt    
[Deopt Handler Code]
  0x000000011d1514ad: movabs $0x11d1514ad,%r10  ;   {section_word}
  0x000000011d1514b7: push   %r10
  0x000000011d1514b9: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d1514be: hlt    
  0x000000011d1514bf: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 244 
ImmutableOopMap{rsi=Oop }pc offsets: 282 
ImmutableOopMap{rdx=Oop }pc offsets: 292 
ImmutableOopMap{}pc offsets: 297 317 330 Compiled method (c1)     258   82       2       jit.Fib::fib (27 bytes)
 total in heap  [0x000000011d150a90,0x000000011d1510d8] = 1608
 relocation     [0x000000011d150c08,0x000000011d150c60] = 88
 main code      [0x000000011d150c60,0x000000011d150e20] = 448
 stub code      [0x000000011d150e20,0x000000011d150e90] = 112
 oops           [0x000000011d150e90,0x000000011d150e98] = 8
 metadata       [0x000000011d150e98,0x000000011d150ea0] = 8
 scopes data    [0x000000011d150ea0,0x000000011d150f50] = 176
 scopes pcs     [0x000000011d150f50,0x000000011d1510d0] = 384
 dependencies   [0x000000011d1510d0,0x000000011d1510d8] = 8
----------------------------------------------------------------------
jit/Fib.fib(I)I  [0x000000011d150c60, 0x000000011d150e90]  560 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000014f9a4418} 'fib' '(I)I' in 'jit/Fib'
  # parm0:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011d150c60: mov    %eax,-0x14000(%rsp)
  0x000000011d150c67: push   %rbp
  0x000000011d150c68: sub    $0x60,%rsp
  0x000000011d150c6c: movabs $0x14f9a45c0,%rdi
  0x000000011d150c76: mov    0x18(%rdi),%ebx
  0x000000011d150c79: add    $0x8,%ebx
  0x000000011d150c7c: mov    %ebx,0x18(%rdi)
  0x000000011d150c7f: and    $0x3ff8,%ebx
  0x000000011d150c85: cmp    $0x0,%ebx
  0x000000011d150c88: je     0x000000011d150daf  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@0 (line 10)

  0x000000011d150c8e: cmp    $0x0,%esi
  0x000000011d150c91: jle    0x000000011d150d9a  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@1 (line 10)

  0x000000011d150c97: cmp    $0x1,%esi
  0x000000011d150c9a: je     0x000000011d150d85  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@8 (line 12)

  0x000000011d150ca0: mov    %rsi,%rdi
  0x000000011d150ca3: dec    %edi
  0x000000011d150ca5: cmp    $0x0,%edi
  0x000000011d150ca8: jg     0x000000011d150cb8  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@1 (line 10)
                                                ; - jit.Fib::fib@16 (line 15)

  0x000000011d150cae: mov    $0x0,%edi
  0x000000011d150cb3: jmpq   0x000000011d150d09  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@19 (line 15)

  0x000000011d150cb8: cmp    $0x1,%edi
  0x000000011d150cbb: jne    0x000000011d150ccb  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@8 (line 12)
                                                ; - jit.Fib::fib@16 (line 15)

  0x000000011d150cc1: mov    $0x1,%edi
  0x000000011d150cc6: jmpq   0x000000011d150d09  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@19 (line 15)

  0x000000011d150ccb: mov    %esi,0x44(%rsp)
  0x000000011d150ccf: mov    %rdi,%rbx
  0x000000011d150cd2: dec    %ebx
  0x000000011d150cd4: mov    %rbx,%rsi          ;*invokestatic fib {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@16 (line 15)
                                                ; - jit.Fib::fib@16 (line 15)

  0x000000011d150cd7: mov    %edi,0x40(%rsp)
  0x000000011d150cdb: nopl   0x0(%rax)
  0x000000011d150cdf: callq  0x000000011d150c60  ; ImmutableOopMap{}
                                                ;*invokestatic fib {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@16 (line 15)
                                                ; - jit.Fib::fib@16 (line 15)
                                                ;   {static_call}
  0x000000011d150ce4: mov    0x40(%rsp),%edi
  0x000000011d150ce8: sub    $0x2,%edi
  0x000000011d150ceb: mov    %rdi,%rsi          ;*invokestatic fib {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@22 (line 15)
                                                ; - jit.Fib::fib@16 (line 15)

  0x000000011d150cee: mov    %eax,0x48(%rsp)
  0x000000011d150cf2: nopl   0x0(%rax,%rax,1)
  0x000000011d150cf7: callq  0x000000011d150c60  ; ImmutableOopMap{}
                                                ;*invokestatic fib {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@22 (line 15)
                                                ; - jit.Fib::fib@16 (line 15)
                                                ;   {static_call}
  0x000000011d150cfc: mov    0x48(%rsp),%esi
  0x000000011d150d00: add    %eax,%esi
  0x000000011d150d02: mov    %rsi,%rdi          ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@19 (line 15)

  0x000000011d150d05: mov    0x44(%rsp),%esi
  0x000000011d150d09: sub    $0x2,%esi
  0x000000011d150d0c: cmp    $0x0,%esi
  0x000000011d150d0f: jle    0x000000011d150d63  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@1 (line 10)
                                                ; - jit.Fib::fib@22 (line 15)

  0x000000011d150d15: cmp    $0x1,%esi
  0x000000011d150d18: jne    0x000000011d150d28  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@8 (line 12)
                                                ; - jit.Fib::fib@22 (line 15)

  0x000000011d150d1e: mov    $0x1,%esi
  0x000000011d150d23: jmpq   0x000000011d150d70  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@25 (line 15)

  0x000000011d150d28: mov    %edi,0x50(%rsp)
  0x000000011d150d2c: mov    %rsi,%rbx
  0x000000011d150d2f: dec    %ebx
  0x000000011d150d31: mov    %esi,0x4c(%rsp)
  0x000000011d150d35: mov    %rbx,%rsi          ;*invokestatic fib {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@16 (line 15)
                                                ; - jit.Fib::fib@22 (line 15)

  0x000000011d150d38: nopl   0x0(%rax)
  0x000000011d150d3f: callq  0x000000011d150c60  ; ImmutableOopMap{}
                                                ;*invokestatic fib {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@16 (line 15)
                                                ; - jit.Fib::fib@22 (line 15)
                                                ;   {static_call}
  0x000000011d150d44: mov    0x4c(%rsp),%esi
  0x000000011d150d48: sub    $0x2,%esi
  0x000000011d150d4b: mov    %eax,0x54(%rsp)
  0x000000011d150d4f: callq  0x000000011d150c60  ; ImmutableOopMap{}
                                                ;*invokestatic fib {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@22 (line 15)
                                                ; - jit.Fib::fib@22 (line 15)
                                                ;   {static_call}
  0x000000011d150d54: mov    0x54(%rsp),%esi
  0x000000011d150d58: add    %eax,%esi
  0x000000011d150d5a: mov    0x50(%rsp),%edi
  0x000000011d150d5e: jmpq   0x000000011d150d70
  0x000000011d150d63: mov    %edi,0x50(%rsp)
  0x000000011d150d67: mov    $0x0,%esi          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@25 (line 15)

  0x000000011d150d6c: mov    0x50(%rsp),%edi
  0x000000011d150d70: add    %edi,%esi
  0x000000011d150d72: mov    %rsi,%rax
  0x000000011d150d75: add    $0x60,%rsp
  0x000000011d150d79: pop    %rbp
  0x000000011d150d7a: mov    0x108(%r15),%r10
  0x000000011d150d81: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d150d84: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@26 (line 15)

  0x000000011d150d85: mov    $0x1,%eax
  0x000000011d150d8a: add    $0x60,%rsp
  0x000000011d150d8e: pop    %rbp
  0x000000011d150d8f: mov    0x108(%r15),%r10
  0x000000011d150d96: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d150d99: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jit.Fib::fib@12 (line 13)

  0x000000011d150d9a: mov    $0x0,%eax
  0x000000011d150d9f: add    $0x60,%rsp
  0x000000011d150da3: pop    %rbp
  0x000000011d150da4: mov    0x108(%r15),%r10
  0x000000011d150dab: test   %eax,(%r10)        ;   {poll_return}
  0x000000011d150dae: retq   
  0x000000011d150daf: movabs $0x14f9a4418,%r10  ;   {metadata({method} {0x000000014f9a4418} 'fib' '(I)I' in 'jit/Fib')}
  0x000000011d150db9: mov    %r10,0x8(%rsp)
  0x000000011d150dbe: movq   $0xffffffffffffffff,(%rsp)
  0x000000011d150dc6: callq  0x000000011c691600  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - jit.Fib::fib@-1 (line 10)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011d150dcb: jmpq   0x000000011d150c8e
  0x000000011d150dd0: nop
  0x000000011d150dd1: nop
  0x000000011d150dd2: mov    0x420(%r15),%rax
  0x000000011d150dd9: movabs $0x0,%r10
  0x000000011d150de3: mov    %r10,0x420(%r15)
  0x000000011d150dea: movabs $0x0,%r10
  0x000000011d150df4: mov    %r10,0x428(%r15)
  0x000000011d150dfb: add    $0x60,%rsp
  0x000000011d150dff: pop    %rbp
  0x000000011d150e00: jmpq   0x000000011c68c480  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011d150e05: hlt    
  0x000000011d150e06: hlt    
  0x000000011d150e07: hlt    
  0x000000011d150e08: hlt    
  0x000000011d150e09: hlt    
  0x000000011d150e0a: hlt    
  0x000000011d150e0b: hlt    
  0x000000011d150e0c: hlt    
  0x000000011d150e0d: hlt    
  0x000000011d150e0e: hlt    
  0x000000011d150e0f: hlt    
  0x000000011d150e10: hlt    
  0x000000011d150e11: hlt    
  0x000000011d150e12: hlt    
  0x000000011d150e13: hlt    
  0x000000011d150e14: hlt    
  0x000000011d150e15: hlt    
  0x000000011d150e16: hlt    
  0x000000011d150e17: hlt    
  0x000000011d150e18: hlt    
  0x000000011d150e19: hlt    
  0x000000011d150e1a: hlt    
  0x000000011d150e1b: hlt    
  0x000000011d150e1c: hlt    
  0x000000011d150e1d: hlt    
  0x000000011d150e1e: hlt    
  0x000000011d150e1f: hlt    
[Stub Code]
  0x000000011d150e20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000000011d150e25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d150e2f: jmpq   0x000000011d150e2f  ;   {runtime_call}
  0x000000011d150e34: nop
  0x000000011d150e35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d150e3f: jmpq   0x000000011d150e3f  ;   {runtime_call}
  0x000000011d150e44: nop
  0x000000011d150e45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d150e4f: jmpq   0x000000011d150e4f  ;   {runtime_call}
  0x000000011d150e54: nop
  0x000000011d150e55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011d150e5f: jmpq   0x000000011d150e5f  ;   {runtime_call}
[Exception Handler]
  0x000000011d150e64: callq  0x000000011c68ea80  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011d150e69: movabs $0x10eff3493,%rdi  ;   {external_word}
  0x000000011d150e73: and    $0xfffffffffffffff0,%rsp
  0x000000011d150e77: callq  0x000000010ed57808  ;   {runtime_call MacroAssembler::debug64(char*, long long, long long*)}
  0x000000011d150e7c: hlt    
[Deopt Handler Code]
  0x000000011d150e7d: movabs $0x11d150e7d,%r10  ;   {section_word}
  0x000000011d150e87: push   %r10
  0x000000011d150e89: jmpq   0x000000011c5ca320  ;   {runtime_call DeoptimizationBlob}
  0x000000011d150e8e: hlt    
  0x000000011d150e8f: hlt    

ImmutableOopMap{}pc offsets: 132 156 228 244 363 512559680
